id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/OpenGene/fastp/issues/460:774,interoperability,adapt,adapter,774,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:821,interoperability,Adapt,Adapter,821,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:882,interoperability,adapt,adapter,882,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:929,interoperability,Adapt,Adapter,929,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1030,interoperability,specif,specified,1030,"cing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.f",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1731,interoperability,adapt,adapter,1731,"tp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1779,interoperability,adapt,adapters,1779,"equence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3060,interoperability,share,shared,3060,"125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3495,interoperability,Socket,Socket,3495,"ES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/ada",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3502,interoperability,messag,messages,3502,"78_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/Tr",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3520,interoperability,Socket,Socket,3520,"astq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:3",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3527,interoperability,messag,messages,3527,"--in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:t",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4495,interoperability,adapt,adapters,4495,"et messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4845,interoperability,adapt,adapters,4845,"ns -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 242",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5783,interoperability,adapt,adapters,5783,"v/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from h",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5984,interoperability,share,shared,5984,"g Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6428,interoperability,Socket,Socket,6428," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6435,interoperability,messag,messages,6435," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6453,interoperability,Socket,Socket,6453," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6460,interoperability,messag,messages,6460," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6967,interoperability,idl,idle,6967," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:7030,interoperability,specif,specified,7030," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:774,modifiability,adapt,adapter,774,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:821,modifiability,Adapt,Adapter,821,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:882,modifiability,adapt,adapter,882,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:929,modifiability,Adapt,Adapter,929,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1731,modifiability,adapt,adapter,1731,"tp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1779,modifiability,adapt,adapters,1779,"equence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4495,modifiability,adapt,adapters,4495,"et messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4845,modifiability,adapt,adapters,4845,"ns -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 242",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5783,modifiability,adapt,adapters,5783,"v/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from h",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:190,performance,time,time,190,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2388,performance,time,time,2388,"80. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switche",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2426,performance,time,timed,2426,"0 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switche",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2907,performance,time,time,2907,"th/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2939,performance,time,time,2939,"ression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmo",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2973,performance,CPU,CPU,2973,"12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3019,performance,time,time,3019,"S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3295,performance,I/O,I/O,3295,"disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3305,performance,fault,faults,3305,"m_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3348,performance,fault,faults,3348,"ble_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3895,performance,time,time,3895,"ng"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using Prefi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5576,performance,time,timed,5576,"```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5830,performance,time,time,5830,"momatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplemen",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5862,performance,time,time,5862,"-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.3",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5897,performance,CPU,CPU,5897,"air: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are p",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5943,performance,time,time,5943,"'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6220,performance,I/O,I/O,6220," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6230,performance,fault,faults,6230," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6275,performance,fault,faults,6275," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:9,reliability,slo,slow,9,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:93,reliability,slo,slower,93,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1655,reliability,fail,failed,1655,"_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unp",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:1691,reliability,fail,failed,1691,"ng \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S1",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3305,reliability,fault,faults,3305,"m_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3348,reliability,fault,faults,3348,"ble_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6230,reliability,fault,faults,6230," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6275,reliability,fault,faults,6275," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:738,safety,log,log,738,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:754,safety,log,log,754,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:764,safety,Detect,Detecting,764,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:872,safety,Detect,Detecting,872,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3305,safety,fault,faults,3305,"m_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3348,safety,fault,faults,3348,"ble_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3460,safety,input,inputs,3460,"--compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMIN",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4552,safety,log,log,4552,"ls delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed succes",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4574,safety,log,log,4574,"size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5372,safety,Input,Input,5372," >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5538,safety,Compl,Completed,5538,"mmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6230,safety,fault,faults,6230," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6275,safety,fault,faults,6275," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6388,safety,input,inputs,6388," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6871,safety,Input,Input,6871," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:7047,safety,log,log,7047," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:738,security,log,log,738,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:754,security,log,log,754,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:764,security,Detect,Detecting,764,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:872,security,Detect,Detecting,872,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3495,security,Soc,Socket,3495,"ES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/ada",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3520,security,Soc,Socket,3520,"astq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:3",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3549,security,Sign,Signals,3549,"_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.l",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4552,security,log,log,4552,"ls delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed succes",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4574,security,log,log,4574,"size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5538,security,Compl,Completed,5538,"mmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6428,security,Soc,Socket,6428," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6453,security,Soc,Socket,6453," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6482,security,Sign,Signals,6482," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:7047,security,log,log,7047," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:738,testability,log,log,738,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:754,testability,log,log,754,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3375,testability,context,context,3375,"v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3414,testability,context,context,3414,"d being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4552,testability,log,log,4552,"ls delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed succes",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:4574,testability,log,log,4574,"size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6303,testability,context,context,6303," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6341,testability,context,context,6341," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:7047,testability,log,log,7047," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:162,usability,command,command,162,"fastp is slow; I'm evaluating replacing our pipeline from trimmomatic to fastp, but fastp is slower than trimmomatic. fastp: 2:18.08. trimmomatic: 1:09.35. fastp command:. ```bash. /usr/bin/time -v /path/to/fastp-v0.23.2/fastp --compression 2 --thread $(nproc) \. --in1 WES-NA12878_S125_L002_R1_001.fastq.gz \. --in2 WES-NA12878_S125_L002_R2_001.fastq.gz \. --out1 WES-NA12878_S125_L002_R1_001.clean.fastq.gz \. --unpaired1 WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz \. --out2 WES-NA12878_S125_L002_R2_001.clean.fastq.gz \. --unpaired2 WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz \. --detect_adapter_for_pe \. --dont_eval_duplication \. --disable_trim_poly_g \. --disable_quality_filtering \. --disable_length_filtering \. &>fastp.log. ```. fastp.log. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 96. Read1 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9578075227(97.1477%). Q30 bases: 9139319600(92.6975%). Read2 before filtering:. total reads: 65293316. total bases: 9859290716. Q20 bases: 9590024704(97.2689%). Q30 bases: 9131923230(92.6225%). Read1 after filtering:. total reads: 65293298. total bases: 9021103280. Q20 bases: 8806066506(97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2412,usability,Command,Command,2412,"97.6163%). Q30 bases: 8429071860(93.4373%). Read2 after filtering:. total reads: 65293298. total bases: 9023606648. Q20 bases: 8796134635(97.4791%). Q30 bases: 8395517424(93.0395%). Filtering result:. reads passed filter: 130586596. reads failed due to low quality: 0. reads failed due to too many N: 0. reads with adapter trimmed: 42098347. bases trimmed due to adapters: 1673866640. Insert size peak (evaluated by paired-end reads): 131. JSON report: fastp.json. HTML report: fastp.html. /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary co",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:2902,usability,User,User,2902,". /path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering. fastp v0.23.2, time used: 138 seconds. Command being timed: ""/path/to/fastp-v0.23.2/fastp --compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v j",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3460,usability,input,inputs,3460,"--compression 2 --thread 96 --in1 WES-NA12878_S125_L002_R1.fastq.gz --in2 WES-NA12878_S125_L002_R2.fastq.gz --out1 WES-NA12878_S125_L002_R1.clean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMIN",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3601,usability,statu,status,3601,"lean.fastq.gz --unpaired1 WES-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:3629,usability,command,command,3629,"-NA12878_S125_L002_R1.unpaired.fastq.gz --out2 WES-NA12878_S125_L002_R2.clean.fastq.gz --unpaired2 WES-NA12878_S125_L002_R2.unpaired.fastq.gz --detect_adapter_for_pe --dont_eval_duplication --disable_trim_poly_g --disable_quality_filtering --disable_length_filtering"". User time (seconds): 1640.37. System time (seconds): 11.35. Percent of CPU this job got: 1196%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:18.08. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 1820840. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 4. Minor (reclaiming a frame) page faults: 1929753. Voluntary context switches: 7396816. Involuntary context switches: 2598. Swaps: 0. File system inputs: 0. File system outputs: 0. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. trimmomatic command:. ```bash. export PATH=/path/to/htslib-1.16:$PATH. export PATH=/usr/lib/jvm/zulu17/bin:$PATH. export LD_LIBRARY_PATH=/path/to/zlib-cloudflare/build-avx512. export JAVA_TOOL_OPTIONS='-XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3'. /usr/bin/time -v java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads $(nproc) -phred33 \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R1_001.fastq.gz) \. <(bgzip -c -d -@ $(nproc) WES-NA12878_S125_L002_R2_001.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R1_001.unpaired.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.clean.fastq.gz) \. >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimen",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5372,usability,Input,Input,5372," >(bgzip -c -l 2 -@ $(nproc) >WES-NA12878_S125_L002_R2_001.unpaired.fastq.gz) \. ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true \. &>trimmomatic.log. ```. trimmomatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5562,usability,Command,Command,5562,"momatic.log. ```. Picked up JAVA_TOOL_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseParallelGC -XX:UseAVX=3. TrimmomaticPE: Started with arguments:. -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:5825,usability,User,User,5825,"/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true. Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'. Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'. Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supp",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6388,usability,input,inputs,6388," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6534,usability,statu,status,6534," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6871,usability,Input,Input,6871," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/460:6938,usability,command,commands,6938," Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'. Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'. ILLUMINACLIP: Using 1 prefix pairs, 4 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences. Input Read Pairs: 65293316 Both Surviving: 65293293 (100.00%) Forward Only Surviving: 2 (0.00%) Reverse Only Surviving: 21 (0.00%) Dropped: 0 (0.00%). TrimmomaticPE: Completed successfully. Command being timed: ""java -XX:+UseNUMA -jar /path/to/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 96 -phred33 /dev/fd/63 /dev/fd/62 /dev/fd/61 /dev/fd/60 /dev/fd/59 /dev/fd/58 ILLUMINACLIP:/path/to/Trimmomatic-0.39/adapters/TruSeq3-PE-2.fa:2:30:10:1:true"". User time (seconds): 2421.43. System time (seconds): 104.66. Percent of CPU this job got: 3642%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:09.35. Average shared text size (kbytes): 0. Average unshared data size (kbytes): 0. Average stack size (kbytes): 0. Average total size (kbytes): 0. Maximum resident set size (kbytes): 10842944. Average resident set size (kbytes): 0. Major (requiring I/O) page faults: 166. Minor (reclaiming a frame) page faults: 11997356. Voluntary context switches: 298764. Involuntary context switches: 23814. Swaps: 0. File system inputs: 8200. File system outputs: 480. Socket messages sent: 0. Socket messages received: 0. Signals delivered: 0. Page size (bytes): 4096. Exit status: 0. ```. OS:. Ubuntu 22.04.1 LTS 5.15.0-58-generic. Hardware:. 2x Intel Xeon Gold 6342. 2TB RAM (16x 128GB DDR4-3200). 4x 4TB PCI-E 4.0 NVME SSD RAID 0. fastp is download from http://opengene.org/fastp/fastp.0.23.2. trimmomatic is download from http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip. Input and output files are placed on ramdisk (`/dev/shm`). Execute commands while the system is idle. I see `WARNING: fastp uses up to 16 threads although you specified 96` in log, what part of the algorithm limits the upper limit of 16 . threads?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/460
https://github.com/OpenGene/fastp/issues/461:70,energy efficiency,adapt,adapter,70,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:95,energy efficiency,adapt,adapters,95,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:70,integrability,adapt,adapter,70,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:95,integrability,adapt,adapters,95,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:136,integrability,filter,filtered,136,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:207,integrability,filter,filtering,207,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:70,interoperability,adapt,adapter,70,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:95,interoperability,adapt,adapters,95,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:70,modifiability,adapt,adapter,70,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:95,modifiability,adapt,adapters,95,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:14,reliability,doe,doesn,14,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:230,reliability,doe,doesn,230,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/461:311,reliability,doe,doesn,311,"The -L option doesn't work; Hi thank you for the software. I added an adapter file to trim the adapters, I found that most of reads are filtered by too_short_reads, therefore I used -L to disable the length filtering, however, it doesn't work. Could you check that? Other options such as --length_required also doesn't work.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/461
https://github.com/OpenGene/fastp/issues/462:108,deployability,version,version,108,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:108,integrability,version,version,108,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:108,modifiability,version,version,108,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:6,performance,memor,memory,6,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:55,performance,memor,memory,55,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:6,usability,memor,memory,6,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/462:55,usability,memor,memory,55,"merge memory consume ; when WGS trimming add --merge , memory increase rapidly to cause fastp killed. fastp version 0.23.2 and 0.20.1 .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/462
https://github.com/OpenGene/fastp/issues/464:58,safety,test,tested,58,"fastp trim polyG is not working when the data is large; I tested the same command with different two datasets, polyG still remains if the data is large (i tested 60M SE reads). polyG is still there and not be trimmed. fastp --in1 test_1.gz -g --poly_g_min_len=4 --out1 test_fp_1.gz . Any suggestions? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/464
https://github.com/OpenGene/fastp/issues/464:155,safety,test,tested,155,"fastp trim polyG is not working when the data is large; I tested the same command with different two datasets, polyG still remains if the data is large (i tested 60M SE reads). polyG is still there and not be trimmed. fastp --in1 test_1.gz -g --poly_g_min_len=4 --out1 test_fp_1.gz . Any suggestions? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/464
https://github.com/OpenGene/fastp/issues/464:58,testability,test,tested,58,"fastp trim polyG is not working when the data is large; I tested the same command with different two datasets, polyG still remains if the data is large (i tested 60M SE reads). polyG is still there and not be trimmed. fastp --in1 test_1.gz -g --poly_g_min_len=4 --out1 test_fp_1.gz . Any suggestions? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/464
https://github.com/OpenGene/fastp/issues/464:155,testability,test,tested,155,"fastp trim polyG is not working when the data is large; I tested the same command with different two datasets, polyG still remains if the data is large (i tested 60M SE reads). polyG is still there and not be trimmed. fastp --in1 test_1.gz -g --poly_g_min_len=4 --out1 test_fp_1.gz . Any suggestions? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/464
https://github.com/OpenGene/fastp/issues/464:74,usability,command,command,74,"fastp trim polyG is not working when the data is large; I tested the same command with different two datasets, polyG still remains if the data is large (i tested 60M SE reads). polyG is still there and not be trimmed. fastp --in1 test_1.gz -g --poly_g_min_len=4 --out1 test_fp_1.gz . Any suggestions? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/464
https://github.com/OpenGene/fastp/issues/465:140,integrability,filter,filter,140,"using --dedup ro remove duplicated reads; Hi, I was wondering about how to remove de-duplicated reads using `fastp`. I have used `fastp` to filter/trim my fastq files with the following command:. ```. fastp --in1 ${prefix}$file.conc.R1.fastq.gz --in2 ${prefix}${file}.conc.R2.fastq.gz \. --thread 16 \. --trim_front2 3 \. -p \. --dedup --dup_calc_accuracy 5 \. --qualified_quality_phred 15 \. --unqualified_percent_limit 40 \. --length_required 15 \. --detect_adapter_for_pe \. --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA \. --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\. --unpaired1 trimmedData/${file}.unpaired.fastq.gz --unpaired2 trimmedData/${file}.unpaired.fastq.gz \. ```. But, when I look at the html report after the run, in the section ""After filtering: read2: overrepresented sequences"" there is a long list of duplicated reads. How do I understand this? . Is the de-duplication happens afterwards? Are the duplicated reads still in my fastq file? thanks. Assa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/465
https://github.com/OpenGene/fastp/issues/465:773,integrability,filter,filtering,773,"using --dedup ro remove duplicated reads; Hi, I was wondering about how to remove de-duplicated reads using `fastp`. I have used `fastp` to filter/trim my fastq files with the following command:. ```. fastp --in1 ${prefix}$file.conc.R1.fastq.gz --in2 ${prefix}${file}.conc.R2.fastq.gz \. --thread 16 \. --trim_front2 3 \. -p \. --dedup --dup_calc_accuracy 5 \. --qualified_quality_phred 15 \. --unqualified_percent_limit 40 \. --length_required 15 \. --detect_adapter_for_pe \. --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA \. --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\. --unpaired1 trimmedData/${file}.unpaired.fastq.gz --unpaired2 trimmedData/${file}.unpaired.fastq.gz \. ```. But, when I look at the html report after the run, in the section ""After filtering: read2: overrepresented sequences"" there is a long list of duplicated reads. How do I understand this? . Is the de-duplication happens afterwards? Are the duplicated reads still in my fastq file? thanks. Assa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/465
https://github.com/OpenGene/fastp/issues/465:869,testability,understand,understand,869,"using --dedup ro remove duplicated reads; Hi, I was wondering about how to remove de-duplicated reads using `fastp`. I have used `fastp` to filter/trim my fastq files with the following command:. ```. fastp --in1 ${prefix}$file.conc.R1.fastq.gz --in2 ${prefix}${file}.conc.R2.fastq.gz \. --thread 16 \. --trim_front2 3 \. -p \. --dedup --dup_calc_accuracy 5 \. --qualified_quality_phred 15 \. --unqualified_percent_limit 40 \. --length_required 15 \. --detect_adapter_for_pe \. --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA \. --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\. --unpaired1 trimmedData/${file}.unpaired.fastq.gz --unpaired2 trimmedData/${file}.unpaired.fastq.gz \. ```. But, when I look at the html report after the run, in the section ""After filtering: read2: overrepresented sequences"" there is a long list of duplicated reads. How do I understand this? . Is the de-duplication happens afterwards? Are the duplicated reads still in my fastq file? thanks. Assa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/465
https://github.com/OpenGene/fastp/issues/465:186,usability,command,command,186,"using --dedup ro remove duplicated reads; Hi, I was wondering about how to remove de-duplicated reads using `fastp`. I have used `fastp` to filter/trim my fastq files with the following command:. ```. fastp --in1 ${prefix}$file.conc.R1.fastq.gz --in2 ${prefix}${file}.conc.R2.fastq.gz \. --thread 16 \. --trim_front2 3 \. -p \. --dedup --dup_calc_accuracy 5 \. --qualified_quality_phred 15 \. --unqualified_percent_limit 40 \. --length_required 15 \. --detect_adapter_for_pe \. --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA \. --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT\. --unpaired1 trimmedData/${file}.unpaired.fastq.gz --unpaired2 trimmedData/${file}.unpaired.fastq.gz \. ```. But, when I look at the html report after the run, in the section ""After filtering: read2: overrepresented sequences"" there is a long list of duplicated reads. How do I understand this? . Is the de-duplication happens afterwards? Are the duplicated reads still in my fastq file? thanks. Assa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/465
https://github.com/OpenGene/fastp/issues/467:111,integrability,filter,filters,111,"Workflow; Hi!! . I have a question about the workflow of fastp... . Which of those do it first, merge or apply filters? I want to know to decide how demanding i am with those filters",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/467
https://github.com/OpenGene/fastp/issues/467:175,integrability,filter,filters,175,"Workflow; Hi!! . I have a question about the workflow of fastp... . Which of those do it first, merge or apply filters? I want to know to decide how demanding i am with those filters",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/467
https://github.com/OpenGene/fastp/issues/467:0,usability,Workflow,Workflow,0,"Workflow; Hi!! . I have a question about the workflow of fastp... . Which of those do it first, merge or apply filters? I want to know to decide how demanding i am with those filters",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/467
https://github.com/OpenGene/fastp/issues/467:45,usability,workflow,workflow,45,"Workflow; Hi!! . I have a question about the workflow of fastp... . Which of those do it first, merge or apply filters? I want to know to decide how demanding i am with those filters",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/467
https://github.com/OpenGene/fastp/issues/468:9,availability,operat,operations,9,"Order of operations - documentation; Hi, . Is it possible to add a section documenting order of operations? . For example - is deduplication carried out before or after filtering\trimming? . Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/468
https://github.com/OpenGene/fastp/issues/468:96,availability,operat,operations,96,"Order of operations - documentation; Hi, . Is it possible to add a section documenting order of operations? . For example - is deduplication carried out before or after filtering\trimming? . Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/468
https://github.com/OpenGene/fastp/issues/468:169,integrability,filter,filtering,169,"Order of operations - documentation; Hi, . Is it possible to add a section documenting order of operations? . For example - is deduplication carried out before or after filtering\trimming? . Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/468
https://github.com/OpenGene/fastp/issues/468:22,usability,document,documentation,22,"Order of operations - documentation; Hi, . Is it possible to add a section documenting order of operations? . For example - is deduplication carried out before or after filtering\trimming? . Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/468
https://github.com/OpenGene/fastp/issues/468:75,usability,document,documenting,75,"Order of operations - documentation; Hi, . Is it possible to add a section documenting order of operations? . For example - is deduplication carried out before or after filtering\trimming? . Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/468
https://github.com/OpenGene/fastp/pull/469:477,availability,error,error,477,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:524,availability,error,error,524,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:600,availability,error,errors,600,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:708,availability,error,error,708,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:777,availability,error,error,777,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:168,deployability,contain,contains,168,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:442,deployability,patch,patch,442,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:646,deployability,compos,composing,646,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:807,deployability,contain,contain,807,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:740,interoperability,format,formatted,740,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:646,modifiability,compos,composing,646,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:477,performance,error,error,477,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:524,performance,error,error,524,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:600,performance,error,errors,600,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:708,performance,error,error,708,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:777,performance,error,error,777,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:76,reliability,doe,does,76,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:37,safety,input,input,37,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:124,safety,input,input,124,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:430,safety,input,input,430,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:442,safety,patch,patch,442,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:477,safety,error,error,477,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:492,safety,input,input,492,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:524,safety,error,error,524,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:540,safety,input,input,540,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:600,safety,error,errors,600,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:708,safety,error,error,708,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:777,safety,error,error,777,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:442,security,patch,patch,442,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:37,usability,input,input,37,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:124,usability,input,input,124,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:255,usability,paus,pauses,255,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:430,usability,input,input,430,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:477,usability,error,error,477,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:492,usability,input,input,492,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:524,usability,error,error,524,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:540,usability,input,input,540,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:600,usability,error,errors,600,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:708,usability,error,error,708,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/pull/469:777,usability,error,error,777,"Fix fastp hanging forever on invalid input files; root cause: the processor does no longer process reads because one of the input files is at EOF while the other still contains reads. When the difference in reads is sufficiently large, the mechanism that pauses a reader when the processor is too far behind kicks in and blocks the reader forever since the processor will no longer process reads. This will only happen on invalid input. This patch causes fastp to exit with an error when the input is invalid. * generate an error if zipped input files are truncated. * skipping individual reads with errors causes problems for PE since the reads composing a pair wouldn´t match anymore. Instead, generate an error for obviously incorrectly formatted fastq files. * generate an error when paired files don´t contain same amount of reads. This fixes issues like #455, possibly #448, #425, #410, #400, #378, #340 (partial), #333, ...",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/469
https://github.com/OpenGene/fastp/issues/470:72,safety,review,reviewing,72,"Removal of degenerated primers in --adaper_fasta file; Hi,. I have been reviewing the fastp documentation and I can't find if this software supports degenerate primers removal, that is, if fastp recognizes the IPAC degenerate codes in the primers file that we are using through ""--adapter_fasta"" option included in fastp. The problem is that the PCR primers that we have in the ""--adapter_fasta"" file are not being removed from the PE reads. The primers include several degenerate positions. Has anyone had this problem? Thanks in advance for any responses/comments. Regards",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/470
https://github.com/OpenGene/fastp/issues/470:72,testability,review,reviewing,72,"Removal of degenerated primers in --adaper_fasta file; Hi,. I have been reviewing the fastp documentation and I can't find if this software supports degenerate primers removal, that is, if fastp recognizes the IPAC degenerate codes in the primers file that we are using through ""--adapter_fasta"" option included in fastp. The problem is that the PCR primers that we have in the ""--adapter_fasta"" file are not being removed from the PE reads. The primers include several degenerate positions. Has anyone had this problem? Thanks in advance for any responses/comments. Regards",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/470
https://github.com/OpenGene/fastp/issues/470:92,usability,document,documentation,92,"Removal of degenerated primers in --adaper_fasta file; Hi,. I have been reviewing the fastp documentation and I can't find if this software supports degenerate primers removal, that is, if fastp recognizes the IPAC degenerate codes in the primers file that we are using through ""--adapter_fasta"" option included in fastp. The problem is that the PCR primers that we have in the ""--adapter_fasta"" file are not being removed from the PE reads. The primers include several degenerate positions. Has anyone had this problem? Thanks in advance for any responses/comments. Regards",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/470
https://github.com/OpenGene/fastp/issues/470:140,usability,support,supports,140,"Removal of degenerated primers in --adaper_fasta file; Hi,. I have been reviewing the fastp documentation and I can't find if this software supports degenerate primers removal, that is, if fastp recognizes the IPAC degenerate codes in the primers file that we are using through ""--adapter_fasta"" option included in fastp. The problem is that the PCR primers that we have in the ""--adapter_fasta"" file are not being removed from the PE reads. The primers include several degenerate positions. Has anyone had this problem? Thanks in advance for any responses/comments. Regards",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/470
https://github.com/OpenGene/fastp/issues/472:46,interoperability,standard,standard,46,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:315,interoperability,format,format,315,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:95,safety,valid,validation,95,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:322,safety,valid,validate,322,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:95,security,validat,validation,95,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:322,security,validat,validate,322,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/472:293,usability,tool,tools,293,"merge PE reads do not write fastq output in a standard way, which would cause problem in reads validation.; When the 3rd line of fastp file is not just ""+"", usually the same as 1st line, fastp would only change the 1st line but leave the 3rd line unchanged. This would cause problems in other tools, which required format validate. . Example:. ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. The correct output should be . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```. or . ```. @A00212:184:HHNMCDSX3:1:1101:5294:1016 merged_77_0. GACGACCCATTCGAACGTCTGCCCTATCAACTTTCGATGGTAGTCGCCGTGCCTACCATGGTGACCACGGGTGACGG. +. FF,FFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF,FFF,FFFFFF:FFFFFFFFFFFFFF,FFFFFFFF. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/472
https://github.com/OpenGene/fastp/issues/473:221,usability,indicat,indicated,221,"Unexpected filenames; Dear Developers,. I tried aggregating fastp reports (multiqc *fastp.json). And when I examined the html output, I realised the filenames had extra names. For example the original name SRR10903401 is indicated in the html report as SRR10903401_r1. I found this confusing and I am checking in to see if this is the expected behavior of multiqc. . I have attached the fastp json reports as well as the multiqc report . Thanks. [multiqc_report.zip](https://github.com/OpenGene/fastp/files/11011883/multiqc_report.zip). [json_files.zip](https://github.com/OpenGene/fastp/files/11011864/json_files.zip).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/473
https://github.com/OpenGene/fastp/issues/473:344,usability,behavi,behavior,344,"Unexpected filenames; Dear Developers,. I tried aggregating fastp reports (multiqc *fastp.json). And when I examined the html output, I realised the filenames had extra names. For example the original name SRR10903401 is indicated in the html report as SRR10903401_r1. I found this confusing and I am checking in to see if this is the expected behavior of multiqc. . I have attached the fastp json reports as well as the multiqc report . Thanks. [multiqc_report.zip](https://github.com/OpenGene/fastp/files/11011883/multiqc_report.zip). [json_files.zip](https://github.com/OpenGene/fastp/files/11011864/json_files.zip).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/473
https://github.com/OpenGene/fastp/issues/474:1714,availability,echo,echo,1714,"EEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total r",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2033,availability,echo,echo,2033,"H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be ov",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2350,availability,echo,echo,2350,"AAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2844,deployability,fail,failed,2844,". # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2880,deployability,fail,failed,2880,"on now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2915,deployability,fail,failed,2915,"-i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCAC",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5643,deployability,fail,failed,5643,"4:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5679,deployability,fail,failed,5679,"CAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5714,deployability,fail,failed,5714,"CCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGC",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8424,deployability,fail,failed,8424,"LBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8460,deployability,fail,failed,8460,"GAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8495,deployability,fail,failed,8495,"GTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2513,energy efficiency,adapt,adapter,2513," WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2546,energy efficiency,adapt,adapter,2546,"front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2954,energy efficiency,adapt,adapter,2954,"fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2995,energy efficiency,adapt,adapters,2995," -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5312,energy efficiency,adapt,adapter,5312,"==============================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5345,energy efficiency,adapt,adapter,5345,"=============================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5753,energy efficiency,adapt,adapter,5753,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5794,energy efficiency,adapt,adapters,5794,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8093,energy efficiency,adapt,adapter,8093,"======================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8126,energy efficiency,adapt,adapter,8126,"=====================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8534,energy efficiency,adapt,adapter,8534,"TGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8575,energy efficiency,adapt,adapters,8575,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2513,integrability,adapt,adapter,2513," WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2546,integrability,adapt,adapter,2546,"front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2587,integrability,filter,filtering,2587,"CAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2697,integrability,filter,filtering,2697,"test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2795,integrability,Filter,Filtering,2795,"================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB5",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2827,integrability,filter,filter,2827,"est.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2954,integrability,adapt,adapter,2954,"fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2995,integrability,adapt,adapters,2995," -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5312,integrability,adapt,adapter,5312,"==============================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5345,integrability,adapt,adapter,5345,"=============================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5386,integrability,filter,filtering,5386,"86:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:2",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5496,integrability,filter,filtering,5496,"GCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5594,integrability,Filter,Filtering,5594,"EEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5626,integrability,filter,filter,5626,"BGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5753,integrability,adapt,adapter,5753,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5794,integrability,adapt,adapters,5794,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8093,integrability,adapt,adapter,8093,"======================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8126,integrability,adapt,adapter,8126,"=====================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8167,integrability,filter,filtering,8167,"===========. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8277,integrability,filter,filtering,8277,"TGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8375,integrability,Filter,Filtering,8375,"EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8407,integrability,filter,filter,8407,"NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:2",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8534,integrability,adapt,adapter,8534,"TGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8575,integrability,adapt,adapters,8575,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2513,interoperability,adapt,adapter,2513," WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2546,interoperability,adapt,adapter,2546,"front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2954,interoperability,adapt,adapter,2954,"fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2995,interoperability,adapt,adapters,2995," -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5312,interoperability,adapt,adapter,5312,"==============================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5345,interoperability,adapt,adapter,5345,"=============================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5753,interoperability,adapt,adapter,5753,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5794,interoperability,adapt,adapters,5794,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8093,interoperability,adapt,adapter,8093,"======================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8126,interoperability,adapt,adapter,8126,"=====================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8534,interoperability,adapt,adapter,8534,"TGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8575,interoperability,adapt,adapters,8575,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2513,modifiability,adapt,adapter,2513," WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2546,modifiability,adapt,adapter,2546,"front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2954,modifiability,adapt,adapter,2954,"fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2995,modifiability,adapt,adapters,2995," -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5312,modifiability,adapt,adapter,5312,"==============================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5345,modifiability,adapt,adapter,5345,"=============================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5753,modifiability,adapt,adapter,5753,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5794,modifiability,adapt,adapters,5794,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8093,modifiability,adapt,adapter,8093,"======================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8126,modifiability,adapt,adapter,8126,"=====================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8534,modifiability,adapt,adapter,8534,"TGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8575,modifiability,adapt,adapters,8575,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3289,performance,time,time,3289,"mp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. ==========",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6094,performance,time,time,6094,"1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. ==========",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8870,performance,time,time,8870,":H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. ==========",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1856,reliability,DOE,DOESN,1856,"GAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to l",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2844,reliability,fail,failed,2844,". # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2880,reliability,fail,failed,2880,"on now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2915,reliability,fail,failed,2915,"-i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCAC",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5643,reliability,fail,failed,5643,"4:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5679,reliability,fail,failed,5679,"CAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5714,reliability,fail,failed,5714,"CCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGC",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8424,reliability,fail,failed,8424,"LBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8460,reliability,fail,failed,8460,"GAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8495,reliability,fail,failed,8495,"GTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:524,safety,test,test,524,"global trimming trims too much when combined with quality pruning for SE data; Here is a simple example to demonstrate. The sequences are high quality and so will not be pruned for quality, but I wish to trim the first 6 bases. The trimming works correctly when only global trimming is on (`-f 6`; six bases are removed), and it works correctly when only quality pruning is on (`-5 -3`; no bases are removed), but it is incorrect when both are turned on (`-f 6 -5 -3`; *nine bases are removed*). . ```bash. cat <<EOT > /tmp/test.fastq. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1613,safety,test,test,1613,"ACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1632,safety,test,test,1632,"GAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1659,safety,test,test,1659,"TTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q3",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1677,safety,test,test,1677,". +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.93",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1702,safety,test,test,1702,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filteri",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1829,safety,test,test,1829,"ACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filt",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1926,safety,test,test,1926,"AAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1945,safety,test,test,1945,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. read",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1972,safety,test,test,1972,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1990,safety,test,test,1990,"EEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2021,safety,test,test,2021,"B502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rat",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2148,safety,test,test,2148,"GAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mamba",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2248,safety,test,test,2248,"EEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2267,safety,test,test,2267,"2016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2294,safety,test,test,2294,"4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time us",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2312,safety,test,test,2312," AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2338,safety,test,test,2338,"CCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:111",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2465,safety,test,test,2465,"6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2503,safety,Detect,Detecting,2503,"T. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2554,safety,detect,detected,2554," that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB50",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3093,safety,test,test,3093,"========================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3122,safety,test,test,3122,"============"". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3193,safety,test,test,3193,"runing on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3212,safety,test,test,3212,"s not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3239,safety,test,test,3239,"i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3257,safety,test,test,3257,"-o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE/",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5302,safety,Detect,Detecting,5302,"=======================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5353,safety,detect,detected,5353,"=====================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5892,safety,test,test,5892,"GCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5921,safety,test,test,5921,"ACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5992,safety,test,test,5992,"EEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6011,safety,test,test,6011,"EEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6038,safety,test,test,6038,"<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6056,safety,test,test,6056,"EEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/E",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8083,safety,Detect,Detecting,8083,"===============================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8134,safety,detect,detected,8134,"=============================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB5",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8673,safety,test,test,8673,"6 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8702,safety,test,test,8702,"CAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8773,safety,test,test,8773,"EEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8792,safety,test,test,8792,"EAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8819,safety,test,test,8819,"EEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8837,safety,test,test,8837,"E<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2503,security,Detect,Detecting,2503,"T. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2554,security,detect,detected,2554," that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB50",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5302,security,Detect,Detecting,5302,"=======================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5353,security,detect,detected,5353,"=====================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. TGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. TGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. TGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8083,security,Detect,Detecting,8083,"===============================================================================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8134,security,detect,detected,8134,"=============================================. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB5",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:89,testability,simpl,simple,89,"global trimming trims too much when combined with quality pruning for SE data; Here is a simple example to demonstrate. The sequences are high quality and so will not be pruned for quality, but I wish to trim the first 6 bases. The trimming works correctly when only global trimming is on (`-f 6`; six bases are removed), and it works correctly when only quality pruning is on (`-5 -3`; no bases are removed), but it is incorrect when both are turned on (`-f 6 -5 -3`; *nine bases are removed*). . ```bash. cat <<EOT > /tmp/test.fastq. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:524,testability,test,test,524,"global trimming trims too much when combined with quality pruning for SE data; Here is a simple example to demonstrate. The sequences are high quality and so will not be pruned for quality, but I wish to trim the first 6 bases. The trimming works correctly when only global trimming is on (`-f 6`; six bases are removed), and it works correctly when only quality pruning is on (`-5 -3`; no bases are removed), but it is incorrect when both are turned on (`-f 6 -5 -3`; *nine bases are removed*). . ```bash. cat <<EOT > /tmp/test.fastq. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1613,testability,test,test,1613,"ACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1632,testability,test,test,1632,"GAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1659,testability,test,test,1659,"TTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q3",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1677,testability,test,test,1677,". +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.93",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1702,testability,test,test,1702,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filteri",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1829,testability,test,test,1829,"ACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filt",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1926,testability,test,test,1926,"AAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1945,testability,test,test,1945,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. read",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1972,testability,test,test,1972,"EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:1990,testability,test,test,1990,"EEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2021,testability,test,test,2021,"B502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rat",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2148,testability,test,test,2148,"GAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mamba",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2248,testability,test,test,2248,"EEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2267,testability,test,test,2267,"2016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2294,testability,test,test,2294,"4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time us",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2312,testability,test,test,2312," AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2338,testability,test,test,2338,"CCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:111",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:2465,testability,test,test,2465,"6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3093,testability,test,test,3093,"========================================="". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3122,testability,test,test,3122,"============"". cat /tmp/test.trimmed.fastq. # this shows that quality pruning on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3193,testability,test,test,3193,"runing on its own is not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3212,testability,test,test,3212,"s not the problem. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3239,testability,test,test,3239,"i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:3257,testability,test,test,3257,"-o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. ```. RESULT. ```. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 344. Q20 bases: 331(96.2209%). Q30 bases: 318(92.4419%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE/",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5892,testability,test,test,5892,"GCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5921,testability,test,test,5921,"ACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:5992,testability,test,test,5992,"EEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AA",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6011,testability,test,test,6011,"EEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6038,testability,test,test,6038,"<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:6056,testability,test,test,6056,"EEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. TGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. EE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 332. Q20 bases: 320(96.3855%). Q30 bases: 307(92.4699%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6 -5 -3 . fastp v0.23.2, time used: 1 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/E",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8673,testability,test,test,8673,"6 1:N:0:0. AGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8702,testability,test,test,8702,"CAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. EEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8773,testability,test,test,8773,"EEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8792,testability,test,test,8792,"EAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8819,testability,test,test,8819,"EEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:8837,testability,test,test,8837,"E<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. /EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Read1 after filtering:. total reads: 4. total bases: 368. Q20 bases: 355(96.4674%). Q30 bases: 342(92.9348%). Filtering result:. reads passed filter: 4. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 0%. JSON report: /tmp/test.json. HTML report: /tmp/test.html. /home/deren/mambaforge-pypy3/envs/ipyrad1/bin/fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -5 -3 . fastp v0.23.2, time used: 0 seconds. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/474:89,usability,simpl,simple,89,"global trimming trims too much when combined with quality pruning for SE data; Here is a simple example to demonstrate. The sequences are high quality and so will not be pruned for quality, but I wish to trim the first 6 bases. The trimming works correctly when only global trimming is on (`-f 6`; six bases are removed), and it works correctly when only quality pruning is on (`-5 -3`; no bases are removed), but it is incorrect when both are turned on (`-f 6 -5 -3`; *nine bases are removed*). . ```bash. cat <<EOT > /tmp/test.fastq. @NB502016:186:H2HNLBGXN:1:11101:4872:1081 1:N:0:0. AACTGGTGCAGTATAATCTATTTTAAATACCTCCATCCTAAATAGAGGAACCCTATGGTCTAACCCCCATTTAATTGCATTACGAATGTCAA. +. AAAAAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEAAEEEEAE/EEAEEEEEEEEE<EAEEEEEEEEEA<E. @NB502016:186:H2HNLBGXN:1:11101:20414:1089 1:N:0:0. AACTGGTGCAGGAAATTGTTTGGCCGCAGGAAGAAGAATAAGAATCGTCCGAATTTGTCTTCCAATAATTCTGACTTGCTTTGTTCTGGTTC. +. AAAAAEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE. @NB502016:186:H2HNLBGXN:1:11101:21961:1096 1:N:0:0. AACTGGTGCAGCTGAGTAACACCCGCACAAACCAACACCATAGGTATTAGGTAGGACCAACTGCTAGCACATTGGCCGAACTAATCCAAATC. +. AAAAAEEAEEEEEEEEEEAEAEEE<EEEEEAEAEEEEEEEEEEEEEEEEEEEEEEEEEEEEE<EEEEAEEEEEEE<<EEEEEEEAEEEEEE/. @NB502016:186:H2HNLBGXN:1:11101:4227:1163 1:N:0:0. AACTGGTGCAGCCCGTAAGCCGACACCACCGCGTCTAAAAATCCGTAACCATTAGACAGCCCCGCGGACTTAACGACTTTTCCACAAACGGC. +. AAAAAEEE//EEEEEEEAEAEEEAEEEEEEEEEEEEEEEE/EEEEEA/AE/EE6E6EAEEEE6E/EE/EEE//6EEEAEEE/E/EE66E<EA. EOT. # THIS WORKS, 6 bases are trimmed from front so that all new reads start with 'TGCAG'. $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json -f 6. cat /tmp/test.fastq. echo ""================================================================================================="". cat /tmp/test.trimmed.fastq. # THIS DOESN'T WORK, for some reason now 9 bases are trimmed! $fastp -i /tmp/test.fastq -o /tmp/test.trimmed.fastq -h /tmp/test.html -j /tmp/test.json ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/474
https://github.com/OpenGene/fastp/issues/479:111,integrability,sub,subsystem,111,Windows use; Does anyone know how to get this to work on windows without having to run a linux virtual machine/subsystem?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/479
https://github.com/OpenGene/fastp/issues/479:13,reliability,Doe,Does,13,Windows use; Does anyone know how to get this to work on windows without having to run a linux virtual machine/subsystem?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/479
https://github.com/OpenGene/fastp/issues/480:79,availability,error,error,79,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:250,deployability,contain,contain,250,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:0,energy efficiency,Adapt,Adapter,0,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:266,energy efficiency,adapt,adapter,266,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:0,integrability,Adapt,Adapter,0,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:266,integrability,adapt,adapter,266,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:0,interoperability,Adapt,Adapter,0,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:266,interoperability,adapt,adapter,266,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:0,modifiability,Adapt,Adapter,0,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:20,modifiability,Scenario,Scenario,20,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:266,modifiability,adapt,adapter,266,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:296,modifiability,scenario,scenario,296,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:373,modifiability,concern,concern,373,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:79,performance,error,error,79,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:460,performance,content,content,460,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:79,safety,error,error,79,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:394,safety,valid,validate,394,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:418,safety,valid,validation,418,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:316,security,ident,identify,316,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:394,security,validat,validate,394,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:418,security,validat,validation,418,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:373,testability,concern,concern,373,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/480:79,usability,error,error,79,"Adapter Readthrough Scenario ; Hello,. We were discussing potential sources of error and I wanted to ask the developers what their thoughts on this would be. Suppose the mean insert size is 149 base pairs, such that many 150 bp paired end reads will contain 1 bp of adapter read through. In this scenario, can fastp identify and remove these sequences, is this typically a concern, how can one validate this? I assume validation can just include looking at GC content at read ends in a fastq report.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/480
https://github.com/OpenGene/fastp/issues/481:10,energy efficiency,adapt,adapter,10,"Dovetail (adapter) removal not working correctly ; We have ATAC data that we want to remove the overlapping dovetails from; however, one read end is 150bp and the other is 50bp. Fastp is not doing trimming correctly in this scenario. There seems to be a hard cap at 50, so that the reads are trimmed from 31 to 50 but then nothing is trimmed to any length between 50 and 150, despite there still being overlaps in that section.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/481
https://github.com/OpenGene/fastp/issues/481:10,integrability,adapt,adapter,10,"Dovetail (adapter) removal not working correctly ; We have ATAC data that we want to remove the overlapping dovetails from; however, one read end is 150bp and the other is 50bp. Fastp is not doing trimming correctly in this scenario. There seems to be a hard cap at 50, so that the reads are trimmed from 31 to 50 but then nothing is trimmed to any length between 50 and 150, despite there still being overlaps in that section.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/481
https://github.com/OpenGene/fastp/issues/481:10,interoperability,adapt,adapter,10,"Dovetail (adapter) removal not working correctly ; We have ATAC data that we want to remove the overlapping dovetails from; however, one read end is 150bp and the other is 50bp. Fastp is not doing trimming correctly in this scenario. There seems to be a hard cap at 50, so that the reads are trimmed from 31 to 50 but then nothing is trimmed to any length between 50 and 150, despite there still being overlaps in that section.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/481
https://github.com/OpenGene/fastp/issues/481:10,modifiability,adapt,adapter,10,"Dovetail (adapter) removal not working correctly ; We have ATAC data that we want to remove the overlapping dovetails from; however, one read end is 150bp and the other is 50bp. Fastp is not doing trimming correctly in this scenario. There seems to be a hard cap at 50, so that the reads are trimmed from 31 to 50 but then nothing is trimmed to any length between 50 and 150, despite there still being overlaps in that section.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/481
https://github.com/OpenGene/fastp/issues/481:224,modifiability,scenario,scenario,224,"Dovetail (adapter) removal not working correctly ; We have ATAC data that we want to remove the overlapping dovetails from; however, one read end is 150bp and the other is 50bp. Fastp is not doing trimming correctly in this scenario. There seems to be a hard cap at 50, so that the reads are trimmed from 31 to 50 but then nothing is trimmed to any length between 50 and 150, despite there still being overlaps in that section.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/481
https://github.com/OpenGene/fastp/pull/482:145,availability,error,error,145,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/pull/482:49,integrability,filter,filters,49,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/pull/482:145,performance,error,error,145,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/pull/482:87,reliability,doe,does,87,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/pull/482:145,safety,error,error,145,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/pull/482:145,usability,error,error,145,[Bug] Handle empty output from fastp; * If fastp filters out all reads the output file does not have any bases. This leads to a division by zero error which causes a segfault in the HTML generation code.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/482
https://github.com/OpenGene/fastp/issues/483:131,availability,error,error,131,"[mem_sam_pe] paired reads have different names:; I use the fastp to trim the pair-end reads, then use the bwa to mapping, got this error. > [mem_sam_pe] paired reads have different names:. how to solve it ?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/483
https://github.com/OpenGene/fastp/issues/483:131,performance,error,error,131,"[mem_sam_pe] paired reads have different names:; I use the fastp to trim the pair-end reads, then use the bwa to mapping, got this error. > [mem_sam_pe] paired reads have different names:. how to solve it ?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/483
https://github.com/OpenGene/fastp/issues/483:131,safety,error,error,131,"[mem_sam_pe] paired reads have different names:; I use the fastp to trim the pair-end reads, then use the bwa to mapping, got this error. > [mem_sam_pe] paired reads have different names:. how to solve it ?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/483
https://github.com/OpenGene/fastp/issues/483:131,usability,error,error,131,"[mem_sam_pe] paired reads have different names:; I use the fastp to trim the pair-end reads, then use the bwa to mapping, got this error. > [mem_sam_pe] paired reads have different names:. how to solve it ?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/483
https://github.com/OpenGene/fastp/pull/484:110,interoperability,specif,specifying,110,"Typo correction in options.cpp ; While using fastp with PE reads for the first time, I noticed this typo when specifying the same -o and -O output folder. It may seem futile, but this is a good exercise as this would be my first pull request. Hope this is appreciated!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/484
https://github.com/OpenGene/fastp/pull/484:79,performance,time,time,79,"Typo correction in options.cpp ; While using fastp with PE reads for the first time, I noticed this typo when specifying the same -o and -O output folder. It may seem futile, but this is a good exercise as this would be my first pull request. Hope this is appreciated!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/484
https://github.com/OpenGene/fastp/pull/485:7,availability,error,error,7,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:57,energy efficiency,current,currently,57,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:13,integrability,messag,message,13,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:49,integrability,messag,message,49,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:13,interoperability,messag,message,13,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:49,interoperability,messag,message,49,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:7,performance,error,error,7,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:7,safety,error,error,7,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/pull/485:7,usability,error,error,7,"Change error message for interleaved stdout; The message currently refers to ""interleaved output mode"" but the attribute being checked by the code refers to ""merging output mode"". I suggest the text should be changed or unless I am missing something, this conditional block should be removed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/485
https://github.com/OpenGene/fastp/issues/486:19,deployability,Releas,Release,19,"Request: Tag a New Release; Hi @sfchen , thanks for the great tool! Wondering if you would consider tagging a new release and pushing to bioconda? The last release is from 2021 and I'm sure the community is pretty excited about some of the fixes that have been merged since, such as https://github.com/OpenGene/fastp/pull/469 and https://github.com/OpenGene/fastp/pull/471. This would probably also help address some of the duplicated issues which have been reported on these bugs. Thanks for your consideration!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/486
https://github.com/OpenGene/fastp/issues/486:114,deployability,releas,release,114,"Request: Tag a New Release; Hi @sfchen , thanks for the great tool! Wondering if you would consider tagging a new release and pushing to bioconda? The last release is from 2021 and I'm sure the community is pretty excited about some of the fixes that have been merged since, such as https://github.com/OpenGene/fastp/pull/469 and https://github.com/OpenGene/fastp/pull/471. This would probably also help address some of the duplicated issues which have been reported on these bugs. Thanks for your consideration!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/486
https://github.com/OpenGene/fastp/issues/486:156,deployability,releas,release,156,"Request: Tag a New Release; Hi @sfchen , thanks for the great tool! Wondering if you would consider tagging a new release and pushing to bioconda? The last release is from 2021 and I'm sure the community is pretty excited about some of the fixes that have been merged since, such as https://github.com/OpenGene/fastp/pull/469 and https://github.com/OpenGene/fastp/pull/471. This would probably also help address some of the duplicated issues which have been reported on these bugs. Thanks for your consideration!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/486
https://github.com/OpenGene/fastp/issues/486:62,usability,tool,tool,62,"Request: Tag a New Release; Hi @sfchen , thanks for the great tool! Wondering if you would consider tagging a new release and pushing to bioconda? The last release is from 2021 and I'm sure the community is pretty excited about some of the fixes that have been merged since, such as https://github.com/OpenGene/fastp/pull/469 and https://github.com/OpenGene/fastp/pull/471. This would probably also help address some of the duplicated issues which have been reported on these bugs. Thanks for your consideration!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/486
https://github.com/OpenGene/fastp/issues/486:399,usability,help,help,399,"Request: Tag a New Release; Hi @sfchen , thanks for the great tool! Wondering if you would consider tagging a new release and pushing to bioconda? The last release is from 2021 and I'm sure the community is pretty excited about some of the fixes that have been merged since, such as https://github.com/OpenGene/fastp/pull/469 and https://github.com/OpenGene/fastp/pull/471. This would probably also help address some of the duplicated issues which have been reported on these bugs. Thanks for your consideration!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/486
https://github.com/OpenGene/fastp/issues/487:465,deployability,contain,contain,465,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:192,energy efficiency,adapt,adapter,192,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:268,energy efficiency,adapt,adapter,268,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:295,energy efficiency,adapt,adapter,295,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:192,integrability,adapt,adapter,192,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:268,integrability,adapt,adapter,268,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:295,integrability,adapt,adapter,295,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:192,interoperability,adapt,adapter,192,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:268,interoperability,adapt,adapter,268,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:295,interoperability,adapt,adapter,295,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:192,modifiability,adapt,adapter,192,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:268,modifiability,adapt,adapter,268,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:295,modifiability,adapt,adapter,295,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:45,safety,detect,detecting,45,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:144,safety,detect,detecting,144,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:45,security,detect,detecting,45,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/487:144,security,detect,detecting,144,"Trim Read 1 and Read 2 independently without detecting overlap; Dear developers,. is it possible to trim paired end reads independently without detecting overlaps? I would like to provide one adapter sequence for each read (adapter_1, adapter_2) and trim read 1 using adapter 1 and read 2 using adapter 2. I do not need to account for overlaps. Read1.fastq:. ACGTadapter1GGGGGGGGGGGGGG. ... Read2.fastq:. ATAGACTACadapter2GGGGGGGGGG. ... The resulting files should contain:. Read1.out:. GGGGGGGGGGGGGG. ... Read2.out:. GGGGGGGGGG. How would you set up fastp to do this? Thanks and best wishes!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/487
https://github.com/OpenGene/fastp/issues/488:558,availability,avail,available,558,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:19,deployability,instal,install,19,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:77,deployability,instal,install,77,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:197,deployability,instal,install,197,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:304,deployability,fail,failed,304,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:440,deployability,fail,failed,440,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:573,energy efficiency,current,current,573,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:601,energy efficiency,Current,Current,601,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:235,modifiability,pac,package,235,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:379,modifiability,pac,package,379,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:504,modifiability,Pac,PackagesNotFoundError,504,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:541,modifiability,pac,packages,541,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:1142,modifiability,pac,package,1142,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:133,reliability,doe,doesn,133,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:304,reliability,fail,failed,304,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:440,reliability,fail,failed,440,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:558,reliability,availab,available,558,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:558,safety,avail,available,558,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:558,security,availab,available,558,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:179,usability,User,Users,179,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/488:1171,usability,navigat,navigate,1171,"¿Is it possible to install fastp in windows?; I am using miniconda to try to install fastp in my laptop (Windows 10) but it seems it doesn't work. Any suggestions? . `(py3.10) C:\Users\camil>conda install -c bioconda fastp. Collecting package metadata (current_repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/win-64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/win-64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/win-64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/win-64. - https://repo.anaconda.com/pkgs/r/noarch. - https://repo.anaconda.com/pkgs/msys2/win-64. - https://repo.anaconda.com/pkgs/msys2/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.`",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/488
https://github.com/OpenGene/fastp/issues/489:201,deployability,compos,composed,201,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:333,deployability,fail,fail,333,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:377,interoperability,specif,specified,377,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:615,interoperability,Specif,Specifically,615,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:201,modifiability,compos,composed,201,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:333,reliability,fail,fail,333,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:13,safety,detect,detect,13,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:825,safety,safe,safe,825,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:13,security,detect,detect,13,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/489:576,security,ident,identify,576,"NextSeq auto-detect seems incomplete; Hi,. first of all, thank you for developing the software! I ran it on some samples that were sequenced with a NextSeq 2000. For some samples, the reads are mostly composed of ""G"", which is something we need to look into, so this is not the issue :). The issue is that the autodetection seems to fail, hence the `--trim_poly_g` needs to be specified manually as it is otherwise not enabled. When I look at https://github.com/OpenGene/fastp/blob/ca559a71feed94e74ea449e7567d0506de48dea4/src/evaluator.cpp#L25, the prefixes that are used to identify the machine are very limited. Specifically, the FASTQ files, I have, start with `@VH` for the readnames. That prefix is, however, not in the list. Maybe because these prefixes were for NextSeq 5xx and not NextSeq 2000? Best wishes and stay safe,. Cedric",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/489
https://github.com/OpenGene/fastp/issues/490:91,availability,down,download,91,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:0,deployability,Updat,Update,0,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:17,deployability,build,build,17,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:23,deployability,version,version,23,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:65,deployability,build,build,65,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:71,deployability,version,version,71,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:170,deployability,updat,update,170,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:185,deployability,build,build,185,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:191,deployability,version,version,191,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:23,integrability,version,version,23,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:71,integrability,version,version,71,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:191,integrability,version,version,191,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:23,modifiability,version,version,23,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:71,modifiability,version,version,71,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:191,modifiability,version,version,191,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:0,safety,Updat,Update,0,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:170,safety,updat,update,170,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:0,security,Updat,Update,0,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/490:170,security,updat,update,170,"Update fastp pre-build version to v0.23.3; Hi, . I found the pre-build version of `fastp` (download from `http://opengene.org/fastp/fastp`) is still v0.23.2. . Would you update the pre-build version? . Thanks,. Siwei",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/490
https://github.com/OpenGene/fastp/issues/491:0,availability,ERROR,ERROR,0,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:45,availability,ERROR,ERROR,45,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:176,availability,ERROR,ERROR,176,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:195,deployability,version,version,195,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:195,integrability,version,version,195,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:195,modifiability,version,version,195,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:0,performance,ERROR,ERROR,0,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:45,performance,ERROR,ERROR,45,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:176,performance,ERROR,ERROR,176,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:0,safety,ERROR,ERROR,0,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:45,safety,ERROR,ERROR,45,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:176,safety,ERROR,ERROR,176,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:0,usability,ERROR,ERROR,0,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:45,usability,ERROR,ERROR,45,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/491:176,usability,ERROR,ERROR,176,"ERROR: Read name line should start with '@'; ERROR: Read name line should start with '@'，I used fastp 0.23.3 to deal my data. But when I use fastp.0.23.0,it's not occured this ERROR。I think this version is missing to handling of these abnormal reads.Looking forward to your response.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/491
https://github.com/OpenGene/fastp/issues/492:49,availability,error,error,49,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:440,availability,error,error,440,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:3,energy efficiency,adapt,adapter,3,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:37,energy efficiency,core,core,37,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:190,energy efficiency,adapt,adapter,190,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:316,energy efficiency,core,core,316,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:362,energy efficiency,adapt,adapter,362,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:3,integrability,adapt,adapter,3,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:190,integrability,adapt,adapter,190,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:362,integrability,adapt,adapter,362,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:446,integrability,messag,messages,446,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:3,interoperability,adapt,adapter,3,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:190,interoperability,adapt,adapter,190,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:362,interoperability,adapt,adapter,362,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:446,interoperability,messag,messages,446,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:3,modifiability,adapt,adapter,3,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:190,modifiability,adapt,adapter,190,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:362,modifiability,adapt,adapter,362,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:49,performance,error,error,49,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:440,performance,error,error,440,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:49,safety,error,error,49,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:440,safety,error,error,440,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:49,usability,error,error,49,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:56,usability,command,commande,56,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:339,usability,command,command,339,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:432,usability,clear,clearer,432,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/492:440,usability,error,error,440,"is adapter file is unreadable return core dumped error; commande lien: `fastp --in1 M1.fastq.gz --out1 M1.fastp.fastq.gz --thread 6 --json M1.fastp.json --html M1.fastp.html --adapter_fasta adapter.fa -t 0 -G -n 1 -l 40 -y -A -a TGGAATTCTCGGGTGCCAAGGAACTCCAG`. **M1.fastq.gz can be anly fastq file you got**. I got `core dumped` with this command as long as the adapter.fa is unreadable for me, i think it would be better to have a clearer error messages.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/492
https://github.com/OpenGene/fastp/issues/493:528,availability,SLI,SLIDINGWINDOW,528,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:240,interoperability,distribut,distribution,240,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:621,interoperability,distribut,distribution,621,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:548,modifiability,paramet,parameter,548,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:10,reliability,doe,doesn,10,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:65,reliability,doe,doesn,65,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:528,reliability,SLI,SLIDINGWINDOW,528,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:1025,reliability,doe,doesn,1025,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/493:1331,reliability,doe,does,1331,"cut_right doesn't work as the same as trimmomatic; The cut_right doesn't cut the low-quality N bases at the end of read. I will give an example to project this. I used both fastp and trimmomatic to process the data whose quality and length distribution is shown below:. <img width=""320"" alt=""1"" src=""https://github.com/OpenGene/fastp/assets/47422234/0a074a4a-1654-4c2e-b5a7-c49ef9d5b2c2""><img width=""320"" alt=""1_1"" src=""https://github.com/OpenGene/fastp/assets/47422234/f302ab55-40aa-4525-a0a7-e175c86450f1"">. trimmomatic with `SLIDINGWINDOW:4:15` parameter would cut the low-quality bases from 5' to 3' properly and the distribution of read length will be like:. <img width=""320"" alt=""2"" src=""https://github.com/OpenGene/fastp/assets/47422234/6cfccdf5-fdee-454b-9c54-cba5d8c0c59c""><img width=""320"" alt=""3"" src=""https://github.com/OpenGene/fastp/assets/47422234/dcd87c72-71cf-4309-a428-e92e81bda939"">. while using fastp with `--cut_right` and `--cut_right_window_size 4` would have results as follows, which seems like fastp doesn't deal with position 48 which has more than 80% N bases:. <img width=""320"" alt=""4"" src=""https://github.com/OpenGene/fastp/assets/47422234/b5d2c394-dd23-4fab-8766-3fd8ee5f35fe""><img width=""320"" alt=""5"" src=""https://github.com/OpenGene/fastp/assets/47422234/dd0a05b1-192e-4e08-b3b3-62a68c1349ad"">. How does the cut_right treat N bases?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/493
https://github.com/OpenGene/fastp/issues/494:164,interoperability,specif,specify,164,"UMI extraction 3' end ; Hi, . Fastp is a great tool! I was wondering if it's possible to extract UMIs from both the 5' and 3' end of a fastq. Is there an option to specify that UMIs are located at the head and tail of a read? Thanks! Best wishes,. Anna",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/494
https://github.com/OpenGene/fastp/issues/494:47,usability,tool,tool,47,"UMI extraction 3' end ; Hi, . Fastp is a great tool! I was wondering if it's possible to extract UMIs from both the 5' and 3' end of a fastq. Is there an option to specify that UMIs are located at the head and tail of a read? Thanks! Best wishes,. Anna",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/494
https://github.com/OpenGene/fastp/pull/495:771,availability,error,errors,771,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:817,availability,error,error,817,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:867,availability,error,error,867,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:911,availability,error,error,911,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:989,availability,error,error,989,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1070,availability,error,error,1070,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1251,availability,error,error,1251,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1304,availability,state,statement,1304,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:431,deployability,log,log,431,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:477,deployability,log,log,477,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:481,deployability,scale,scale,481,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:481,energy efficiency,scale,scale,481,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:338,integrability,filter,filter,338,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:560,integrability,filter,filter,560,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1123,integrability,filter,filter,1123,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1304,integrability,state,statement,1304,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1563,integrability,filter,filtering,1563,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:481,modifiability,scal,scale,481,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1164,modifiability,variab,variable,1164,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1210,modifiability,variab,variable,1210,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1573,modifiability,pac,packages,1573,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:481,performance,scale,scale,481,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:771,performance,error,errors,771,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:817,performance,error,error,817,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:867,performance,error,error,867,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:911,performance,error,error,911,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:989,performance,error,error,989,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1070,performance,error,error,1070,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1251,performance,error,error,1251,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:431,safety,log,log,431,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:477,safety,log,log,477,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:771,safety,error,errors,771,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:817,safety,error,error,817,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:867,safety,error,error,867,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:911,safety,error,error,911,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:989,safety,error,error,989,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1070,safety,error,error,1070,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1251,safety,error,error,1251,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1437,safety,input,input,1437,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1446,safety,compl,complied,1446,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1468,safety,test,tested,1468,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:431,security,log,log,431,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:477,security,log,log,477,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1446,security,compl,complied,1446,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1523,security,ident,identical,1523,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:431,testability,log,log,431,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:477,testability,log,log,477,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1468,testability,test,tested,1468,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1483,testability,simul,simulated,1483,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:771,usability,error,errors,771,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:817,usability,error,error,817,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:867,usability,error,error,867,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:911,usability,error,error,911,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:989,usability,error,error,989,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1070,usability,error,error,1070,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1251,usability,error,error,1251,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1431,usability,user,users,1431,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/pull/495:1437,usability,input,input,1437,"fix average q-score calculation; Hi, big fan of your work! . In this pull request, I rewrote the --average_qual method to accurately calculate the average quality of a read. I was running .fastq files of DNA sequenced on our Nanopore through fastp (Nanopore says to use average read q-scores), and way more reads were passing the quality filter than I was used to. I looked into it, and fastp was averaging the q-scores, which are log values, and not taking the q-score out of log scale to p values before averaging. This results in way more reads passing the filter than there should be. As an example: . . A base with a q-score of 10 and a second base with a q-score of 20, if . averaged, would have an average q-score of 15. However, if you average the probability of errors: . A q-score of 10 is a probability of error of 0.1. A q-score of 20 is a probability of error of 0.01. Averaging the probability of error: 0.1 + 0.01 = 0.11 | 0.11 / 2 = 0.055. The q-score for a probability of error of 0.055 is ~12.5. . This number accurately reflects the average amount of error present in the read. To implement this, in the filter.cpp file, I changed the totalQual variable to a float. I then had the totalQual variable increment by the probability of error instead of the q-score. Then, in the 'else if' statement, I divided the final totalQual value of the read by the rlen, and calculated the resulting q-score to compare to the users input. I complied the code and tested it on a simulated dataset, and the results were identical to the other nanopore quailty filtering packages I have on my machine. Thanks again for fastp!!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/495
https://github.com/OpenGene/fastp/issues/496:73,deployability,build,build,73,"How important is isa-l?; . isa-l is not very portable (e.g. it's hard to build on ARM-based Macs) and development has not been very active recently. It looks like it is only being used by fastp for gzip inflation. Maybe it could be replaced with a more portable library such as zlib? It may be that isa-l is faster, but I wonder if the difference to the bottom line really makes it worth the trouble.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/496
https://github.com/OpenGene/fastp/issues/496:45,modifiability,portab,portable,45,"How important is isa-l?; . isa-l is not very portable (e.g. it's hard to build on ARM-based Macs) and development has not been very active recently. It looks like it is only being used by fastp for gzip inflation. Maybe it could be replaced with a more portable library such as zlib? It may be that isa-l is faster, but I wonder if the difference to the bottom line really makes it worth the trouble.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/496
https://github.com/OpenGene/fastp/issues/496:253,modifiability,portab,portable,253,"How important is isa-l?; . isa-l is not very portable (e.g. it's hard to build on ARM-based Macs) and development has not been very active recently. It looks like it is only being used by fastp for gzip inflation. Maybe it could be replaced with a more portable library such as zlib? It may be that isa-l is faster, but I wonder if the difference to the bottom line really makes it worth the trouble.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/496
https://github.com/OpenGene/fastp/pull/497:157,availability,reliab,reliably,157,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:105,deployability,fail,fails,105,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:255,deployability,contain,contain,255,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:320,energy efficiency,predict,predicted,320,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:337,energy efficiency,current,current,337,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:90,integrability,buffer,buffer,90,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:105,reliability,fail,fails,105,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:157,reliability,reliab,reliably,157,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:320,safety,predict,predicted,320,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:356,safety,Test,Tested,356,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:356,testability,Test,Tested,356,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/pull/497:467,testability,regress,regression,467,"Fix for 2 bugs in the fastq reader:; - \r\n handling may cause reading a byte past end of buffer, parser fails. - checking end-of-file condition can only be reliably done after a call to getLine() returns NULL. One particular case is that some gzip files contain empty gzip blocks at the end of the file, which can´t be predicted by the current eof() code Tested with files provided in issue #491. This reverts commit 0ee1b3b3af1c2c890b063261b2ff55305bb220f0, ""fix a regression bug of FASTQ reader""",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/497
https://github.com/OpenGene/fastp/issues/498:52,deployability,pipelin,pipeline,52,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:88,energy efficiency,adapt,adapter,88,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:760,energy efficiency,adapt,adapter,760,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:999,energy efficiency,adapt,adapters,999,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1159,energy efficiency,adapt,adapter,1159,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:52,integrability,pipelin,pipeline,52,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:88,integrability,adapt,adapter,88,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:405,integrability,filter,filter,405,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:503,integrability,filter,filtering,503,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:697,integrability,filter,filtering,697,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:760,integrability,adapt,adapter,760,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:865,integrability,filter,filtering,865,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:999,integrability,adapt,adapters,999,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1159,integrability,adapt,adapter,1159,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:88,interoperability,adapt,adapter,88,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:571,interoperability,specif,specified,571,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:760,interoperability,adapt,adapter,760,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:940,interoperability,specif,specified,940,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:999,interoperability,adapt,adapters,999,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1018,interoperability,specif,specify,1018,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1159,interoperability,adapt,adapter,1159,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:88,modifiability,adapt,adapter,88,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:760,modifiability,adapt,adapter,760,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:999,modifiability,adapt,adapters,999,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1159,modifiability,adapt,adapter,1159,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:13,usability,stop,stops,13,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:794,usability,confirm,confirm,794,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:957,usability,document,documentation,957,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/498:1286,usability,help,help,1286,"Length Limit stops working past a certain point; My pipeline implements UMI processing, adapter trimming, and setting a length limit via fastp for paired end reads. Because of the chemistry involved, our maximum read length is 167 nucleotides. If I set the length limit to 141 nucleotides or shorter, the program behaves as expected, returning only reads shorter than or equal to 141 nucleotides. Once we filter for 142 nucleotides or longer, the entirety of the fastq files are returned with no length filtering at all. The magic number seems to be 25. If the length is specified is within 25 nucleotides of the maximum read length, it will return all reads. 1) When in the process will fastp be filtering for read length? (I'm assuming after UMI removal and adapter cleaving, but I'd like to confirm that. Please note: we are not trimming the read length, we are filtering for a maximum read length, and I could not find when that occurs specified in the documentation.). 2) We use Illumina MiSeq adapters (which we specify the sequence for), which are 33 nucleotides long, and an 8 nucleotide long UMI. 33 - 8 = 25, So I'm wondering if the UMI removal and adapter cleaving have anything to do with the length limit problem, and if anyone has any insight into this. Thank you for any help you can provide!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/498
https://github.com/OpenGene/fastp/issues/499:1036,availability,Operat,Operating,1036,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:1067,deployability,Version,Version,1067,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:121,energy efficiency,adapt,adapter,121,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:204,energy efficiency,adapt,adapters,204,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:301,energy efficiency,adapt,adapter,301,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:317,energy efficiency,adapt,adapters,317,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:569,energy efficiency,adapt,adapter,569,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:646,energy efficiency,adapt,adapter,646,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:842,energy efficiency,adapt,adapter,842,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:984,energy efficiency,adapt,adapter,984,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:121,integrability,adapt,adapter,121,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:204,integrability,adapt,adapters,204,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:301,integrability,adapt,adapter,301,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:317,integrability,adapt,adapters,317,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:569,integrability,adapt,adapter,569,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:646,integrability,adapt,adapter,646,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:842,integrability,adapt,adapter,842,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:984,integrability,adapt,adapter,984,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:1067,integrability,Version,Version,1067,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:121,interoperability,adapt,adapter,121,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:204,interoperability,adapt,adapters,204,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:301,interoperability,adapt,adapter,301,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:317,interoperability,adapt,adapters,317,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:569,interoperability,adapt,adapter,569,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:646,interoperability,adapt,adapter,646,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:842,interoperability,adapt,adapter,842,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:984,interoperability,adapt,adapter,984,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:121,modifiability,adapt,adapter,121,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:204,modifiability,adapt,adapters,204,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:301,modifiability,adapt,adapter,301,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:317,modifiability,adapt,adapters,317,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:569,modifiability,adapt,adapter,569,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:646,modifiability,adapt,adapter,646,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:842,modifiability,adapt,adapter,842,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:984,modifiability,adapt,adapter,984,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:1067,modifiability,Version,Version,1067,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:956,performance,perform,performs,956,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:218,safety,detect,detected,218,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:633,safety,detect,detected,633,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:826,safety,detect,detect,826,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:218,security,detect,detected,218,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:633,security,detect,detected,633,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:826,security,detect,detect,826,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:10,usability,command,command,10,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:73,usability,tool,tool,73,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:176,usability,command,command,176,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:385,usability,command,command,385,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:428,usability,Command,Command,428,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:600,usability,command,command,600,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:689,usability,Command,Command,689,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:781,usability,Behavi,Behavior,781,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:913,usability,command,command,913,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/499:956,usability,perform,performs,956,"output on command line of fastp is incorrect; . When utilizing the fastp tool with the --adapter_fasta option to provide adapter sequences from a fasta file, the output on the command line showed that no adapters were detected and no reads were trimmed, while the reads were actually trimmed with the adapter. So the adapters were trimmed successfully but incorrectly annotated on the command line and in the fastp output file. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq --adapter_fasta known_adapters.fa. However, when using the -a option to provide the adapter sequence directly, the command line output successfully detected the adapter and trimmed the reads as expected. Command: . fastp -i miRQC-A_R1.fastq.gz -o outputA.fastq -a TGGAATTCTCGGGTGCCAAGG. Expected Behavior:. The --adapter_fasta option should detect and trim adapter sequences provided in a fasta file and annotate correct on the command line, similar to how the -a option performs when providing the adapter sequence directly. Additional Information:. Operating System: Linux. fastp Version: fastp v0.23.2.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/499
https://github.com/OpenGene/fastp/issues/500:142,availability,error,error,142,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:375,availability,error,error,375,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:811,availability,avail,available,811,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:7,deployability,instal,install,7,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:87,deployability,instal,install,87,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:282,deployability,version,version,282,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:307,deployability,version,version,307,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:352,deployability,instal,installed,352,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:412,deployability,instal,install,412,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:826,energy efficiency,current,current,826,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:854,energy efficiency,Current,Current,854,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:148,integrability,messag,message,148,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:282,integrability,version,version,282,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:307,integrability,version,version,307,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:381,integrability,messag,message,381,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:148,interoperability,messag,message,148,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:381,interoperability,messag,message,381,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:282,modifiability,version,version,282,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:307,modifiability,version,version,307,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:458,modifiability,pac,package,458,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:617,modifiability,pac,package,617,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:757,modifiability,Pac,PackagesNotFoundError,757,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:794,modifiability,pac,packages,794,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:1313,modifiability,pac,package,1313,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:142,performance,error,error,142,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:375,performance,error,error,375,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:811,reliability,availab,available,811,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:142,safety,error,error,142,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:375,safety,error,error,375,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:811,safety,avail,available,811,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:811,security,availab,available,811,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:142,usability,error,error,142,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:256,usability,help,helped,256,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:375,usability,error,error,375,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/500:1342,usability,navigat,navigate,1342,"Cannot install fastp on my computer - channels not found; Hello! I have been trying to install fastp on my computer but keep getting the same error message. I have added the conda forge and conda bioconda channels to try to resolve my issues but it hasn't helped. I am using python version 4.11.0 and conda version 3.9.7 on an M1 mackbook with ventura installed. This is the error message I keep getting:. conda install -c bioconda fastp (base) . Collecting package metadata (current_repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. Collecting package metadata (repodata.json): done. Solving environment: unsuccessful initial attempt using frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - fastp. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64. - https://conda.anaconda.org/bioconda/noarch. - https://conda.anaconda.org/conda-forge/osx-arm64. - https://conda.anaconda.org/conda-forge/noarch. - https://repo.anaconda.com/pkgs/main/osx-arm64. - https://repo.anaconda.com/pkgs/main/noarch. - https://repo.anaconda.com/pkgs/r/osx-arm64. - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're. looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. I was wondering if anyone else has encountered this issue and was able to resolve it? Thank you!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/500
https://github.com/OpenGene/fastp/issues/502:10,energy efficiency,adapt,adaptors,10,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:105,energy efficiency,adapt,adaptors,105,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:10,integrability,adapt,adaptors,10,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:105,integrability,adapt,adaptors,105,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:10,interoperability,adapt,adaptors,10,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:105,interoperability,adapt,adaptors,105,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:10,modifiability,adapt,adaptors,10,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:105,modifiability,adapt,adaptors,105,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:19,safety,detect,detected,19,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:88,safety,detect,detect,88,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:19,security,detect,detected,19,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:88,security,detect,detect,88,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/502:199,usability,help,help,199,"Different adaptors detected in paired reads; Hi, may I ask if it is normal (correct) to detect different adaptors sequence in the paired reads? (attached a picture with the example). Thanks for your help! [fastp.pdf](https://github.com/OpenGene/fastp/files/11868397/fastp.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/502
https://github.com/OpenGene/fastp/issues/503:3,energy efficiency,adapt,adapter,3,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:232,energy efficiency,adapt,adaptors,232,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:338,energy efficiency,adapt,adapter,338,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:377,energy efficiency,adapt,adapter,377,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:3,integrability,adapt,adapter,3,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:232,integrability,adapt,adaptors,232,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:326,integrability,messag,message,326,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:338,integrability,adapt,adapter,338,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:377,integrability,adapt,adapter,377,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:726,integrability,messag,messages,726,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:3,interoperability,adapt,adapter,3,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:232,interoperability,adapt,adaptors,232,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:326,interoperability,messag,message,326,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:338,interoperability,adapt,adapter,338,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:377,interoperability,adapt,adapter,377,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:726,interoperability,messag,messages,726,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:3,modifiability,adapt,adapter,3,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:232,modifiability,adapt,adaptors,232,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:338,modifiability,adapt,adapter,338,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:377,modifiability,adapt,adapter,377,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:11,safety,detect,detected,11,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:346,safety,detect,detected,346,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:389,safety,detect,detected,389,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:549,safety,detect,detected,549,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:11,security,detect,detected,11,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:346,security,detect,detected,346,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:389,security,detect,detected,389,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:549,security,detect,detected,549,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:450,usability,indicat,indicated,450,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/503:779,usability,help,help,779,"No adapter detected for read2 and Insert size peak (evaluated by paired-end reads): 103; Hello! Thanks for the great software. I am running fastp for paired end reads obtained from an Illumina machine, and feeding it with a list of adaptors. It worked good for almost all of my samples, however, for one sample I obtained the message “No adapter detected for read2”, while the adapter was detected for the read1 of the same sample. After running, it indicated “Insert size peak (evaluated by paired-end reads): 103”, which is higher that the number detected for the other samples (always around 30-40). . What do you think it may be the problem with this sample? Should I worry about it? I am attaching a pdf with the warning messages and also the html report. . Thanks for your help! [fastp_warning.pdf](https://github.com/OpenGene/fastp/files/11886605/fastp_warning.pdf). [fastp report at 2023-06-26 15_43_05.pdf](https://github.com/OpenGene/fastp/files/11886611/fastp.report.at.2023-06-26.15_43_05.pdf).",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/503
https://github.com/OpenGene/fastp/issues/504:1199,availability,echo,echo,1199,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:1301,availability,echo,echo,1301,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:82,performance,disk,disk,82,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:237,performance,disk,disk,237,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:29,safety,input,inputs,29,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:29,usability,input,inputs,29,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:394,usability,efficien,efficiently,394,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/504:1333,usability,command,command,1333,"issue trying to use fifo for inputs; I have plenty of data to process and limited disk space. not sure it is me but when I merge for both paired reads the four lanes first to a single fq.gz each it works fine . but . when I want to save disk by merging the 4 fq.gz lanes to a fifo in background and use the fifo as **-i** and **-I** it never starts to output (like the 2 fifo would not be read efficiently!). Any idea would be very welcome. Here is part of my code. ```. # cleanup if exists. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # create named pipes. mkfifo merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. # merge 4 lanes of read1 and read2 to two fifo. cat ${pfx}_L00{1..4}_R1_001.fastq.gz > merged_${pfx}_R1.fq.gz &. cat ${pfx}_L00{1..4}_R2_001.fastq.gz > merged_${pfx}_R2.fq.gz &. # run fastp. cmd=""fastp \. -w ${nthr} \. -i merged_${pfx}_R1.fq.gz \. -o ../filt_reads/${pfx}_R1.fq.gz \. -I merged_${pfx}_R2.fq.gz \. -O ../filt_reads/${pfx}_R2.fq.gz \. -q 15 \. -u 40 \. -R \""${pfx} fastp report\"" \. -h ../filt_reads/${pfx}_fastp_report.html \. -j ../filt_reads/${pfx}_fastp.json \. --failed_out ../filt_reads/${pfx}_fastp_failed.fq.gz \. >> ../filt_reads/${pfx}_fastp_log.txt 2>&1"". echo ""# ${cmd}"". . eval ${cmd} && \. rm merged_${pfx}_R1.fq.gz merged_${pfx}_R2.fq.gz. ```. note, the echo cmd shows a perfectly nice command",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/504
https://github.com/OpenGene/fastp/issues/505:164,availability,down,download,164,"How to remove contaminated sequencing data; Hi,. One sequenced sample got contaminated, I found the command line '--filter-by-index 1', but I have no idea where to download the barcodes, could share where to download these, and how to remove the contaminated sequencing data? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/505
https://github.com/OpenGene/fastp/issues/505:208,availability,down,download,208,"How to remove contaminated sequencing data; Hi,. One sequenced sample got contaminated, I found the command line '--filter-by-index 1', but I have no idea where to download the barcodes, could share where to download these, and how to remove the contaminated sequencing data? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/505
https://github.com/OpenGene/fastp/issues/505:116,integrability,filter,filter-by-index,116,"How to remove contaminated sequencing data; Hi,. One sequenced sample got contaminated, I found the command line '--filter-by-index 1', but I have no idea where to download the barcodes, could share where to download these, and how to remove the contaminated sequencing data? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/505
https://github.com/OpenGene/fastp/issues/505:193,interoperability,share,share,193,"How to remove contaminated sequencing data; Hi,. One sequenced sample got contaminated, I found the command line '--filter-by-index 1', but I have no idea where to download the barcodes, could share where to download these, and how to remove the contaminated sequencing data? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/505
https://github.com/OpenGene/fastp/issues/505:100,usability,command,command,100,"How to remove contaminated sequencing data; Hi,. One sequenced sample got contaminated, I found the command line '--filter-by-index 1', but I have no idea where to download the barcodes, could share where to download these, and how to remove the contaminated sequencing data? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/505
https://github.com/OpenGene/fastp/issues/506:434,availability,down,downstream,434,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:64,deployability,version,version,64,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:274,deployability,releas,release,274,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:315,deployability,version,version,315,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:498,deployability,releas,release,498,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:520,deployability,instal,installed,520,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:1082,deployability,build,building,1082,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:1130,deployability,build,builds,1130,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:1177,deployability,build,builds,1177,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:64,integrability,version,version,64,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:315,integrability,version,version,315,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:64,modifiability,version,version,64,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:122,modifiability,concern,concern,122,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:315,modifiability,version,version,315,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:419,performance,time,times,419,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:160,reliability,doe,does,160,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:396,safety,input,input,396,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:122,testability,concern,concern,122,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:95,usability,tool,tool,95,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:177,usability,efficien,efficiently,177,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:396,usability,input,input,396,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:563,usability,Command,Command,563,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/506:1307,usability,tool,tool,1307,"Unstable and irreproducible results; Hi, we've been using fastp version 0.23.2 and we love the tool. . Our main usage and concern is deduplication, which fastp does quickly and efficiently. . We recently noticed that the output is not reproducible between runs, despite the release note that says this was fixed in version 0.23.0. The md5sum for output files is not the same when running on same input FASTQ file a few times, and the downstream results are also different. . We run on CentOS Linux release 7.9.2009, and installed fastp via conda in Febuary 2022. Command line: . `fastp -i SRR8601526_1.fastq -I SRR8601526_2.fastq -o SRR8601526_out_1.fastq -O SRR8601526_out_1.fastq -h SRR8601526.html -j SRR8601526.json --dedup --dup_calc_accuracy 6 --disable_quality_filtering --disable_length_filtering --disable_trim_poly_g --disable_adapter_trimming`. We also see the same effect when running with this docker image `quay.io/biocontainers/fastp:0.23.2--hb7a2d85_2`, `quay.io/biocontainers/fastp:0.23.2--h5f740d0_3` and `quay.io/biocontainers/fastp:0.23.4--hadf994f_2`, and when building our own image from the [StaPH-B/docker-builds repo](https://github.com/StaPH-B/docker-builds/blob/master/fastp/0.23.4/Dockerfile). Is this issue going to be addressed soon? We would very much like to keep using this tool but need to know the deduplication results are reproducible. Thank you. @erinyoung @sfchen @KimBioInfoStudio",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/506
https://github.com/OpenGene/fastp/issues/507:369,safety,test,test,369,can fastp be used to demultiplex fastq files based on indexes in the sequence header?; I was wondering if there is anyway to use fastq to demultiplex fastq files based on an index list and headers in the sequencing files as below. ```. ==> index.txt <==. S1 TTACCGAC-CGTATTCG. S2 TCGTCTGA-TCAAGGAC. S3 TTCCAGGT-AAGCACTG. S4 TACGGTCT-GCAATGGA. S5 AAGACCGT-CAATCGAC. ==> test.fastq <==. @A00929:83:HL75TDRXX:1:2101:13919:1047 1:N:0:TTACCGAC+CGTATTCG. CATATTGATAGTTCGCACAGGTAG. +. FFFFFFFFFFFFFFFFFFFFFFFF. @A00929:83:HL75TDRXX:1:2101:14009:1047 1:N:0:TCGTCTGA+TCAAGGAC. GTGCGTATCTATCAAAAATGTATA. +. ```,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/507
https://github.com/OpenGene/fastp/issues/507:369,testability,test,test,369,can fastp be used to demultiplex fastq files based on indexes in the sequence header?; I was wondering if there is anyway to use fastq to demultiplex fastq files based on an index list and headers in the sequencing files as below. ```. ==> index.txt <==. S1 TTACCGAC-CGTATTCG. S2 TCGTCTGA-TCAAGGAC. S3 TTCCAGGT-AAGCACTG. S4 TACGGTCT-GCAATGGA. S5 AAGACCGT-CAATCGAC. ==> test.fastq <==. @A00929:83:HL75TDRXX:1:2101:13919:1047 1:N:0:TTACCGAC+CGTATTCG. CATATTGATAGTTCGCACAGGTAG. +. FFFFFFFFFFFFFFFFFFFFFFFF. @A00929:83:HL75TDRXX:1:2101:14009:1047 1:N:0:TCGTCTGA+TCAAGGAC. GTGCGTATCTATCAAAAATGTATA. +. ```,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/507
https://github.com/OpenGene/fastp/pull/508:0,deployability,Updat,Update,0,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:55,deployability,updat,updates,55,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:0,safety,Updat,Update,0,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:55,safety,updat,updates,55,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:0,security,Updat,Update,0,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:55,security,updat,updates,55,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:213,testability,instrument,instrumentation,213,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:237,testability,instrument,instrumentation-general-,237,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/pull/508:510,usability,document,documented,510,"Update list of sequencers for poly-g trimming; This PR updates and expands the list of serial numbers of Illumina 2-color SBS sequencers for poly-g trimming. These values come from: https://knowledge.illumina.com/instrumentation/general/instrumentation-general-reference_material-list/000003880. This expands the previous 2-color list by adding:. - NovaSeq 1000/2000 (`@VL @VH`). - NovaSeq X Plus (`@LH`). This also broadens the NovaSeq 6000 serial from (`@A0 --> @A`) per Illumina's doc. (I do not see `@NDX` documented by illumina, but this might be their NextSeq 550Dx FDA-regulated sequencer.)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/508
https://github.com/OpenGene/fastp/issues/510:15,modifiability,pac,pacbio,15,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/510:51,modifiability,Pac,PacBio,51,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/510:98,modifiability,Pac,PacBio,98,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/510:145,modifiability,paramet,parameter,145,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/510:39,safety,test,testing,39,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/510:39,testability,test,testing,39,"question about pacbio data; Hi, . I am testing the PacBio Revio WGS data. . Is fastp suitable for PacBio Revio data? Do you have any recommended parameter thresholds? Looking forward to your reply. Thanks.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/510
https://github.com/OpenGene/fastp/issues/511:162,energy efficiency,adapt,adapters,162,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:162,integrability,adapt,adapters,162,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:162,interoperability,adapt,adapters,162,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:162,modifiability,adapt,adapters,162,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:262,performance,perform,perform,262,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:262,usability,perform,perform,262,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/511:385,usability,help,help,385,"PolyG tail trimming on already trimmed fastq files; Hi,. Thank you for developing fastp! Often, i get fastq files from the sequence provider with already trimmed adapters, i.e., the read length is varying within the file. Could you please advise me on how i can perform polyG tail trimming on such fastq files? May be adding an option to trim only reads having the initial length will help? Many thanks,. Denis",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/511
https://github.com/OpenGene/fastp/issues/512:26,interoperability,specif,specify,26,"UMI dedup; Please can you specify how to use the dedup parameter WITH UMIs to dedup using the UMI information? Also, am I able to use fastp --umi if the UMI is in a seperate file (as with Illumina bcl2fastq conversion)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/512
https://github.com/OpenGene/fastp/issues/512:207,interoperability,convers,conversion,207,"UMI dedup; Please can you specify how to use the dedup parameter WITH UMIs to dedup using the UMI information? Also, am I able to use fastp --umi if the UMI is in a seperate file (as with Illumina bcl2fastq conversion)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/512
https://github.com/OpenGene/fastp/issues/512:55,modifiability,paramet,parameter,55,"UMI dedup; Please can you specify how to use the dedup parameter WITH UMIs to dedup using the UMI information? Also, am I able to use fastp --umi if the UMI is in a seperate file (as with Illumina bcl2fastq conversion)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/512
https://github.com/OpenGene/fastp/issues/513:127,deployability,configurat,configurations,127,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:524,deployability,contain,contain,524,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:744,energy efficiency,adapt,adapters,744,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:127,integrability,configur,configurations,127,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:744,integrability,adapt,adapters,744,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:744,interoperability,adapt,adapters,744,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:127,modifiability,configur,configurations,127,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:744,modifiability,adapt,adapters,744,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:468,safety,compl,complete,468,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:127,security,configur,configurations,127,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:468,security,compl,complete,468,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:429,usability,behavi,behavior,429,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/513:621,usability,command,command,621,Merged reads restricted to length of the read pairs?; Am i missing something obvious? For example if I have the following read configurations across a 400 bp fragment:. ```. 1-------------------------------400 : insert fragment. 1-------------------------250 : read 1 (fwd). 150-------------------400 : read 2 (rev). ```. where running `fastp --merged_out` I get fastq records ONLY spanning positions 1-250. Is this the intended behavior? Is there a way to output the complete 400 bp span where obviously the middle 150-250 contain corrections and the flanks are the single read information? In the case above an example command is:. `fastp -i R1.fq.gz -I R2.fq.gz --merged_out merged.fq --length_required 100 --average_qual 30 --adapter_fasta adapters.fa --merge --overlap_len_require 75 --overlap_diff_limit 30 --overlap_diff_percent_limit 50`.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/513
https://github.com/OpenGene/fastp/issues/514:155,energy efficiency,adapt,adapter,155,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:69,integrability,filter,filtered,69,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:155,integrability,adapt,adapter,155,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:155,interoperability,adapt,adapter,155,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:113,modifiability,paramet,parameters,113,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:155,modifiability,adapt,adapter,155,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/issues/514:386,modifiability,paramet,parameters,386,"Is the statistics of ""adapter_trimmed_reads"" in the file correct?; I filtered the data using fastp v0.23.4, with parameters -Q -y -G -Y 10 --adapter_fasta adapter.fa -l 60 -b 150 . A json file was produced. Part of the json file is shown below. the number of ""too_short_reads"" is 33348097, while the number of ""adapter_trimmed_reads"" turns out to be 168849. I wonder what are the other parameters that cut the bases and cause the sequence to be shorter? Is the statistics of ""adapter_trimmed_reads"" in the file correct? fastp.json file like this:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (150 cycles)"",. ""before_filtering"": {. ""total_reads"":137093708,. ""total_bases"":20564056200,. ""q20_bases"":19272228913,. ""q30_bases"":17758404573,. ""q20_rate"":0.93718,. ""q30_rate"":0.863565,. ""read1_mean_length"":150,. ""gc_content"":0.324056. },. ""after_filtering"": {. ""total_reads"":103645211,. ""total_bases"":14052908415,. ""q20_bases"":13697231054,. ""q30_bases"":13005063797,. ""q20_rate"":0.97469,. ""q30_rate"":0.925436,. ""read1_mean_length"":135,. ""gc_content"":0.43175. }. },. ""filtering_result"": {. ""passed_filter_reads"": 103645211,. ""low_quality_reads"": 0,. ""too_many_N_reads"": 0,. ""low_complexity_reads"": 100400,. ""too_short_reads"": 33348097,. ""too_long_reads"": 0. },. ""duplication"": {. ""rate"": 0.557836. },. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 168849,. ""adapter_trimmed_bases"": 4356259,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""AGATC"":59720, ""AGATCG"":5166, ""AGATCGG"":2648, ""AGATAGGA"":1884, ""AGATCTGA"":2077, ""AGATGGGA"":2162, ""others"":95192}. },",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/514
https://github.com/OpenGene/fastp/pull/515:322,deployability,contain,container,322,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:411,deployability,Updat,Updated,411,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:264,modifiability,reu,reuse,264,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:40,performance,memor,memory,40,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:473,performance,Performance Metric,Performance Metrics,473,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:645,performance,time,time,645,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:203,safety,input,input,203,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:372,safety,detect,detect,372,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:390,safety,input,input,390,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:411,safety,Updat,Updated,411,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:236,security,Modif,Modified,236,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:250,security,sign,signatures,250,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:372,security,detect,detect,372,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:411,security,Updat,Updated,411,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:764,security,ident,identical,764,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:40,usability,memor,memory,40,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:203,usability,input,input,203,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:390,usability,input,input,390,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:400,usability,clarit,clarity,400,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:473,usability,Perform,Performance,473,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/pull/515:640,usability,User,User,640,"Fix ReadPair's never being freed; Fixes memory leak in `PairEndProcessor::interleavedReaderTask()` where `ReadPair` objects were not being freed, resulting in a leak of 16 bytes per read pair across the input (Issue #392 ). Changes:. - Modified call signatures to reuse the same `ReadPair` for all reads, as it's a return container for the Read pairs. - Added a method to detect the end of input for clarity. - Updated freeing of the Read arrays to utilize array delete. **Performance Metrics Comparison on 1KG HG00312 exome with 110M reads**:. | Metric | Before | After |. |--------------------------------------|----------|----------|. | User time (seconds) | 1524.60 | 1507.94 |. | Maximum resident set size (kbytes) | 4423400 | 2548668 |. All results remained identical.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/515
https://github.com/OpenGene/fastp/issues/516:40,availability,ERROR,ERROR,40,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:101,availability,error,error,101,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:149,availability,ERROR,ERROR,149,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:6,deployability,contain,contains,6,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:700,deployability,resourc,resources,700,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:758,deployability,log,log,758,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:700,energy efficiency,resourc,resources,700,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:40,performance,ERROR,ERROR,40,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:101,performance,error,error,101,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:149,performance,ERROR,ERROR,149,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:700,performance,resourc,resources,700,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:40,safety,ERROR,ERROR,40,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:101,safety,error,error,101,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:149,safety,ERROR,ERROR,149,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:700,safety,resourc,resources,700,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:758,safety,log,log,758,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:758,security,log,log,758,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:700,testability,resourc,resources,700,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:758,testability,log,log,758,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:40,usability,ERROR,ERROR,40,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:101,usability,error,error,101,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:149,usability,ERROR,ERROR,149,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:211,usability,help,help,211,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/516:254,usability,command,command,254,"FastQ contains reads header name only - ERROR: sequence and quality have different length; I got the error when running fastp on `sample.fastq.gz`:. ERROR: sequence and quality have different length . Could you help me resolve the issue? Thank you. **My command:**. ```. fastp --in1 ""${READS[0]}"" \. --in2 ""${READS[1]}"" \. --out1 ""${sample_id}_R1_paired.fastq.gz"" \. --out2 ""${sample_id}_R2_paired.fastq.gz"" \. --json ${sample_id}_report.fastp.json \. --html ${sample_id}_report.fastp.html \. --cut_front 3 \. --cut_tail 3 \. --cut_right_window_size 4 \. --cut_right_mean_quality 15 \. --length_required 36 \. --length_limit 75 \. --thread 16 \. --dedup \. --detect_adapter_for_pe \. --adapter_fasta resources/TruSeq3-PE-2.fa \. 2> ${sample_id}_report.fastp.log. ```. **FastQ header only reads:**. `$ zcat sample.fastq.gz | grep -a5 ""@VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC""`. ```. CCCC;CCCCCC-;CCCCCCCCCCC-C;-CCC-CCCCCCCCCCCCCCC;CCC. @VH00294:10:AAAWTLCHV:2:2510:10108:13628 1:N:0:ATTGTGTG+GTTATGGC. CACGGGCTTTTGGCCGTAGTGGTGGGGTTATTTCTCAGCTCATGGTCAAA. +. CCCCCCCCCCC;CCCCCCCCC-CCCCCCCCCCCCCCCCCCC-CC-CCCCC. @VH00294:10:AAAWTLCHV:2:2510:16243:13628 1:N:0:ATTGCGTG+GTTATGGC. +. @VH00294:10:AAAWTLCHV:2:2510:65513:13628 1:N:0:ATTGCGTG+GTTATGGC. ATCCAAAACTTTCAAATAAGGCAAAAATACTGGTACATCTTTAAAATATCT. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/516
https://github.com/OpenGene/fastp/issues/517:168,availability,operat,operations,168,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:119,interoperability,specif,specific,119,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:155,performance,perform,perform,155,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:248,performance,disk,disk,248,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:233,safety,avoid,avoid,233,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:569,safety,detect,detecting,569,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:2297,safety,input,input,2297,"ay be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. write(2, ""Streaming uncompressed "", 23Streaming uncompressed ) = 23. write(2, ""interleaved"", 11interleaved) = 11. write(2, "" reads to STDOUT..."", 19 reads to STDOUT...) = 19. write(2, ""\n"", 1. ) = 1. write(2, ""Enable interleaved output mode f""..., 52Enable interleaved output mode for paired-end input.) = 52. write(2, ""\n"", 1. ) = 1. write(2, ""\n"", 1. ) = 1. open(""r1"", O_RDONLY^Cstrace: Process 42138 detached. <detached ...>. [1]- Done zcat R1.trimmed.fastq.gz | head -n 400 > r1. [2]+ Done zcat R2.trimmed.fastq.gz | head -n 400 > r2. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:569,security,detect,detecting,569,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:155,usability,perform,perform,155,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:288,usability,minim,minimal,288,"Unable to read from named pipes; I'm attempting to use named pipes with `fastp` but have been so far unsuccessful. The specific usecase is I would like to perform some operations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:1168,usability,close,close,1168,"rations on R1 and R2 data, prior to execution of `fastp`, and avoid going to disk in between. . The example below is minimal. From the `strace` output, it appears that `fastp` is successful reading at least the first read from `r1` and `r2`. However, the program then halts. On `ctrl-c`, the `zcat` processes have terminated suggesting the pipes have been consumed. . It may be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. write(2, ""Streaming uncompressed "", 23Streaming uncompressed ) = 23. write(2, ""interleaved"", 11interleaved) = 11. write(2, "" reads to STDOUT..."", 19 reads to STDOUT...) =",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:1729,usability,close,close,1729,"ay be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. write(2, ""Streaming uncompressed "", 23Streaming uncompressed ) = 23. write(2, ""interleaved"", 11interleaved) = 11. write(2, "" reads to STDOUT..."", 19 reads to STDOUT...) = 19. write(2, ""\n"", 1. ) = 1. write(2, ""Enable interleaved output mode f""..., 52Enable interleaved output mode for paired-end input.) = 52. write(2, ""\n"", 1. ) = 1. write(2, ""\n"", 1. ) = 1. open(""r1"", O_RDONLY^Cstrace: Process 42138 detached. <detached ...>. [1]- Done zcat R1.trimmed.fastq.gz | head -n 400 > r1. [2]+ Done zcat R2.trimmed.fastq.gz | head -n 400 > r2. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/517:2297,usability,input,input,2297,"ay be that `fastp` is not detecting EOF in this case as expected. ```bash. $ mkfifo r1. $ mkfifo r2. $ zcat R1.trimmed.fastq.gz | head -n 400 > r1 &. $ zcat R2.trimmed.fastq.gz | head -n 400 > r2 &. $ strace fastp -i r1 -I r2 --html /dev/null --json /dev/null --stdout. ...intentionally removed not relevant output... open(""r1"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""TCACGATCTTTTTTTT\n+\nB@@FFFFFHFHFG""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. munmap(0x7ef86186d000, 8392704) = 0. munmap(0x7ef86146c000, 4198400) = 0. brk(NULL) = 0x55d5810a9000. brk(0x55d5818b3000) = 0x55d5818b3000. brk(NULL) = 0x55d5818b3000. brk(0x55d581cb3000) = 0x55d581cb3000. open(""r2"", O_RDONLY) = 3. fstat(3, {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ef862cf3000. read(3, ""@sequence_id""..., 8388608) = 8192. read(3, ""ATCTCGGTGGTAAGCG\n+\nBB@FFFDFHFHAH""..., 8380416) = 6058. read(3, """", 8372224) = 0. close(3) = 0. munmap(0x7ef862cf3000, 8192) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r1"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. stat(""r2"", {st_mode=S_IFIFO|0644, st_size=0, ...}) = 0. write(2, ""Streaming uncompressed "", 23Streaming uncompressed ) = 23. write(2, ""interleaved"", 11interleaved) = 11. write(2, "" reads to STDOUT..."", 19 reads to STDOUT...) = 19. write(2, ""\n"", 1. ) = 1. write(2, ""Enable interleaved output mode f""..., 52Enable interleaved output mode for paired-end input.) = 52. write(2, ""\n"", 1. ) = 1. write(2, ""\n"", 1. ) = 1. open(""r1"", O_RDONLY^Cstrace: Process 42138 detached. <detached ...>. [1]- Done zcat R1.trimmed.fastq.gz | head -n 400 > r1. [2]+ Done zcat R2.trimmed.fastq.gz | head -n 400 > r2. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/517
https://github.com/OpenGene/fastp/issues/518:21,energy efficiency,adapt,adapter,21,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:217,energy efficiency,adapt,adapter,217,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:360,energy efficiency,adapt,adapter,360,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:405,energy efficiency,adapt,adapter,405,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:446,energy efficiency,adapt,adapter,446,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:21,integrability,adapt,adapter,21,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:217,integrability,adapt,adapter,217,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:360,integrability,adapt,adapter,360,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:405,integrability,adapt,adapter,405,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:446,integrability,adapt,adapter,446,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:458,integrability,sub,subsequent,458,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:21,interoperability,adapt,adapter,21,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:217,interoperability,adapt,adapter,217,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:360,interoperability,adapt,adapter,360,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:405,interoperability,adapt,adapter,405,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:446,interoperability,adapt,adapter,446,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:21,modifiability,adapt,adapter,21,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:217,modifiability,adapt,adapter,217,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:360,modifiability,adapt,adapter,360,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:405,modifiability,adapt,adapter,405,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/518:446,modifiability,adapt,adapter,446,fastp can not remove adapter when the read sequence has indels in the adpter ; @A00199:757:H2T3GDSX7:1:1101:17481:1642 2:N:0:TTAGGC. ------------------------AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT- adapter. CACCACCTGCTCCAAGAGATCGGAAG-GCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATTAA-read_sequence. If there is a missing or inserted in read adapter sequence.Fastp cannot recognize this adapter sequence and will not remove the adapter and subsequent sequences in the end .,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/518
https://github.com/OpenGene/fastp/issues/519:69,availability,down,download,69,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:143,availability,down,download,143,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:181,deployability,version,versions,181,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:238,deployability,version,version,238,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:181,integrability,version,versions,181,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:238,integrability,version,version,238,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:181,modifiability,version,versions,181,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/519:238,modifiability,version,version,238,"prebuilt fastp binary links for Linux are broken; Hi, I am trying to download the latest prebuilt fastp binary for Linux, but none of the wget download links work, even for earlier versions (http://opengene.org/fastp/fastp). The Bioconda version is out of date, and I do not have compile from source capabilities on my server. Can you please assist?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/519
https://github.com/OpenGene/fastp/issues/520:140,usability,command,command,140,"Duplication; There is also a Duplication diagram in the fastp sample report. How can I output this diagram after processing my own data? My command is fastp -i 1.fq.gz -I 2.fq.gz -Q -L -G -p, The duplication rate is calculated: 0.279380%, but the Duplication graph is not displayed.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/520
https://github.com/OpenGene/fastp/issues/521:0,availability,Error,Error,0,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:36,availability,error,error,36,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:151,availability,error,error,151,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:267,availability,ERROR,ERROR,267,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:835,availability,ERROR,ERROR,835,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:886,availability,ERROR,ERROR,886,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:900,availability,Error,Error,900,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1036,availability,ERROR,ERROR,1036,"or found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1050,availability,Error,Error,1050,"equence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-G",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1187,availability,ERROR,ERROR,1187," Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1201,availability,Error,Error,1201,"p) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1337,availability,ERROR,ERROR,1337,"-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1351,availability,Error,Error,1351,"16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1487,availability,ERROR,ERROR,1487,"AACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have diffe",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2452,availability,ERROR,ERROR,2452,"S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', gotatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2700,availability,ERROR,ERROR,2700,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:3595,availability,ERROR,ERROR,3595,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:0,performance,Error,Error,0,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:36,performance,error,error,36,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:151,performance,error,error,151,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:267,performance,ERROR,ERROR,267,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:835,performance,ERROR,ERROR,835,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:886,performance,ERROR,ERROR,886,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:900,performance,Error,Error,900,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1036,performance,ERROR,ERROR,1036,"or found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1050,performance,Error,Error,1050,"equence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-G",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1187,performance,ERROR,ERROR,1187," Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1201,performance,Error,Error,1201,"p) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1337,performance,ERROR,ERROR,1337,"-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1351,performance,Error,Error,1351,"16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1487,performance,ERROR,ERROR,1487,"AACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have diffe",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2452,performance,ERROR,ERROR,2452,"S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', gotatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2700,performance,ERROR,ERROR,2700,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:3595,performance,ERROR,ERROR,3595,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:0,safety,Error,Error,0,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:36,safety,error,error,36,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:151,safety,error,error,151,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:267,safety,ERROR,ERROR,267,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:835,safety,ERROR,ERROR,835,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:886,safety,ERROR,ERROR,886,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:900,safety,Error,Error,900,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1036,safety,ERROR,ERROR,1036,"or found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1050,safety,Error,Error,1050,"equence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-G",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1187,safety,ERROR,ERROR,1187," Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1201,safety,Error,Error,1201,"p) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2F",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1337,safety,ERROR,ERROR,1337,"-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1351,safety,Error,Error,1351,"16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1487,safety,ERROR,ERROR,1487,"AACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have diffe",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2452,safety,ERROR,ERROR,2452,"S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', gotatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2700,safety,ERROR,ERROR,2700,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:3595,safety,ERROR,ERROR,3595,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:0,usability,Error,Error,0,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:36,usability,error,error,36,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:133,usability,help,help,133,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:151,usability,error,error,151,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:267,usability,ERROR,ERROR,267,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:835,usability,ERROR,ERROR,835,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:886,usability,ERROR,ERROR,886,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:900,usability,Error,Error,900,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:934,usability,User,Users,934,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:950,usability,Document,Documents,950,"Error trimming reads - invalid gzip error found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1036,usability,ERROR,ERROR,1036,"or found and sequence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B0",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1050,usability,Error,Error,1050,"equence and quality have different lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-G",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1084,usability,User,Users,1084," lengths; Hi all, I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1100,usability,Document,Documents,1100,"I was wondering can someone help me with this error pasted below? I've never seen it. Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF5",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1187,usability,ERROR,ERROR,1187," Cheers! (fastp) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1201,usability,Error,Error,1201,"p) drflanman@Peters-MacBook-Air-4 Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1235,usability,User,Users,1235,"Scripts % ./Fastp_Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GD",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1251,usability,Document,Documents,1251,"Script.sh. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different lengthatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1337,usability,ERROR,ERROR,1337,"-L7FRV:1:1101:16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1351,usability,Error,Error,1351,"16145:10402 1:N:0:3. GTCGGTAACTATAACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAG",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1385,usability,User,Users,1385,"ACGTCAAGGGTGTAATCACGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CAT",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1401,usability,Document,Documents,1401,"CGGGTAATAGCCTGCGGCGAGTCGGACTCATCATCACACAGCGGACGCACACCGGAGTAGGTCCAGACGATATCGTCACGGCTTAACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:+",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:1487,usability,ERROR,ERROR,1487,"AACTGCTTTTTAAAGTGCGTGTTATACACTTTCAGCAG. +. CCCCCGGGGGGGGGGGGGGGGGGGGGGGFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGDGGGGFEGGGGFGFGGGGGGGGFGGGGGGGGGGGGGGDGGGGGGFGGGGGGGGGGFGGGGGGGGGGGGGGGGGGFGGFFGGGGGFEGCFFGGGGGGGGGGGGFGGGGGGGGGGGFGGGGGGGGGGGG>FGGGGGGEFE>5CGGGGGGGGGGGGGFFGGGGCEGGGGGDEDDGFFCGG=DFGGGGGF<>>FFGEEEB5BFFB==4AFFF<4@AB@>?EFFFFAFFFF?<BA>DBF9. ERROR: sequence and quality have different length. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3563_S6_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3567_S16_L001_R2_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3576_S7_L001_R1_001.fastq.gz. ERROR: igzip: Error invalid gzip header found: /Users/drflanman/Documents/Work/HSE/Research/Query_Failed_VTEC/Fastq/23S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have diffe",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2452,usability,ERROR,ERROR,2452,"S-3581_S8_L001_R1_001.fastq.gz. ERROR: sequence and quality have different length:. @M04968:233:000000000-L7FRV:1:2119:22180:16168 1:N:0:14. GTATGGGGCGGTGTGCATGCAAAACCCTAAACTCCAGTACCTCACTGATTATTCCCCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', gotatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:2700,usability,ERROR,ERROR,2700,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/521:3595,usability,ERROR,ERROR,3595,"CCTGGGACGCACACAGAAGCGTTTCTGACGACGTGGGAGGGATTTACCTGCTTGCGGCCGAATATGAGCACTACGGGGCTCGTATGGCTTCCTGTGGCGGTTTACTGCGTTTCGGGTGGTCTACCCTCAAGGAAACCGGAGAAACGCGTCTGAGGCTGCGTGAGGCACATTTCTGC. +. CCCCCGGGGGGGDGEGG9FFGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGGCFGFD,@FGDGGGF8FFEC>FFF<CDFFGGGGFF<ADFCEF@@GED+>CCG8FFCFEGFF<FFFGG+@@FEC<D<FFCFFFFC@FGECFGGEFGGGG,FC9;FGGGEC:C*,<BFGEF*=<F7<BGCGTC,<B00000FC9;F000-GCAAAFFDEGGGG8CGGGCFGGEFGGGFGGG9C8@F9FFGGGGFGCFGCGCF505:1GGGGFGC,@FG:GGG9::C000-GGFGACGGGGGCGGATG<F7<BGGGEFFGGGG+ACGGGGGGEEFGG:N:7F<FGGTGCG8ATGAGCAAAC2FG:CAACACGC888888?CTCAA:++030;9*>GDFFDFGFGGATDFGFGGTGCTG+030;9*>GDGG>FFGGTGGGCGTGATGCABFAEF9E?DAAGAG19:::CFE@TTTCA@:221CCCTCTGATGCGCCCTGGGACGCACACAGAAGCGTTT6*AA:++030L7FRV7FRVCAGT000CATGEC<D<FFCAGAFFFF:++03TGACC:000CACTA@GE71CCGCTCF:++03TF:++ACATT. ERROR: sequence and quality have different length. Expected '+', got CCGGGGGGGGAGCCCCCGGGGEGG6GGGAACATATGAGCAGAGTTGGGGGTGCAGC+EGGCAGCT0,:110GGGGG1AAC<:0GAGTTCCG7EGGTGA<GGGF,GCAGAGTD<@M0496GGGDEDFCFFGGGG@@GFGGGGGGGGGGGCFG<2=GGGGGGETTTTCCFGG-3(((((. ERROR: '+' expected. Expected '+', got GATTGACACAAGGCCAATCCGTAAGGGGC9,NNNGT,7#NNNNC8E:NGTAAGGGGNNCNNG7F:F900008>AAA+#4*FGDFGGGFFGFBGGGGGGGFGGGEGGGE:<CFNC8EGGGGF0000*4####3##4*61##GGCFGGGF##3#TCGG7F:CGCACA8@FEGGG:132F##37CFGEGATTTTTTGCCGCGCGGCC##37CAGGG3C1##GCG*619CGTTCGG7F:GGGEGTAGEGGGTTGGCGGCTTTTTCCCCGCGTTTCCA68:@NNNNGNNGGGGGGGGGTAGTAATGGCCTGA9:2 GTTGACAATGGGTAAT?##378 2:NNGNANNCTTGACNNGN,CGGGGE8GFBFGGG5CC85**###0GTTCCATTCAGTTGGCCGGTATAGATTTCGCAACCGCCGAG:?AATG9-C-C@DFGCCF9FTTCCAGGGGE8GFB8TGCC851A<FGGGCG####8TGGCGGGGDAGCGTTTTGGFCFATTGGGGDGDA?GTCGCATTATGGGGGE8GANTGGGCATTA##3GGDGDAGGAF?FE7>GGGGGGG?NG7F:FGCAA?GGCGA1A<FAFFGG,FCAGGGGCTGGGCCCGACCG,4GGGF,FCAATAAAGDGG4GGGCCC3##4FFGFCCNNT1:2####GGGCGGCGGCG@>F8AAAGDGGCGGNNT19GCGGCG@>F8AAAGDGGCGGCG@E7>GGGGGNNNN77777TTTGCN:0:@?<####AGATTGCN:211GGG:@?GTAE:@?<,,,,,,,,,,892F8AAGGD2F#=,892ACGGCGGGCCC;90GTTGCGG7TTAGE+3##GGNNNTGATGDAGGATAGE+3:N:0:1. ERROR: '+' expected. (fastp) drflanman@Peters-MacBook-Air-4 Scripts %",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/521
https://github.com/OpenGene/fastp/issues/522:9,availability,error,error,9,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:200,availability,error,error,200,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:21,energy efficiency,load,loading,21,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:212,energy efficiency,load,loading,212,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:29,interoperability,share,shared,29,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:73,interoperability,share,shared,73,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:220,interoperability,share,shared,220,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:264,interoperability,share,shared,264,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:9,performance,error,error,9,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:21,performance,load,loading,21,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:200,performance,error,error,200,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:212,performance,load,loading,212,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:9,safety,error,error,9,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:200,safety,error,error,200,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:9,usability,error,error,9,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/522:200,usability,error,error,200,./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory; When I compiled the fastp accord the instruction met the this problem. ./fastp: error while loading shared libraries: libisal.so.2: cannot open shared object file: No such file or directory. How can I solve this problem? Thank you！,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/522
https://github.com/OpenGene/fastp/issues/523:0,deployability,Build,Building,0,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:88,deployability,pipelin,pipeline,88,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:125,deployability,instal,installing,125,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:147,deployability,instal,install,147,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:88,integrability,pipelin,pipeline,88,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:207,integrability,messag,message,207,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:207,interoperability,messag,message,207,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/523:347,safety,avoid,avoid,347,"Building a fastp binary on Apple Silicon; Hello, I am trying to use fastp for an RNAseq pipeline on an M2 Pro Mac Mini. When installing with _brew install _fastp__ homebrew is giving an invalid architechure message. Has anyone sucessfuly built fastp from source on Apple Silicon? Also has anyone got libisal to compile on Apple Silicon? Trying to avoid using andaconda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/523
https://github.com/OpenGene/fastp/issues/524:102,interoperability,format,format,102,"invalid gzip output when output is empty; When the output fastqs are empty, the output is not in gzip format. Instead the output files are simply empty plaintext files.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/524
https://github.com/OpenGene/fastp/issues/524:139,testability,simpl,simply,139,"invalid gzip output when output is empty; When the output fastqs are empty, the output is not in gzip format. Instead the output files are simply empty plaintext files.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/524
https://github.com/OpenGene/fastp/issues/524:139,usability,simpl,simply,139,"invalid gzip output when output is empty; When the output fastqs are empty, the output is not in gzip format. Instead the output files are simply empty plaintext files.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/524
https://github.com/OpenGene/fastp/pull/525:66,deployability,Updat,Update,66,"Remove the hardcoded trim tail and trim front length limitations; Update options.cpp to remove hardcoded trim tail and front length limitations. Addresses issues #453, #300, #121, incorporating the change suggested by @MichelMoser",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/525
https://github.com/OpenGene/fastp/pull/525:66,safety,Updat,Update,66,"Remove the hardcoded trim tail and trim front length limitations; Update options.cpp to remove hardcoded trim tail and front length limitations. Addresses issues #453, #300, #121, incorporating the change suggested by @MichelMoser",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/525
https://github.com/OpenGene/fastp/pull/525:11,security,hardcod,hardcoded,11,"Remove the hardcoded trim tail and trim front length limitations; Update options.cpp to remove hardcoded trim tail and front length limitations. Addresses issues #453, #300, #121, incorporating the change suggested by @MichelMoser",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/525
https://github.com/OpenGene/fastp/pull/525:66,security,Updat,Update,66,"Remove the hardcoded trim tail and trim front length limitations; Update options.cpp to remove hardcoded trim tail and front length limitations. Addresses issues #453, #300, #121, incorporating the change suggested by @MichelMoser",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/525
https://github.com/OpenGene/fastp/pull/525:95,security,hardcod,hardcoded,95,"Remove the hardcoded trim tail and trim front length limitations; Update options.cpp to remove hardcoded trim tail and front length limitations. Addresses issues #453, #300, #121, incorporating the change suggested by @MichelMoser",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/525
https://github.com/OpenGene/fastp/issues/526:78,deployability,releas,released,78,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:102,deployability,updat,update,102,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:194,deployability,releas,released,194,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:218,deployability,updat,update,218,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1172,deployability,fail,failed,1172,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:559,integrability,filter,filtered,559,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:669,integrability,filter,filters,669,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:750,integrability,filter,filters,750,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:851,integrability,filter,filters,851,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1190,integrability,filter,filters,1190,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1926,integrability,filter,filtered,1926,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:317,interoperability,specif,specifying,317,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:416,interoperability,specif,specify,416,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1667,modifiability,paramet,parameters,1667,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:770,reliability,doe,doesn,770,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:871,reliability,doe,doesn,871,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1172,reliability,fail,failed,1172,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:102,safety,updat,update,102,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:218,safety,updat,update,218,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:278,safety,input,input,278,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1635,safety,detect,detection,1635,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:2010,safety,prevent,preventing,2010,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:2066,safety,prevent,prevent,2066,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:102,security,updat,update,102,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:218,security,updat,update,218,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1635,security,detect,detection,1635,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:2010,security,preven,preventing,2010,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:2066,security,preven,prevent,2066,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:278,usability,input,input,278,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:291,usability,support,supports,291,"Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yy",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1281,usability,indicat,indicate,1281,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/issues/526:1514,usability,prefer,prefers,1514,"e update here:; Hi guys, this feature is revised and improved a lot in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`. _Originally posted by @sfchen in https://github.com/OpenGene/fastp/issues/31#issuecomment-480669321_. . Hey,. So i'm using kmc to manipulate kmers in PE .fastq files merged & filtered by fastp, it seems that in the merged out file the ""merged_xxx_yyy"" tag is preventing KMC from reading the file, is there a way to prevent this tag from being added?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/526
https://github.com/OpenGene/fastp/pull/527:13,deployability,contain,container,13,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:80,deployability,build,build,80,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:90,deployability,contain,container,90,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:104,deployability,build,builds,104,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:154,deployability,version,version,154,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:154,integrability,version,version,154,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:171,interoperability,distribut,distribution,171,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/pull/527:154,modifiability,version,version,154,Add a Docker container; This pull request adds a Dockerfile and instructions to build the container. It builds the image by pulling a pre-compiled binary version from the distribution (not compilation required),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/527
https://github.com/OpenGene/fastp/issues/528:15,integrability,filter,filtering,15,"Discrepency in filtering restults and reads after filtering; Here is the head of the file `stats_fastp.json` for a random single-end Illumina sequencing sample:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (75 cycles)"",. ""before_filtering"": {. ""total_reads"":19014947,. ""total_bases"":1426121025,. ""q20_bases"":1368126463,. ""q30_bases"":1340057991,. ""q20_rate"":0.959334,. ""q30_rate"":0.939652,. ""read1_mean_length"":75,. ""gc_content"":0.501123. },. ""after_filtering"": {. ""total_reads"":10933431,. ""total_bases"":780019338,. ""q20_bases"":758743644,. ""q30_bases"":744983654,. ""q20_rate"":0.972724,. ""q30_rate"":0.955084,. ""read1_mean_length"":71,. ""gc_content"":0.498169. }. },. ""filtering_result"": {. ""passed_filter_reads"": 18724357,. ""low_quality_reads"": 1329,. ""too_many_N_reads"": 7,. ""too_short_reads"": 289254,. ""too_long_reads"": 0. },. after running it through fastp with the following command:. $ fastp --detect_adapter_for_pe --overrepresentation_analysis --dedup --correction --cut_right --thread 10 --in1 fwd.fastq.gz --out1 clean/fwd.fastq.gz --unpaired1 clean/fwd.fastq.singletons.fastq --html stats_fastp.html --json stats_fastp.json. We can see that `after_filtering` there are 10'933'431 reads left in the cleaned FASTQ. However the `filtering_result` category tells us that as many as 18'724'357 passed the filter. This is a huge mismatch. What happened to the 8 or so million reads? Why did they get removed?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/528
https://github.com/OpenGene/fastp/issues/528:50,integrability,filter,filtering,50,"Discrepency in filtering restults and reads after filtering; Here is the head of the file `stats_fastp.json` for a random single-end Illumina sequencing sample:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (75 cycles)"",. ""before_filtering"": {. ""total_reads"":19014947,. ""total_bases"":1426121025,. ""q20_bases"":1368126463,. ""q30_bases"":1340057991,. ""q20_rate"":0.959334,. ""q30_rate"":0.939652,. ""read1_mean_length"":75,. ""gc_content"":0.501123. },. ""after_filtering"": {. ""total_reads"":10933431,. ""total_bases"":780019338,. ""q20_bases"":758743644,. ""q30_bases"":744983654,. ""q20_rate"":0.972724,. ""q30_rate"":0.955084,. ""read1_mean_length"":71,. ""gc_content"":0.498169. }. },. ""filtering_result"": {. ""passed_filter_reads"": 18724357,. ""low_quality_reads"": 1329,. ""too_many_N_reads"": 7,. ""too_short_reads"": 289254,. ""too_long_reads"": 0. },. after running it through fastp with the following command:. $ fastp --detect_adapter_for_pe --overrepresentation_analysis --dedup --correction --cut_right --thread 10 --in1 fwd.fastq.gz --out1 clean/fwd.fastq.gz --unpaired1 clean/fwd.fastq.singletons.fastq --html stats_fastp.html --json stats_fastp.json. We can see that `after_filtering` there are 10'933'431 reads left in the cleaned FASTQ. However the `filtering_result` category tells us that as many as 18'724'357 passed the filter. This is a huge mismatch. What happened to the 8 or so million reads? Why did they get removed?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/528
https://github.com/OpenGene/fastp/issues/528:1332,integrability,filter,filter,1332,"Discrepency in filtering restults and reads after filtering; Here is the head of the file `stats_fastp.json` for a random single-end Illumina sequencing sample:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (75 cycles)"",. ""before_filtering"": {. ""total_reads"":19014947,. ""total_bases"":1426121025,. ""q20_bases"":1368126463,. ""q30_bases"":1340057991,. ""q20_rate"":0.959334,. ""q30_rate"":0.939652,. ""read1_mean_length"":75,. ""gc_content"":0.501123. },. ""after_filtering"": {. ""total_reads"":10933431,. ""total_bases"":780019338,. ""q20_bases"":758743644,. ""q30_bases"":744983654,. ""q20_rate"":0.972724,. ""q30_rate"":0.955084,. ""read1_mean_length"":71,. ""gc_content"":0.498169. }. },. ""filtering_result"": {. ""passed_filter_reads"": 18724357,. ""low_quality_reads"": 1329,. ""too_many_N_reads"": 7,. ""too_short_reads"": 289254,. ""too_long_reads"": 0. },. after running it through fastp with the following command:. $ fastp --detect_adapter_for_pe --overrepresentation_analysis --dedup --correction --cut_right --thread 10 --in1 fwd.fastq.gz --out1 clean/fwd.fastq.gz --unpaired1 clean/fwd.fastq.singletons.fastq --html stats_fastp.html --json stats_fastp.json. We can see that `after_filtering` there are 10'933'431 reads left in the cleaned FASTQ. However the `filtering_result` category tells us that as many as 18'724'357 passed the filter. This is a huge mismatch. What happened to the 8 or so million reads? Why did they get removed?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/528
https://github.com/OpenGene/fastp/issues/528:1355,interoperability,mismatch,mismatch,1355,"Discrepency in filtering restults and reads after filtering; Here is the head of the file `stats_fastp.json` for a random single-end Illumina sequencing sample:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (75 cycles)"",. ""before_filtering"": {. ""total_reads"":19014947,. ""total_bases"":1426121025,. ""q20_bases"":1368126463,. ""q30_bases"":1340057991,. ""q20_rate"":0.959334,. ""q30_rate"":0.939652,. ""read1_mean_length"":75,. ""gc_content"":0.501123. },. ""after_filtering"": {. ""total_reads"":10933431,. ""total_bases"":780019338,. ""q20_bases"":758743644,. ""q30_bases"":744983654,. ""q20_rate"":0.972724,. ""q30_rate"":0.955084,. ""read1_mean_length"":71,. ""gc_content"":0.498169. }. },. ""filtering_result"": {. ""passed_filter_reads"": 18724357,. ""low_quality_reads"": 1329,. ""too_many_N_reads"": 7,. ""too_short_reads"": 289254,. ""too_long_reads"": 0. },. after running it through fastp with the following command:. $ fastp --detect_adapter_for_pe --overrepresentation_analysis --dedup --correction --cut_right --thread 10 --in1 fwd.fastq.gz --out1 clean/fwd.fastq.gz --unpaired1 clean/fwd.fastq.singletons.fastq --html stats_fastp.html --json stats_fastp.json. We can see that `after_filtering` there are 10'933'431 reads left in the cleaned FASTQ. However the `filtering_result` category tells us that as many as 18'724'357 passed the filter. This is a huge mismatch. What happened to the 8 or so million reads? Why did they get removed?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/528
https://github.com/OpenGene/fastp/issues/528:901,usability,command,command,901,"Discrepency in filtering restults and reads after filtering; Here is the head of the file `stats_fastp.json` for a random single-end Illumina sequencing sample:. {. ""summary"": {. ""fastp_version"": ""0.23.4"",. ""sequencing"": ""single end (75 cycles)"",. ""before_filtering"": {. ""total_reads"":19014947,. ""total_bases"":1426121025,. ""q20_bases"":1368126463,. ""q30_bases"":1340057991,. ""q20_rate"":0.959334,. ""q30_rate"":0.939652,. ""read1_mean_length"":75,. ""gc_content"":0.501123. },. ""after_filtering"": {. ""total_reads"":10933431,. ""total_bases"":780019338,. ""q20_bases"":758743644,. ""q30_bases"":744983654,. ""q20_rate"":0.972724,. ""q30_rate"":0.955084,. ""read1_mean_length"":71,. ""gc_content"":0.498169. }. },. ""filtering_result"": {. ""passed_filter_reads"": 18724357,. ""low_quality_reads"": 1329,. ""too_many_N_reads"": 7,. ""too_short_reads"": 289254,. ""too_long_reads"": 0. },. after running it through fastp with the following command:. $ fastp --detect_adapter_for_pe --overrepresentation_analysis --dedup --correction --cut_right --thread 10 --in1 fwd.fastq.gz --out1 clean/fwd.fastq.gz --unpaired1 clean/fwd.fastq.singletons.fastq --html stats_fastp.html --json stats_fastp.json. We can see that `after_filtering` there are 10'933'431 reads left in the cleaned FASTQ. However the `filtering_result` category tells us that as many as 18'724'357 passed the filter. This is a huge mismatch. What happened to the 8 or so million reads? Why did they get removed?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/528
https://github.com/OpenGene/fastp/issues/529:715,availability,down,downstream,715,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:315,energy efficiency,Current,Currently,315,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:77,interoperability,specif,specific,77,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:387,interoperability,format,formats,387,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:726,interoperability,compatib,compatibility,726,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:460,safety,compl,complex,460,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:460,security,compl,complex,460,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:32,usability,tool,tools,32,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/529:228,usability,tool,tools,228,"Feature Request: UMI Join; Some tools that work with extracted UMIs expect a specific delimiter between umi1 and umi2 (assuming each read has its own UMI). E.g. fgbio CopyUmiFromReadName (https://fulcrumgenomics.github.io/fgbio/tools/latest/CopyUmiFromReadName.html) expects something like $read_name:ACTG-CCGA . . Currently it seems like fastp can only output $read_name:ACTG_CCGA type formats. This can be shifted after the fastp run, but this shifting gets complex if multiple compressed parts are being written. Request is a for a now CLI arg --umi_join that will define the character placed between the UMIs in read1 and read2. The default value would remain '_' but could be adjusted to '-' or '+' for better downstream compatibility.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/529
https://github.com/OpenGene/fastp/issues/530:226,availability,avail,available,226,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:17,integrability,filter,filtering,17,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:48,integrability,filter,filtered,48,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:271,integrability,filter,filtering,271,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:302,integrability,filter,filtered,302,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:378,integrability,filter,filtering,378,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:226,reliability,availab,available,226,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:226,safety,avail,available,226,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:226,security,availab,available,226,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/530:508,usability,close,close,508,"Is `Read1 before filtering` field in the report filtered at all or is it the raw read count per mate?; We would like to have a quick way to doublecheck the number of reads in out FASTQ files. Since this information is already available in fastp reports. Is `Read1 before filtering` field in the report filtered in any way at all? . In other words, would comparing `Read1 before filtering` give the same result as counting every single read in the FASTQ file? If questions are not permitted in issues, please close/remove this post. Many thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/530
https://github.com/OpenGene/fastp/issues/531:139,availability,error,errors,139,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:0,energy efficiency,Adapt,Adapter,0,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:84,energy efficiency,adapt,adapters,84,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:179,energy efficiency,adapt,adapter,179,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:274,energy efficiency,adapt,adapter,274,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:0,integrability,Adapt,Adapter,0,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:84,integrability,adapt,adapters,84,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:179,integrability,adapt,adapter,179,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:274,integrability,adapt,adapter,274,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:0,interoperability,Adapt,Adapter,0,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:84,interoperability,adapt,adapters,84,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:179,interoperability,adapt,adapter,179,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:274,interoperability,adapt,adapter,274,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:378,interoperability,mismatch,mismatch,378,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:0,modifiability,Adapt,Adapter,0,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:84,modifiability,adapt,adapters,84,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:179,modifiability,adapt,adapter,179,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:274,modifiability,adapt,adapter,274,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:139,performance,error,errors,139,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:139,safety,error,errors,139,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:21,security,team,team,21,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/531:139,usability,error,errors,139,"Adapter indels; Dear team,. I am working on some data of mine using my own homebrew adapters. I have noticed that fastp has no leniency in errors (PCR or oligo synthesis?) in the adapter recognition and removal. When analysing data in fastQC I see over-representation of my adapter sequence with minor mutations (indels). See the example below. Is there any way you could add a mismatch value? Like allowing for 1 or 2 mutations? Example:. GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCAC. GATCGGAAGAGCACACGTC GAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGAACCCAGTCAC. GATCGGAAGAGCACAC TCTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCT AACTCCAGTCA. GATCGGAAGAGCACACGTCTGAACTC AGTCAC. GATCGGAAGAGCACACG CTGAACTCCAGTCAC. GATCGGAAGAGCACACGTCTGA CTCCAGTCAC. GATCGGAAGAGCACACGT TGAACTCCAGTCAC. GATCGGAAGAGCACA GTCTGAACTCCAGTCAC. Thank you!! Cheers. Kor.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/531
https://github.com/OpenGene/fastp/issues/532:189,energy efficiency,adapt,adapter,189,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:274,energy efficiency,adapt,adapter,274,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:189,integrability,adapt,adapter,189,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:274,integrability,adapt,adapter,274,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:189,interoperability,adapt,adapter,189,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:274,interoperability,adapt,adapter,274,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:189,modifiability,adapt,adapter,189,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:274,modifiability,adapt,adapter,274,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:0,reliability,Doe,Does,0,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/issues/532:103,usability,document,documentation,103,"Does fastp remove primer sequences for aplicon sequencing results?; Hello, I've been going through the documentation and trying to find options for primer trimming. I am unsure whether the adapter trimming option could also trim primers. Another thing I noticed is that the adapter sequence only takes ATGC but could not recognize other letters. For example, if I am using the following primers, is the program also able to trim the sequence? Forward: 5’-GGWACWGGWTGAACWGTWTAYCCYCC-3’. Reverse: 5’-TAIACYTCIGGRTGICCRAARAAYCA-3’",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/532
https://github.com/OpenGene/fastp/pull/533:11,availability,error,errors,11,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:67,availability,error,error,67,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:509,availability,reliab,reliably,509,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:591,deployability,log,logs,591,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:636,deployability,fail,failed,636,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:681,deployability,Fail,Failed,681,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:654,integrability,endpoint,endpoint,654,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:11,performance,error,errors,11,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:67,performance,error,error,67,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:509,reliability,reliab,reliably,509,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:636,reliability,fail,failed,636,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:681,reliability,Fail,Failed,681,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:11,safety,error,errors,11,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:67,safety,error,error,67,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:444,safety,compl,complicated,444,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:591,safety,log,logs,591,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:444,security,compl,complicated,444,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:591,security,log,logs,591,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:591,testability,log,logs,591,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:11,usability,error,errors,11,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:67,usability,error,error,67,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:731,usability,Command,Command,731,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:751,usability,statu,status,751,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/pull/533:764,usability,statu,status,764,"check read errors in fastqreader; It turns out, if there is a read error while reading a fastq, fastp will loop infinitely. Per cpp [fread docs](https://cplusplus.com/reference/cstdio/fread/#return), it looks like the caller should check both `feof` and `ferror`. Because `ferror` wasn't checked, fastp went right back to `readToBuf` and looped infinitely. The issue is really hard to reproduce because you need an unreliable filesystem. While complicated, thankfully I could rerun in our own environment and reliably reproduce, but not in a way I can easily post here. Anyway, here are the logs I saw after fixing:. ```. reading fastq failed: Transport endpoint is not connected. Failed reading: sg_9.fastq. ```. And I saw:. ```. Command exited with status: exit status: 1. ```. So we do see the process actually exit instead of hang.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/533
https://github.com/OpenGene/fastp/issues/534:0,availability,ERROR,ERROR,0,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:38,availability,error,error,38,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:320,availability,error,error,320,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:359,availability,ERROR,ERROR,359,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:394,availability,error,error,394,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:116,integrability,pub,public,116,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:157,integrability,pub,public,157,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:198,integrability,pub,public,198,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:253,integrability,pub,public,253,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:0,performance,ERROR,ERROR,0,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:38,performance,error,error,38,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:320,performance,error,error,320,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:359,performance,ERROR,ERROR,359,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:394,performance,error,error,394,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:384,reliability,doe,does,384,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:0,safety,ERROR,ERROR,0,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:38,safety,error,error,38,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:320,safety,error,error,320,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:359,safety,ERROR,ERROR,359,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:394,safety,error,error,394,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:0,usability,ERROR,ERROR,0,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:38,usability,error,error,38,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:320,usability,error,error,320,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:359,usability,ERROR,ERROR,359,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/534:394,usability,error,error,394,"ERROR: '+' expected; I encountered an error while using the basic functions of fastp,here is my conmond:. fastp -i /public/data/RNA-seq1116/R1_fq.tar.gz -I /public/data/RNA-seq1116/R2_fq.tar.gz -o /public/data/RNA_seq1116/clean_reads/R1_trim.tar.gz -O /public/data/RNA_seq1116/clean_reads/R2_trim.tar.gz -f 9 -q 20. The error is:. Expected '+', got ´쥂RQQ©Nr. ERROR: '+' expected. Why does this error occur?And how can I solve it? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/534
https://github.com/OpenGene/fastp/issues/535:1976,deployability,fail,failed,1976,CGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail -,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2021,deployability,fail,failed,2021,nce_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quali,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2063,deployability,fail,failed,2063,-trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3889,deployability,fail,failed,3889,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3933,deployability,fail,failed,3933,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3973,deployability,fail,failed,3973,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2109,energy efficiency,adapt,adapter,2109,30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size pe,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2158,energy efficiency,adapt,adapters,2158,tml sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Ad,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4021,energy efficiency,adapt,adapter,4021,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4070,energy efficiency,adapt,adapters,4070,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1302,integrability,filter,filtering,1302,"ont --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20"". For case 1, I got ""insert size peaks : 271"". For case 2, I got ""insert size peaks : 151"". I used same sample both case 1 and case 2. . **Does anyone know why the results turned out differently?**. ### Case 1. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1459,integrability,filter,filtering,1459,"--cut_right_mean_quality=20"". For case 1, I got ""insert size peaks : 271"". For case 2, I got ""insert size peaks : 151"". I used same sample both case 1 and case 2. . **Does anyone know why the results turned out differently?**. ### Case 1. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1615,integrability,filter,filtering,1615,ase 2. . **Does anyone know why the results turned out differently?**. ### Case 1. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_fa,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1771,integrability,filter,filtering,1771,q.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1915,integrability,Filter,Filtering,1915,--failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1949,integrability,filter,filter,1949,.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2109,integrability,adapt,adapter,2109,30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size pe,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2158,integrability,adapt,adapters,2158,tml sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Ad,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3215,integrability,filter,filtering,3215,77467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. ,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3372,integrability,filter,filtering,3372,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3528,integrability,filter,filtering,3528,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3684,integrability,filter,filtering,3684,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3828,integrability,Filter,Filtering,3828,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3862,integrability,filter,filter,3862,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4021,integrability,adapt,adapter,4021,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4070,integrability,adapt,adapters,4070,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2109,interoperability,adapt,adapter,2109,30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size pe,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2158,interoperability,adapt,adapters,2158,tml sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Ad,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4021,interoperability,adapt,adapter,4021,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4070,interoperability,adapt,adapters,4070,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2109,modifiability,adapt,adapter,2109,30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size pe,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2158,modifiability,adapt,adapters,2158,tml sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Ad,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4021,modifiability,adapt,adapter,4021,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:4070,modifiability,adapt,adapters,4070,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:631,reliability,Doe,Does,631,"I obtained different 'insert size peaks' when I used different options for the same paired-end sequencing sample.; I obtained different 'insert size peaks' when I used different options for the same paired-end sequencing sample. I used the fastp v0.23.4. Different options are ""--length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20"". For case 1, I got ""insert size peaks : 271"". For case 2, I got ""insert size peaks : 151"". I used same sample both case 1 and case 2. . **Does anyone know why the results turned out differently?**. ### Case 1. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low qualit",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:1976,reliability,fail,failed,1976,CGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail -,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2021,reliability,fail,failed,2021,nce_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quali,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2063,reliability,fail,failed,2063,-trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3889,reliability,fail,failed,3889,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3933,reliability,fail,failed,3933,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:3973,reliability,fail,failed,3973,> Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 293114436. > total bases: 43166016157. > Q20 bases: 42676330864(98.8656%). > Q30 bases: 41264878670(95.5958%). > . > Read2 after filtering:. > total reads: 293114436. > total bases: 42964229053. > Q20 bases: 42244269978(98.3243%). > Q30 bases: 40377376806(93.9791%). > . > Filtering result:. > reads passed filter: 631089144. > reads failed due to low quality: 4393848. > reads failed due to too many N: 1796. > reads failed due to too short: 18454558. > reads with adapter trimmed: 6634714. > bases trimmed due to adapters: 325223066. > reads corrected by overlap analysis: 4273309. > bases corrected by overlap analysis: 7820628. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 151.,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:705,usability,Command,Command,705,"I obtained different 'insert size peaks' when I used different options for the same paired-end sequencing sample.; I obtained different 'insert size peaks' when I used different options for the same paired-end sequencing sample. I used the fastp v0.23.4. Different options are ""--length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20"". For case 1, I got ""insert size peaks : 271"". For case 2, I got ""insert size peaks : 151"". I used same sample both case 1 and case 2. . **Does anyone know why the results turned out differently?**. ### Case 1. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html `. - Insert size peak (evaluated by paired-end reads): **271**. - Additional Information for the Case 1 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low qualit",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/535:2383,usability,Command,Command,2383,98763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 47784347724(96.7835%). > Q30 bases: 45348520572(91.8499%). > . > Read1 after filtering:. > total reads: 292663122. > total bases: 43989331588. > Q20 bases: 43278761283(98.3847%). > Q30 bases: 41716188664(94.8325%). > . > Read2 after filtering:. > total reads: 292663122. > total bases: 43987040549. > Q20 bases: 42997269531(97.7499%). > Q30 bases: 40958413815(93.1147%). > . > Filtering result:. > reads passed filter: 630257560. > reads failed due to low quality: 23272690. > reads failed due to too many N: 101974. > reads failed due to too short: 307122. > reads with adapter trimmed: 6932900. > bases trimmed due to adapters: 415722706. > reads corrected by overlap analysis: 4577467. > bases corrected by overlap analysis: 12747084. > . > Duplication rate: 6.9374%. > . > Insert size peak (evaluated by paired-end reads): 271. ### Case2. - Command : `fastp --in1 sample_R1.fastq.gz --out1 sample_R1_trimmed.fastq.gz --in2 sample_R2.fastq.gz --out2 sample_R2_trimmed.fastq.gz --unpaired1 sample_R1_unpaired.fastq.gz --unpaired2 sample_R2_unpaired.fastq.gz --failed_out sample_failed.fastq.gz --adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT --trim_poly_g --dedup --qualified_quality_phred 30 --correction --overrepresentation_analysis --html sample_QC.html --json sample_QC.json --length_required 36 --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. - Insert size peak (evaluated by paired-end reads): **151**. - Additional Information for the Case 2 . > Read1 before filtering:. > total reads: 326969673. > total bases: 49372420623. > Q20 bases: 48274898763(97.7771%). > Q30 bases: 46395487732(93.9705%). > . > Read2 before filtering:. > t,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/535
https://github.com/OpenGene/fastp/issues/536:800,deployability,fail,failed,800,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:12,energy efficiency,estimat,estimation,12,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:501,energy efficiency,estimat,estimation,501,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1177,energy efficiency,estimat,estimation,1177,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1210,integrability,filter,filtering,1210,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1074,interoperability,distribut,distribution,1074,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:742,modifiability,paramet,parameters,742,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:892,modifiability,concern,concern,892,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:800,reliability,fail,failed,800,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:764,safety,except,except,764,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:892,testability,concern,concern,892,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:86,usability,command,command,86,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:970,usability,clear,clear,970,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:987,usability,guid,guidelines,987,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1120,usability,document,documentation,1120,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1138,usability,help,help,1138,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/536:1505,usability,help,help,1505,"Insert size estimation and report interpretation; After running the following `fastp` command on my paired-end metagenomics data:. ```. fastp -i $f -I ${f/_1./_2.} \. -o ./fastp_filtered/${bn} -O ./fastp_filtered/${bn/_1./_2.} \. --detect_adapter_for_pe \. --trim_poly_g \. --qualified_quality_phred 20 \. --length_required 100 \. --overrepresentation_analysis \. -h ./fastp_reports/$(basename ${bn} .fastq.gz).html \. -j ./fastp_reports/$(basename ${bn} .fastq.gz).json \. -w 8. ```. the insert size estimation appears to be cut at the peak 271 and it says that >98% of reads did not overlap. ![image](https://github.com/OpenGene/fastp/assets/86554897/27b10c2d-b1d3-41ca-a531-67b4b590502a). This happens with all my samples. The rest of the parameters seem fine (except in few samples where the run failed). Is it normal for a sample to have 98% non-overlapping reads or is this a cause for concern? I have seen other people with similar questions but I have not found clear answers or guidelines. Why is there a fixed threshold around 270? Is there a way to plot the full distribution? Would it be possible to include documentation for help with interpreting the insert size estimation? Also, before `fastp` filtering, all my reads were exactly 151 bp, now I got some few sequences ranging from 100 - 151 bp, which issues a warning by `fastqc`. Is this because some reads get trimmed (e.g. polyG or other reasons) and then still fall into the quality criteria for being kept? Thanks in advance for your help!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/536
https://github.com/OpenGene/fastp/issues/537:34,deployability,build,building,34,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/537:115,deployability,build,build,115,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/537:218,deployability,instal,installation,218,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/537:16,modifiability,pac,package,16,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/537:45,modifiability,pac,package,45,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/537:125,modifiability,pac,package,125,"fastp in my pip package; Hi,. I'm building a package using fastp. In Anaconda everything works well. I'm trying to build the package in pip as well however, I am not sure how the fastp should be added as it has no pip installation. Any ideas? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/537
https://github.com/OpenGene/fastp/issues/538:8,energy efficiency,core,core,8,aborted core dumped; Command: fastp -i /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R1_001.fastq -o /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R1 -I /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R2_001.fastq -O /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R2 --unpaired1 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired1_P1S23 --unpaired2 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired2_P1S23 --overlapped_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/overlapped_P1S23 --failed_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/failed_P1_S23 -m --merged_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/merged_P1S23 --thread=10. terminate called recursively. terminate called recursively. terminate called recursively. Aborted (core dumped). How to rectify this? what is the issue here?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/538
https://github.com/OpenGene/fastp/issues/538:844,energy efficiency,core,core,844,aborted core dumped; Command: fastp -i /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R1_001.fastq -o /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R1 -I /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R2_001.fastq -O /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R2 --unpaired1 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired1_P1S23 --unpaired2 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired2_P1S23 --overlapped_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/overlapped_P1S23 --failed_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/failed_P1_S23 -m --merged_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/merged_P1S23 --thread=10. terminate called recursively. terminate called recursively. terminate called recursively. Aborted (core dumped). How to rectify this? what is the issue here?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/538
https://github.com/OpenGene/fastp/issues/538:21,usability,Command,Command,21,aborted core dumped; Command: fastp -i /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R1_001.fastq -o /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R1 -I /media/majorram/Analysis_Data/singhrn/ramesh/P1_S23_R2_001.fastq -O /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/fastp_P1S23_R2 --unpaired1 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired1_P1S23 --unpaired2 /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/unpaired2_P1S23 --overlapped_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/overlapped_P1S23 --failed_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/failed_P1_S23 -m --merged_out /media/majorram/Analysis_Data/singhrn/ramesh/fastp_qc/merged_P1S23 --thread=10. terminate called recursively. terminate called recursively. terminate called recursively. Aborted (core dumped). How to rectify this? what is the issue here?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/538
https://github.com/OpenGene/fastp/issues/539:10,energy efficiency,draw,draw,10,Can fastp draw PNG format?; Can fastp draw PNG format?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/539
https://github.com/OpenGene/fastp/issues/539:38,energy efficiency,draw,draw,38,Can fastp draw PNG format?; Can fastp draw PNG format?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/539
https://github.com/OpenGene/fastp/issues/539:19,interoperability,format,format,19,Can fastp draw PNG format?; Can fastp draw PNG format?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/539
https://github.com/OpenGene/fastp/issues/539:47,interoperability,format,format,47,Can fastp draw PNG format?; Can fastp draw PNG format?,MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/539
https://github.com/OpenGene/fastp/issues/540:441,deployability,version,version,441,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:441,integrability,version,version,441,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:576,integrability,filter,filtering,576,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:621,integrability,filter,filtering,621,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:883,integrability,filter,filters,883,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:441,modifiability,version,version,441,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:847,performance,content,content,847,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:90,safety,detect,detects,90,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:1151,safety,compl,complexity,1151,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:90,security,detect,detects,90,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:1151,security,compl,complexity,1151,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/540:65,usability,command,command,65,"Very short fragments; I have a small issue, I run fastp with the command line below. . It detects high duplication rate (30%) also some of the reads seem very short as seen in the insert size hist. The base histograms shows some weird fluctuation at the beginning, which I take to be primer dimers. . My question is if there are short inserts that overlap, the reads cannot be longer than the insert, and should be remove, isn't it? . fastp version: | 0.23.4 (https://github.com/OpenGene/fastp). -- | --. sequencing: | paired end (151 cycles + 151 cycles). mean length before filtering: | 149bp, 149bp. mean length after filtering: | 148bp, 148bp. duplication rate: | 62.784168%. Insert size peak: | 31. total reads: | 36.535150 M. -- | --. total bases: | 5.447834 G. Q20 bases: | 5.313695 G (97.537758%). Q30 bases: | 5.074262 G (93.142749%). GC content: | 49.901514%. reads passed filters: | 36.275760 M (99.290026%). -- | --. reads corrected: | 920 (0.002518%). bases corrected: | 1.166000 K (0.000021%). reads with low quality: | 0 (0.000000%). reads with too many N: | 342 (0.000936%). reads too short: | 258.562000 K (0.707708%). reads with low complexity: | 486 (0.001330%). <img width=""817"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/34742138-d7f8-4689-ae98-f8558f155467"">. <img width=""794"" alt=""image"" src=""https://github.com/OpenGene/fastp/assets/7523034/96c75696-cd6d-4275-96f3-611eb0ee126c"">. ```. fastp --thread 8 --qualified_quality_phred 8 --length_required 75 --low_complexity_filter --detect_adapter_for_pe --correction --cut_tail --dup_calc_accuracy 5 --cut_mean_quality 15 --dedup --in1 Sample_R1.fastq.gz --in2 Sample_R1.fastq.gz --out1 qc_sample_R1.fastq.gz --out2 qc_sample_R2.fastq.gz --json report.json --html report.html. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/540
https://github.com/OpenGene/fastp/issues/541:3,usability,mous,mouse,3,"No mouse ouver in kmer matrix; Above the Kmer matrix is written that additional info is upon mouse over. But there is none. This is not a breaking issue, but I wanted to mention it.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/541
https://github.com/OpenGene/fastp/issues/541:93,usability,mous,mouse,93,"No mouse ouver in kmer matrix; Above the Kmer matrix is written that additional info is upon mouse over. But there is none. This is not a breaking issue, but I wanted to mention it.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/541
https://github.com/OpenGene/fastp/issues/543:295,availability,sli,slip,295,"Feature request: add option to set lower limit of unqualified quality; I'm testing fastp v0.23.4 and am using the filtering options `-q QMIN_HIGH -u 1 -n 0` to set the qualified quality phred, the unqualified percent limit, and the N base limit. This is working fine but some Nextseq 2000 reads slip through that have a base quality set to Q=0. Can you add an option to set the lower limit of the unqualified quality to be >=QMIN_LOW?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/543
https://github.com/OpenGene/fastp/issues/543:114,integrability,filter,filtering,114,"Feature request: add option to set lower limit of unqualified quality; I'm testing fastp v0.23.4 and am using the filtering options `-q QMIN_HIGH -u 1 -n 0` to set the qualified quality phred, the unqualified percent limit, and the N base limit. This is working fine but some Nextseq 2000 reads slip through that have a base quality set to Q=0. Can you add an option to set the lower limit of the unqualified quality to be >=QMIN_LOW?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/543
https://github.com/OpenGene/fastp/issues/543:295,reliability,sli,slip,295,"Feature request: add option to set lower limit of unqualified quality; I'm testing fastp v0.23.4 and am using the filtering options `-q QMIN_HIGH -u 1 -n 0` to set the qualified quality phred, the unqualified percent limit, and the N base limit. This is working fine but some Nextseq 2000 reads slip through that have a base quality set to Q=0. Can you add an option to set the lower limit of the unqualified quality to be >=QMIN_LOW?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/543
https://github.com/OpenGene/fastp/issues/543:75,safety,test,testing,75,"Feature request: add option to set lower limit of unqualified quality; I'm testing fastp v0.23.4 and am using the filtering options `-q QMIN_HIGH -u 1 -n 0` to set the qualified quality phred, the unqualified percent limit, and the N base limit. This is working fine but some Nextseq 2000 reads slip through that have a base quality set to Q=0. Can you add an option to set the lower limit of the unqualified quality to be >=QMIN_LOW?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/543
https://github.com/OpenGene/fastp/issues/543:75,testability,test,testing,75,"Feature request: add option to set lower limit of unqualified quality; I'm testing fastp v0.23.4 and am using the filtering options `-q QMIN_HIGH -u 1 -n 0` to set the qualified quality phred, the unqualified percent limit, and the N base limit. This is working fine but some Nextseq 2000 reads slip through that have a base quality set to Q=0. Can you add an option to set the lower limit of the unqualified quality to be >=QMIN_LOW?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/543
https://github.com/OpenGene/fastp/pull/545:104,integrability,filter,filtering,104,"cuting doesn't interfere with deduplication; If I understand it correctly dedupliccation is done before filtering, so it doesn't interfere with deduplication. https://github.com/OpenGene/fastp/issues/290#issuecomment-701962420",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/545
https://github.com/OpenGene/fastp/pull/545:7,reliability,doe,doesn,7,"cuting doesn't interfere with deduplication; If I understand it correctly dedupliccation is done before filtering, so it doesn't interfere with deduplication. https://github.com/OpenGene/fastp/issues/290#issuecomment-701962420",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/545
https://github.com/OpenGene/fastp/pull/545:121,reliability,doe,doesn,121,"cuting doesn't interfere with deduplication; If I understand it correctly dedupliccation is done before filtering, so it doesn't interfere with deduplication. https://github.com/OpenGene/fastp/issues/290#issuecomment-701962420",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/545
https://github.com/OpenGene/fastp/pull/545:50,testability,understand,understand,50,"cuting doesn't interfere with deduplication; If I understand it correctly dedupliccation is done before filtering, so it doesn't interfere with deduplication. https://github.com/OpenGene/fastp/issues/290#issuecomment-701962420",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/545
https://github.com/OpenGene/fastp/issues/547:880,deployability,fail,failed,880,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:920,deployability,fail,failed,920,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:955,deployability,fail,failed,955,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:996,deployability,fail,failed,996,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2149,deployability,fail,failed,2149,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2190,deployability,fail,failed,2190,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2225,deployability,fail,failed,2225,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2261,deployability,fail,failed,2261,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:34,energy efficiency,adapt,adapter,34,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1043,energy efficiency,adapt,adapter,1043,"r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --comple",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1091,energy efficiency,adapt,adapters,1091,"GTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1330,energy efficiency,adapt,adapter,1330,"fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2308,energy efficiency,adapt,adapter,2308,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2355,energy efficiency,adapt,adapters,2355,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2619,energy efficiency,adapt,adapter,2619,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:34,integrability,adapt,adapter,34,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:786,integrability,filter,filtered,786,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:825,integrability,Filter,Filtering,825,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:857,integrability,filter,filter,857,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1043,integrability,adapt,adapter,1043,"r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --comple",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1091,integrability,adapt,adapters,1091,"GTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1330,integrability,adapt,adapter,1330,"fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1488,integrability,discover,discovery,1488,"_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1522,integrability,filter,filtered,1522,"tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_se",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2093,integrability,Filter,Filtering,2093,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2125,integrability,filter,filter,2125,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2308,integrability,adapt,adapter,2308,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2355,integrability,adapt,adapters,2355,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2619,integrability,adapt,adapter,2619,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:34,interoperability,adapt,adapter,34,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:59,interoperability,specif,specified,59,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1043,interoperability,adapt,adapter,1043,"r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --comple",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1091,interoperability,adapt,adapters,1091,"GTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1330,interoperability,adapt,adapter,1330,"fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1488,interoperability,discover,discovery,1488,"_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2308,interoperability,adapt,adapter,2308,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2355,interoperability,adapt,adapters,2355,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2619,interoperability,adapt,adapter,2619,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:34,modifiability,adapt,adapter,34,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1043,modifiability,adapt,adapter,1043,"r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --comple",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1091,modifiability,adapt,adapters,1091,"GTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1330,modifiability,adapt,adapter,1330,"fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2308,modifiability,adapt,adapter,2308,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2355,modifiability,adapt,adapters,2355,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2619,modifiability,adapt,adapter,2619,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:880,reliability,fail,failed,880,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:920,reliability,fail,failed,920,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:955,reliability,fail,failed,955,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:996,reliability,fail,failed,996,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2149,reliability,fail,failed,2149,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2190,reliability,fail,failed,2190,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2225,reliability,fail,failed,2225,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2261,reliability,fail,failed,2261,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:186,safety,valid,valid,186,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1014,safety,compl,complexity,1014,"after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --lo",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1324,safety,valid,valid,1324,"ean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 54",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2279,safety,compl,complexity,2279,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2481,safety,valid,valid,2481,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:173,security,ident,identify,173,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1014,security,compl,complexity,1014,"after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --lo",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:2279,security,compl,complexity,2279,"sts only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads miss** after adding `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` . And in the output clean data, many reads still have adapter sequence. ```. zcat 0116A_clean_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 3047290. ```.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:207,usability,command,command,207,"Missing most reads after given r2 adapter; The r2 reads is specified with GTGAGTGATGGTTGAGGTAGTGTGGAG at 5'. So I use `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` to identify the valid reads, and the command is shown below:. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quali",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/547:1488,usability,discov,discovery,1488,"_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. --adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG. ```. The result suggests only 1/6 reads(~6000000, R1+R2) remains, 5/6 reads were filtered because of short length. ```. Filtering result:. reads passed filter: 6881134. reads failed due to low quality: 60130. reads failed due to too many N: 0. reads failed due to too short: 30160650. reads failed due to low complexity: 1218. reads with adapter trimmed: 21527581. bases trimmed due to adapters: 2374478381. reads with polyX in 3' end: 472347. bases trimmed in polyX tail: 5270559. ```. Then, I use _grep_ to sum the number of reads with GTGAGTGATGGTTGAGGTAGTGTGGAG at R2 head and find 17606348 R2 reads are start with valid adapter. So I think there might be other reason caused missing reads. ```. zcat 0116A_R2.fq.gz | grep ^GTGAGTGATGGTTGAGGTAGTGTGGAG | wc -l. 17606348. ```. To discovery which factor caused low filtered reads, I removed `--adapter_sequence_r2 GTGAGTGATGGTTGAGGTAGTGTGGAG` and ran fastp again. However, much more reads were acquired. ```. fastp \. --in1 ${sampleID}_R1.fq.gz \. --in2 ${sampleID}_R2.fq.gz \. --out1 ${sampleID}_clean_R1.fq.gz \. --out2 ${sampleID}_clean_R2.fq.gz \. --json ${sampleID}.json \. --html ${sampleID}.html \. --trim_poly_g --poly_g_min_len 10 \. --trim_poly_x --poly_x_min_len 10 \. --cut_front --cut_tail --cut_window_size 4 \. --qualified_quality_phred 30 \. --low_complexity_filter --complexity_threshold 30 \. --thread 10 \. ```. ```. Filtering result:. reads passed filter: 30428586. reads failed due to low quality: 221476. reads failed due to too many N: 0. reads failed due to too short: 608. reads failed due to low complexity: 1332. reads with adapter trimmed: 5489442. bases trimmed due to adapters: 109359880. reads with polyX in 3' end: 819659. bases trimmed in polyX tail: 9294422. ```. I want to know why many **valid reads ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/547
https://github.com/OpenGene/fastp/issues/548:41,deployability,resourc,resources,41,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:327,deployability,resourc,resource,327,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:41,energy efficiency,resourc,resources,41,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:327,energy efficiency,resourc,resource,327,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:217,integrability,filter,filtering,217,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:41,performance,resourc,resources,41,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:327,performance,resourc,resource,327,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:41,safety,resourc,resources,41,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:327,safety,resourc,resource,327,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:41,testability,resourc,resources,41,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:327,testability,resourc,resource,327,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/548:15,usability,help,help,15,"Interpretation help file?; Are there any resources that walk through how to interpret the output plots in the html file? As it what plots might look like when reads are looking excellent, passable, unacceptable after filtering? I have found the example output files here and read the 2018 paper but perhaps I'm missing a basic resource for newbies?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/548
https://github.com/OpenGene/fastp/issues/549:179,integrability,filter,filtered,179,"Store duplicate reads; We would like to reconstruct the input fastq from fastp output. It would be helpful we could store duplicate reads as output, similar to `--failed_out` for filtered reads.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/549
https://github.com/OpenGene/fastp/issues/549:56,safety,input,input,56,"Store duplicate reads; We would like to reconstruct the input fastq from fastp output. It would be helpful we could store duplicate reads as output, similar to `--failed_out` for filtered reads.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/549
https://github.com/OpenGene/fastp/issues/549:56,usability,input,input,56,"Store duplicate reads; We would like to reconstruct the input fastq from fastp output. It would be helpful we could store duplicate reads as output, similar to `--failed_out` for filtered reads.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/549
https://github.com/OpenGene/fastp/issues/549:99,usability,help,helpful,99,"Store duplicate reads; We would like to reconstruct the input fastq from fastp output. It would be helpful we could store duplicate reads as output, similar to `--failed_out` for filtered reads.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/549
https://github.com/OpenGene/fastp/pull/550:59,interoperability,specif,specified,59,Added a new function(umi_skipb) to the program to skip the specified bp number before trim the UMI sequence.; 某些公司的UMI长度为7bp，但是只有2-4bp用于UMI校对（例如 何因生物 UMI接头），所以添加umi_skipb功能. ![UMI](https://github.com/OpenGene/fastp/assets/23098752/79db2424-843a-43f5-a432-08feb9881347),MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/550
https://github.com/OpenGene/fastp/issues/551:255,availability,ERROR,ERROR,255,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:410,availability,ERROR,ERROR,410,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:799,availability,ERROR,ERROR,799,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:458,interoperability,specif,specified,458,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:847,interoperability,specif,specified,847,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:255,performance,ERROR,ERROR,255,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:410,performance,ERROR,ERROR,410,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:799,performance,ERROR,ERROR,799,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:926,performance,perform,perform,926,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:597,reliability,doe,doesn,597,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:255,safety,ERROR,ERROR,255,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:398,safety,test,test,398,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:410,safety,ERROR,ERROR,410,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:428,safety,input,input,428,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:694,safety,test,test,694,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:731,safety,test,test,731,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:771,safety,test,test,771,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:799,safety,ERROR,ERROR,799,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:817,safety,input,input,817,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:398,testability,test,test,398,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:694,testability,test,test,694,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:731,testability,test,test,731,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:771,testability,test,test,771,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:130,usability,command,command,130,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:255,usability,ERROR,ERROR,255,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:410,usability,ERROR,ERROR,410,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:428,usability,input,input,428,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:799,usability,ERROR,ERROR,799,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:817,usability,input,input,817,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/551:926,usability,perform,perform,926,"Split interleaved output; I'm trying to get a splitted interleaved output for a pair end experiment, but I cannot find the proper command line. Is this even possible? I tried. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout --split 2. ERROR: splitting mode cannot work with stdout mode. ```. and. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --split 2 --out1 /tmp/test.fastq. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. But no luck so far. I also tried interleaving first and splitting later, but it doesn't work either:. ```. $ fastp --in1 input_1.fastq.gz --in2 input_2.fastq.gz --stdout > /tmp/test.fastq. . . . $ fastp --in1 /tmp/test.fastq --interleaved_in --out1 /tmp/test.split.fastq --split 2. ERROR: paired-end input, read1 output should be specified together with read2 output (--out2 needed). ```. I could also try to perform the split in the first place and then iterate over the several files to interleave them, but this is quite cumbersome.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/551
https://github.com/OpenGene/fastp/issues/553:124,availability,down,download,124,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:462,availability,error,error,462,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:523,availability,avail,available,523,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:12,deployability,instal,install,12,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:51,deployability,instal,install,51,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:189,deployability,instal,install,189,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:312,deployability,instal,install,312,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:352,deployability,instal,install,352,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:383,deployability,instal,install,383,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:538,energy efficiency,current,current,538,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:469,modifiability,Pac,PackagesNotFoundError,469,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:506,modifiability,pac,packages,506,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:462,performance,error,error,462,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:523,reliability,availab,available,523,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:462,safety,error,error,462,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:523,safety,avail,available,523,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:523,security,availab,available,523,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:65,usability,tool,tool,65,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/553:462,usability,error,error,462,"Not able to install on Mac book M1; I am trying to install fastp tool on my Mac M1. So far, I have tried all these options. download `osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. then,. `conda install osx-64_fastp-0.23.4-h5712c04_2.tar.bz2`. The fastp file is not showing the directory. . Alternatively, I have also install via conda directly,. ```. conda install bioconda::fastp. conda install bioconda/label/cf201901::fastp. ```. which however threw the following error. PackagesNotFoundError: The following packages are not available from current channels:. - bioconda::fastp.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/553
https://github.com/OpenGene/fastp/issues/554:14,availability,error,error,14,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:345,availability,reliab,reliable,345,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:373,availability,error,error,373,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:156,deployability,instal,installed,156,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:20,integrability,messag,message,20,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:379,integrability,messag,message,379,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:20,interoperability,messag,message,20,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:379,interoperability,messag,message,379,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:14,performance,error,error,14,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:373,performance,error,error,373,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:345,reliability,reliab,reliable,345,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:14,safety,error,error,14,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:373,safety,error,error,373,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:14,usability,error,error,14,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/554:373,usability,error,error,373,"Keep occurred error message from the beginning < igzip: invalid gzip header found >; I just followed the instruction provided in the readme. I successfully installed fastp on my m2 macbook air in directory /usr/local/bin/fastp. After that, I tried to trim my paired-end data. First trial was successful that I could see some result reports with reliable data. However, the error message <igzip: invalid gzip header found> is repeated from the secondary trial. The original data gz files are even corrupted. What can I do...? The code I used is provided below;. <img width=""999"" alt=""스크린샷 2024-03-22 오전 11 10 45"" src=""https://github.com/OpenGene/fastp/assets/164445038/555f03a7-0371-41c9-b88f-92cd05e3b0d6"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/554
https://github.com/OpenGene/fastp/issues/555:305,deployability,pipelin,pipeline,305,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:14,integrability,filter,filtering,14,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:305,integrability,pipelin,pipeline,305,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:240,interoperability,specif,specifying,240,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:428,reliability,Doe,Does,428,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:120,safety,input,inputs,120,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:70,usability,command,command,70,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:106,usability,user,user,106,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:120,usability,input,inputs,120,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/555:131,usability,user,user,131,"Nanopore data filtering using fastp; Hello, I'm running the following command in my terminal:. **fastp -i user/nanopore/inputs/ -o user/nanopore/outputs/ -A -G --qualified_quality_phred 10 --reads_to_process 5000 --thread 8**. Although I'm specifying the number of reads to keep as 5000, after running my pipeline, I find that my fastq files have different numbers of reads such as 4965, 4778, and 4653, but never exactly 5000. Does anyone have an idea on how to fix this problem, please?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/555
https://github.com/OpenGene/fastp/issues/557:847,deployability,fail,failed,847,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:884,deployability,fail,failed,884,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:919,deployability,fail,failed,919,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:3,energy efficiency,adapt,adapter,3,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:173,energy efficiency,adapt,adapter,173,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:461,energy efficiency,adapt,adapter,461,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:494,energy efficiency,adapt,adapter,494,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:958,energy efficiency,adapt,adapter,958,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:999,energy efficiency,adapt,adapters,999,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:3,integrability,adapt,adapter,3,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:114,integrability,pub,published,114,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:173,integrability,adapt,adapter,173,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:461,integrability,adapt,adapter,461,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:494,integrability,adapt,adapter,494,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:535,integrability,filter,filtering,535,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:673,integrability,filter,filtering,673,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:791,integrability,Filter,Filtering,791,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:823,integrability,filter,filter,823,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:958,integrability,adapt,adapter,958,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:999,integrability,adapt,adapters,999,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:3,interoperability,adapt,adapter,3,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:173,interoperability,adapt,adapter,173,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:461,interoperability,adapt,adapter,461,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:494,interoperability,adapt,adapter,494,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:958,interoperability,adapt,adapter,958,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:999,interoperability,adapt,adapters,999,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:3,modifiability,adapt,adapter,3,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:173,modifiability,adapt,adapter,173,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:461,modifiability,adapt,adapter,461,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:494,modifiability,adapt,adapter,494,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:958,modifiability,adapt,adapter,958,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:999,modifiability,adapt,adapters,999,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:847,reliability,fail,failed,847,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:884,reliability,fail,failed,884,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:919,reliability,fail,failed,919,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:11,safety,detect,detected,11,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:181,safety,detect,detected,181,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:451,safety,Detect,Detecting,451,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:502,safety,detect,detected,502,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:11,security,detect,detected,11,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:181,security,detect,detected,181,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:451,security,Detect,Detecting,451,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/557:502,security,detect,detected,502,"No adapter detected for read and Q20 bases: 4747174600(99.9999%); Hi, I am analyzing single end RNA-seq data from published source. I am a beginner in this field. I saw ""No adapter detected for read1"" and ""the Q20 bases: 4747174600(99.9999%)"" like below. Is it correct? `/home1/yoshiaki/fastp -i ./SRR23031659.fastq.gz -3 -o out_SRR23031659.fq.gz --html ./report/SRR23031659_fastp.html -j ./report/SRR23031659_fastp.json -q 15 -n 10 -t 1 -T 1 -l 20`. Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 47471798. total bases: 4747179800. Q20 bases: 4747174600(99.9999%). Q30 bases: 4747174600(99.9999%). Read1 after filtering:. total reads: 47471746. total bases: 4557287616. Q20 bases: 4557287616(100%). Q30 bases: 4557287616(100%). Filtering result:. reads passed filter: 47471746. reads failed due to low quality: 52. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 60.5205%. JSON report: ./report/SRR23031659_fastp.json. HTML report: ./report/SRR23031659_fastp.html",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/557
https://github.com/OpenGene/fastp/issues/558:42,energy efficiency,adapt,adapter,42,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:408,energy efficiency,adapt,adapter,408,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:524,energy efficiency,adapt,adapter,524,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:854,energy efficiency,adapt,adapter,854,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:926,energy efficiency,adapt,adapter,926,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1026,energy efficiency,adapt,adapters,1026,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1107,energy efficiency,adapt,adapter,1107,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:42,integrability,adapt,adapter,42,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:408,integrability,adapt,adapter,408,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:524,integrability,adapt,adapter,524,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:854,integrability,adapt,adapter,854,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:926,integrability,adapt,adapter,926,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1026,integrability,adapt,adapters,1026,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1107,integrability,adapt,adapter,1107,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:42,interoperability,adapt,adapter,42,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:408,interoperability,adapt,adapter,408,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:524,interoperability,adapt,adapter,524,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:562,interoperability,specif,specifically,562,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:854,interoperability,adapt,adapter,854,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:914,interoperability,specif,specify,914,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:926,interoperability,adapt,adapter,926,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:998,interoperability,standard,standard,998,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1026,interoperability,adapt,adapters,1026,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1107,interoperability,adapt,adapter,1107,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:42,modifiability,adapt,adapter,42,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:408,modifiability,adapt,adapter,408,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:524,modifiability,adapt,adapter,524,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:854,modifiability,adapt,adapter,854,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:926,modifiability,adapt,adapter,926,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1026,modifiability,adapt,adapters,1026,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1107,modifiability,adapt,adapter,1107,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:532,performance,content,content,532,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1093,safety,prevent,prevented,1093,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1147,safety,detect,detected,1147,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:512,security,sign,significant,512,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1093,security,preven,prevented,1093,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1147,security,detect,detected,1147,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:761,testability,understand,understand,761,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:63,usability,indicat,indicated,63,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:151,usability,command,command,151,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:364,usability,command,command,364,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:753,usability,help,help,753,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1069,usability,command,command,1069,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/558:1400,usability,tool,tool,1400,"fastp not removing all Illumina universal adapter sequences as indicated by FastQC; Hi, I recently ran fastp on an Illumina dataset with the following command:. fastp -i SRR18278237.fastq.gz -o SRR18278237.fastp.gz -z 9 -l 15 -w 16 --dedup --dup_calc_accuracy 6 -x -3 --cut_mean_quality 20 -j SRR18278237.fastp.json -h SRR18278237.fastp.html. I expected that this command would remove the Illumina universal adapter sequences from the reads. However, after running FastQC on the output files, I'm still seeing a significant adapter content in the FastQC report, specifically towards the end of the reads (please see attached screenshot). ![image](https://github.com/OpenGene/fastp/assets/88259108/0954090e-16d8-4584-95c0-42d94c928284). Could you please help me understand the following:. 1. Is there a possibility that fastp might not remove some of the adapter sequences under certain conditions? 2. Do I need to specify the adapter sequences explicitly using the -a option, even though these are standard Illumina universal adapters? 3. Is there anything in my fastp command that might have prevented the adapter sequences from being adequately detected and trimmed? I have attached the JSON and HTML reports from `fastp` for your reference. I would greatly appreciate any insights or suggestions you might have to resolve this issue. Thank you for your assistance and for developing such a useful tool. Best regards,. Xiaowen. [Uploading SRR18278237 (1).fastp.zip…]()",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/558
https://github.com/OpenGene/fastp/issues/559:29,availability,error,error,29,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:117,availability,error,error,117,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:450,deployability,fail,fail,450,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:29,performance,error,error,29,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:117,performance,error,error,117,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:450,reliability,fail,fail,450,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:29,safety,error,error,29,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:117,safety,error,error,117,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:29,usability,error,error,29,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:65,usability,tool,tool,65,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:88,usability,tool,tool,88,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:117,usability,error,error,117,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/559:353,usability,help,help,353,"few options throw 'undefined error' -reg; Thanks for this useful tool. While using this tool, it gave an ""undefined"" error while using the following four options (when excluded, it worked) and these were not listed in the set of options that it showed. Any mistake from my side on its usage? If so, what is the procedure to enable these options, please help out. . --unpaired1 = ""file_R1.fastq.gz"" . --unpaired2 = ""file_R2.fastq.gz"". --failed_out = ""fail.fastq.gz"". --dont_overwrite.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/559
https://github.com/OpenGene/fastp/issues/560:0,availability,Error,Error,0,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:440,availability,error,error,440,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:475,availability,ERROR,ERROR,475,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:0,performance,Error,Error,0,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:440,performance,error,error,440,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:475,performance,ERROR,ERROR,475,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:546,reliability,doe,doesn,546,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:614,reliability,doe,doesn,614,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:0,safety,Error,Error,0,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:440,safety,error,error,440,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:475,safety,ERROR,ERROR,475,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:0,usability,Error,Error,0,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:440,usability,error,error,440,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/560:475,usability,ERROR,ERROR,475,"Error is raised for problematic rows; In some of the fastq files that I have, there are some problematic rows, such as this:. ```. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:12897:1306 1:N:0:GAATTCGT+GTCAGTAC. +. @NB552437:11:HY5W2BGXG:1:11101:22688:1308 1:N:0:GAATTCGT+GTCAGTAC. CAGCGAGGG... +. AAAAAEEEE... @NB552437:11:HY5W2BGXG:1:11101:9713:1313 1:N:0:GAATTCGT+GTCAGTAC. TTTTCTTGA... ```. These problematic rows crash the code and the error is:. > Expected '+', got . > ERROR: '+' expected. I tried just deleting the empty rows but it still doesn't work. Trimmomatic seems to be able to bypass this issue (it doesn't crash)",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/560
https://github.com/OpenGene/fastp/issues/562:173,availability,echo,echo,173,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:18,deployability,Version,Version,18,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:463,deployability,fail,failed,463,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:529,deployability,fail,failed,529,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:595,deployability,fail,failed,595,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:661,deployability,fail,failed,661,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:727,deployability,fail,failed,727,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:793,deployability,fail,failed,793,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:859,deployability,fail,failed,859,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:925,deployability,fail,failed,925,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:991,deployability,fail,failed,991,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:1058,deployability,fail,failed,1058,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:18,integrability,Version,Version,18,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:84,integrability,filter,filtering,84,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:18,modifiability,Version,Version,18,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:100,performance,time,time,100,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:463,reliability,fail,failed,463,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:529,reliability,fail,failed,529,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:595,reliability,fail,failed,595,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:661,reliability,fail,failed,661,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:727,reliability,fail,failed,727,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:793,reliability,fail,failed,793,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:859,reliability,fail,failed,859,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:925,reliability,fail,failed,925,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:991,reliability,fail,failed,991,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/562:1058,reliability,fail,failed,1058,"Not reproducible; Version 0.23.4. I get a different number of reads and bases after filtering every time I run fastp. ```. (base) exouser@julin-2:$ for i in $(seq 1 10); do echo ""run $i""; fastp --in1 GH.lane67.fastq.gz --out1 GH.lane67.trimmed.fastq.gz --length_required 50 -q 20 -u 70 --phred64 --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 2>&1 >/dev/null | grep -E ""(too short)|(total bases: 9)"" ; done. run 1. total bases: 99875000. reads failed due to too short: 593. run 2. total bases: 99844193. reads failed due to too short: 705. run 3. total bases: 99868071. reads failed due to too short: 595. run 4. total bases: 99864238. reads failed due to too short: 608. run 5. total bases: 99862997. reads failed due to too short: 625. run 6. total bases: 99900970. reads failed due to too short: 451. run 7. total bases: 99894738. reads failed due to too short: 454. run 8. total bases: 99879032. reads failed due to too short: 538. run 9. total bases: 99844285. reads failed due to too short: 711. run 10. total bases: 99875189. reads failed due to too short: 575. ```",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/562
https://github.com/OpenGene/fastp/issues/563:134,availability,error,errors,134,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:209,deployability,fail,fails,209,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:134,performance,error,errors,134,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:209,reliability,fail,fails,209,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:134,safety,error,errors,134,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:58,usability,progress,progress,58,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/563:134,usability,error,errors,134,"Running fastp in quiet mode.; Hi, it appears fastp writes progress notes to stderr. Is it possible to suppress stderr output _except_ errors and warnings? I.e., nothing would be written to stderr unless fastp fails. Thanks!",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/563
https://github.com/OpenGene/fastp/issues/564:23,availability,operat,operation,23,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:167,availability,operat,operate,167,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:329,deployability,automat,automatically,329,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:226,integrability,filter,filtered,226,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:110,modifiability,maintain,maintaining,110,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:36,safety,input,input,36,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:110,safety,maintain,maintaining,110,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:196,safety,input,input,196,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:356,safety,input,input,356,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:71,security,Auth,Authors,71,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:329,testability,automat,automatically,329,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:36,usability,input,input,36,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:146,usability,help,helpful,146,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:196,usability,input,input,196,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:290,usability,help,helpful,290,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/564:356,usability,input,input,356,"Feature Request: fastp operation on input and output directories; Dear Authors,. Thank you for developing and maintaining fastp. It would be very helpful if fastp can operate on FASTQ files in an input directory and place the filtered files in an output directory. This would be especially helpful for paired-end FASTQ files and automatically matching the input file names by *R1.fastq.gz and *R2.fastq.gz would be great! Thank you for your consideration.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/564
https://github.com/OpenGene/fastp/issues/565:0,availability,ERROR,ERROR,0,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:52,availability,error,error,52,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:103,availability,error,error,103,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:385,availability,Error,Error,385,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:490,availability,ERROR,ERROR,490,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:557,availability,error,error,557,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:391,integrability,messag,message,391,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:563,integrability,messag,message,563,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:391,interoperability,messag,message,391,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:563,interoperability,messag,message,563,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:0,performance,ERROR,ERROR,0,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:52,performance,error,error,52,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:103,performance,error,error,103,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:385,performance,Error,Error,385,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:490,performance,ERROR,ERROR,490,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:557,performance,error,error,557,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:0,safety,ERROR,ERROR,0,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:52,safety,error,error,52,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:103,safety,error,error,103,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:385,safety,Error,Error,385,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:490,safety,ERROR,ERROR,490,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:557,safety,error,error,557,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:0,usability,ERROR,ERROR,0,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:52,usability,error,error,52,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:103,usability,error,error,103,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:192,usability,help,help,192,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:221,usability,Command,Command,221,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:385,usability,Error,Error,385,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:490,usability,ERROR,ERROR,490,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/565:557,usability,error,error,557,"ERROR: '+' expected; Hello. I keep getting the same error when running my RNA-seq data with fastp. The error implies that there is a '+' missing, but I don't see that in my fastq file. Please help. . Here is an example:. Command: . fastp --in1 R2_FKRN240086271-1A_2253CMLT4_L7_1.fq --out1 fastp_R2_1_trimmed.fq --in2 R2_FKRN240086271-1A_2253CMLT4_L7_2.fq --out2 fastp_R2_2_trimmed.fq. Error message:. Expected '+', got @LH00281:101:2253CMLT4:7:1153:17937:24071 2:N:0:GAAGACTAGC+TAGGAAGAGC. ERROR: '+' expected. I found the line in the fastq file where this error message is pointing to, and don't see any '+' missing:. <img width=""1210"" alt=""Screenshot 2024-06-05 at 9 53 46 AM"" src=""https://github.com/OpenGene/fastp/assets/56523993/d057af0a-cec1-4b13-8854-50555cc348bf"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/565
https://github.com/OpenGene/fastp/issues/566:264,safety,detect,detect,264,"Feature request: remove reads with poly_X tails and polyX in general; Hi, for my research I would like to remove reads with poly_X tails and poly_X sequences in general. Is it possible to remove these reads instead of trimming them? In addition, is it possible to detect poly_X also within reads (not necessarily in 3' end)? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/566
https://github.com/OpenGene/fastp/issues/566:264,security,detect,detect,264,"Feature request: remove reads with poly_X tails and polyX in general; Hi, for my research I would like to remove reads with poly_X tails and poly_X sequences in general. Is it possible to remove these reads instead of trimming them? In addition, is it possible to detect poly_X also within reads (not necessarily in 3' end)? Thank you",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/566
https://github.com/OpenGene/fastp/issues/568:170,energy efficiency,draw,drawing,170,"How can I generate images of the same size as the insert fragment individually; **How can I generate images of the same size as the insert fragment individually? I tried drawing through JSON, but it’s not exactly the same as the image in HTML.**. > This is the image in HTML. ![image](https://github.com/OpenGene/fastp/assets/43740064/f6b5675b-c1bc-4907-8f56-a5f263d0de4a). > This is the individually drawn image of the insert fragment size. ![096ee39d-c809-4c2a-a90d-190df747fc65](https://github.com/OpenGene/fastp/assets/43740064/9af7e1f7-6b0a-4f95-a522-acf4c186692e). **In the process of drawing individually, are there any extra precautions I need to take?**",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/568
https://github.com/OpenGene/fastp/issues/568:401,energy efficiency,draw,drawn,401,"How can I generate images of the same size as the insert fragment individually; **How can I generate images of the same size as the insert fragment individually? I tried drawing through JSON, but it’s not exactly the same as the image in HTML.**. > This is the image in HTML. ![image](https://github.com/OpenGene/fastp/assets/43740064/f6b5675b-c1bc-4907-8f56-a5f263d0de4a). > This is the individually drawn image of the insert fragment size. ![096ee39d-c809-4c2a-a90d-190df747fc65](https://github.com/OpenGene/fastp/assets/43740064/9af7e1f7-6b0a-4f95-a522-acf4c186692e). **In the process of drawing individually, are there any extra precautions I need to take?**",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/568
https://github.com/OpenGene/fastp/issues/568:591,energy efficiency,draw,drawing,591,"How can I generate images of the same size as the insert fragment individually; **How can I generate images of the same size as the insert fragment individually? I tried drawing through JSON, but it’s not exactly the same as the image in HTML.**. > This is the image in HTML. ![image](https://github.com/OpenGene/fastp/assets/43740064/f6b5675b-c1bc-4907-8f56-a5f263d0de4a). > This is the individually drawn image of the insert fragment size. ![096ee39d-c809-4c2a-a90d-190df747fc65](https://github.com/OpenGene/fastp/assets/43740064/9af7e1f7-6b0a-4f95-a522-acf4c186692e). **In the process of drawing individually, are there any extra precautions I need to take?**",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/568
https://github.com/OpenGene/fastp/issues/569:562,availability,cluster,cluster,562,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:611,availability,cluster,clusters,611,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:674,availability,cluster,cluster,674,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:741,availability,cluster,cluster,741,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:981,availability,cluster,cluster,981,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:1017,availability,cluster,cluster,1017,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:562,deployability,cluster,cluster,562,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:611,deployability,cluster,clusters,611,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:674,deployability,cluster,cluster,674,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:741,deployability,cluster,cluster,741,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:981,deployability,cluster,cluster,981,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:1017,deployability,cluster,cluster,1017,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:876,integrability,filter,filtered,876,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:1079,safety,input,input,1079,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:602,security,ident,identify,602,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:130,usability,tool,tool,130,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:423,usability,tool,tool,423,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/569:1079,usability,input,input,1079,"Feature request: output file listing the IDs of duplicate reads and associated ""representative reads""; Hi,. Thanks for the useful tool. I would like to request a new feature/option to come into play when using `fastp` for deduplication. It would be useful if the IDs of duplicate reads could be saved as well as the ID of the 'representative' read that each is a duplicate of. This would mimic a useful feature of [another tool](https://github.com/chanzuckerberg/czid-dedup):. > In addition to the de-duplicated FASTA or FASTQ outputs, czid-dedup also outputs a cluster file which makes it possible to identify clusters of duplicate reads. The file lists the representative cluster read ID for each initial read ID, where the representative cluster read ID is the read ID that makes it into the output file. If a read is found to be a duplicate of a previous read, it will be filtered out of the FASTA/FASTQ output and paired with the read ID of the previous duplicate read in the cluster output file. Representative cluster read IDs are paired with themselves. The order of the input files is preserved. The representative read will always be the first read of its type. Thanks",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/569
https://github.com/OpenGene/fastp/issues/570:418,availability,consist,consistent,418,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:139,energy efficiency,adapt,adapters,139,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:198,energy efficiency,adapt,adapter,198,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:262,energy efficiency,adapt,adapter,262,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:365,energy efficiency,adapt,adapter,365,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:139,integrability,adapt,adapters,139,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:198,integrability,adapt,adapter,198,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:262,integrability,adapt,adapter,262,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:365,integrability,adapt,adapter,365,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:519,integrability,repositor,repository,519,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:139,interoperability,adapt,adapters,139,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:198,interoperability,adapt,adapter,198,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:262,interoperability,adapt,adapter,262,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:365,interoperability,adapt,adapter,365,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:519,interoperability,repositor,repository,519,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:139,modifiability,adapt,adapters,139,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:198,modifiability,adapt,adapter,198,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:262,modifiability,adapt,adapter,262,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:365,modifiability,adapt,adapter,365,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:68,performance,perform,perform,68,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:489,safety,test,test,489,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:489,testability,test,test,489,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:68,usability,perform,perform,68,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:230,usability,command,command,230,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/570:418,usability,consist,consistent,418,"How can I reproduce the results of trimmomatic in fastp?; I want to perform WGS analysis using BGI sequence data. . To remove BGI sequence adapters, I used fastp and checked for the presence of the adapter sequence using the grep command (linux). . However, the adapter sequence was still present. In contrast, after running Trimmomatic with the same settings, the adapter sequence was not present. . How can I obtain consistent results? Please show me how to use the FASTQ files from the test data on the fastp GitHub repository, along with the code.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/570
https://github.com/OpenGene/fastp/issues/571:217,availability,ERROR,ERROR,217,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:217,performance,ERROR,ERROR,217,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:340,reliability,doe,does,340,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:47,safety,input,input,47,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:217,safety,ERROR,ERROR,217,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:290,safety,Input,Input,290,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:47,usability,input,input,47,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:100,usability,tool,tool,100,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:217,usability,ERROR,ERROR,217,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:260,usability,stop,stopped,260,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/571:290,usability,Input,Input,290,"Use with fifo?; I would like to use fastp with input coming over a fifo. Since you're a single pass tool, it appears this should work. But no matter how I try to set things up, I get. ```. [2024-07-15T17:46:51-0500] [ERROR] [fastp_report.sh] . fastp_report.sh stopped at line 170. . REASON=Input read 1 file sample.L.fifo.fastq is empty or does not exist. ```. Should this in fact work?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/571
https://github.com/OpenGene/fastp/issues/572:9,energy efficiency,adapt,adapters,9,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:112,energy efficiency,adapt,adapters,112,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:9,integrability,adapt,adapters,9,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:112,integrability,adapt,adapters,112,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:9,interoperability,adapt,adapters,9,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:112,interoperability,adapt,adapters,112,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:9,modifiability,adapt,adapters,9,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:112,modifiability,adapt,adapters,112,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:178,reliability,doe,does,178,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:251,reliability,doe,does,251,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:187,usability,support,support,187,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:224,usability,help,helpful,224,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:262,usability,support,support,262,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/572:366,usability,help,helpful,366,"trimming adapters at the beginning of the read and IUPAC nucleotide codes; I have the situation where I do have adapters at the beginning of the read, as far as I can see, fastp does not support that, but it would be really helpful. Another question, does fastp support IUPAC nucleotide codes? . http://www.bioinformatics.org/sms/iupac.html. This would also be very helpful. Best. Hubert",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/572
https://github.com/OpenGene/fastp/issues/573:301,availability,down,download,301,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:106,interoperability,format,format,106,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:402,interoperability,format,formatted,402,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:30,safety,input,input,30,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:79,safety,input,input,79,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:333,testability,context,context,333,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:30,usability,input,input,30,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:79,usability,input,input,79,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/573:130,usability,stop,stopped,130,"Ability to use FASTA files as input; From what I can tell, `fastp` expects the input files to be in FASTQ format. Lately, SRA has stopped including original base qualities in the FASTQ files (all qualities are encoded as `?`) which makes read trimming based on quality moot, and makes it pointless to download FASTQ files. . In this context, it would be nice feature to be able to run `fastp` on FASTA formatted files. .",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/573
https://github.com/OpenGene/fastp/issues/574:335,energy efficiency,adapt,adapters,335,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:335,integrability,adapt,adapters,335,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:335,interoperability,adapt,adapters,335,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:377,interoperability,share,share,377,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:335,modifiability,adapt,adapters,335,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:286,usability,command,command,286,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/574:388,usability,help,help,388,"What are the default settings?; Hi, I am using default settings to clean my PE reads using the following default settings: fastp -i Sample_raw_1.fq.gz -I Sample_raw_2.fq.gz -o Sample_clean_1.fq.gz -O Sample_clean_2.fq.gz, But I want to know what the default settings are, what will the command line do to my reads, like it will remove adapters, I am not sure others, could you share your help? Thank you very much.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/574
https://github.com/OpenGene/fastp/issues/575:1403,availability,echo,echo,1403," --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapte",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2502,availability,consist,consists,2502,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:132,deployability,pipelin,pipeline,132,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:216,energy efficiency,adapt,adapter,216,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:802,energy efficiency,adapt,adapter,802,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1293,energy efficiency,adapt,adapter,1293,"e CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2889,energy efficiency,adapt,adapter,2889,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:132,integrability,pipelin,pipeline,132,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:216,integrability,adapt,adapter,216,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:802,integrability,adapt,adapter,802,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1293,integrability,adapt,adapter,1293,"e CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1501,integrability,sub,subset,1501,"duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example co",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2889,integrability,adapt,adapter,2889,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:205,interoperability,specif,specifying,205,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:216,interoperability,adapt,adapter,216,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:802,interoperability,adapt,adapter,802,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:826,interoperability,specif,specified,826,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1293,interoperability,adapt,adapter,1293,"e CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2872,interoperability,specif,specify,2872,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2889,interoperability,adapt,adapter,2889,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:162,modifiability,maintain,maintained,162,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:216,modifiability,adapt,adapter,216,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:802,modifiability,adapt,adapter,802,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1293,modifiability,adapt,adapter,1293,"e CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2889,modifiability,adapt,adapter,2889,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:243,performance,time,times,243,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2915,performance,time,times,2915,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:162,safety,maintain,maintained,162,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:957,safety,test,test,957,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:957,testability,test,test,957,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:985,testability,trace,trace,985,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:256,usability,command,command,256,"Output read lengths are affected by duplicate --adapter_sequence arguments; I've been running fastp as part of a larger third-party pipeline (i.e. not written or maintained by me), and noticed that it was specifying adapter sequences multiple times on the command line:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT \. ... ```. I tried seeing what fastp would do without the duplicate arguments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:1513,usability,minim,minimal,1513,"uments, expecting to get the same results:. ```. ... --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. ... ```. But I found that in some cases my read lengths were now different - sometimes only r1 was affected, sometimes only r2, sometimes both. The adapter sequences being specified don't even appear in the fastqs in this case, so I expected them to have no effect. Steps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of thr",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2502,usability,consist,consists,2502,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/575:2580,usability,minim,minimal,2580,"teps to reproduce:. ```bash. # GiaB test data. wget https://ftp-trace.ncbi.nlm.nih.gov/ReferenceSamples/giab/data/NA12878/NIST_NA12878_HG001_HiSeq_300x/131219_D00360_005_BH814YADXX/Project_RM8398/Sample_U0a/U0a_CGATGT_L001_R{1,2}_001.fastq.gz. # fastp 0.23.4. wget http://opengene.org/fastp/fastp.0.23.4. chmod u+x fastp.0.23.4. ln -s fastp.0.23.4 fastp. # proof that the adapter sequences are absent in the fastqs - so surely should have no effect? for f in U0a_CGATGT_L001_R*; do echo $f; for a in CTGTCTCTTATACACATCT AGATGTGTATAAGAGACAG; do zcat $f | grep -c $a; done; done. # subset to a minimal example of 3 reads known to be affected. zcat U0a_CGATGT_L001_R1_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r1.fastq.gz. zcat U0a_CGATGT_L001_R2_001.fastq.gz | grep -E '^@HWI-D00360:5:H814YADXX:1:1101:(3756:2236|7206:2194|5147:4880)' -A 3 --no-group-separator | head -n 12 | gzip -c > minimal_r2.fastq.gz. # run fastp with/without duplicated --adapter_sequence args. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed.fastq.gz -O r2_trimmed.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence AGATGTGTATAAGAGACAG \. --adapter_sequence CTGTCTCTTATACACATCT. fastp -i minimal_r1.fastq.gz -I minimal_r2.fastq.gz -o r1_trimmed_nodup.fastq.gz -O r2_trimmed_nodup.fastq.gz. --thread 8 \. --adapter_sequence CTGTCTCTTATACACATCT \. --adapter_sequence AGATGTGTATAAGAGACAG. ```. The above example consists of three reads, which were each affected in the same way in both the minimal fastqs above and the full size ones:. * @HWI-D00360:5:H814YADXX:1:1101:7206:2194 - r1 affected. * @HWI-D00360:5:H814YADXX:1:1101:3756:2236 - r2 affected. * @HWI-D00360:5:H814YADXX:1:1101:5147:4880 - both affected. Do you know what could be causing this? Is it an expected use-case to specify the same adapter sequence multiple times?",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/575
https://github.com/OpenGene/fastp/issues/576:408,integrability,filter,filtering,408,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:496,integrability,filter,filter,496,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:657,integrability,filter,filtering,657,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:6,reliability,doe,does,6,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:425,reliability,doe,does,425,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:170,safety,detect,detects,170,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:170,security,detect,detects,170,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:673,usability,efficien,efficient,673,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:769,usability,user,user-attachments,769,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/576:914,usability,user,user-attachments,914,"Fastp does not remove G homopolymers; Hello,. In my Illumina NovaSeq read, I have many G and C homopolymer reads. I used fastp --trim_poly_g option. However, this option detects reads with at least 10 Gs at the end and trims the 10 Gs. If the whole read is made up of Gs, those reads still stay there but will only be 10 base pairs shorted. In addition, if G homopolymers appear in the middle of reads, this filtering option does not remove them. I can easily imagine to write a python script to filter reads based on GC% but given I have 300 million reads, it will probably take forever to finish the job. Is there any way you would suggest for doing this filtering in an efficient way? <img width=""806"" alt=""Screenshot 2024-09-26 at 09 43 17"" src=""https://github.com/user-attachments/assets/80e8849b-6e6a-427a-bca8-e34b254f4023"">. <img width=""813"" alt=""Screenshot 2024-09-26 at 09 43 38"" src=""https://github.com/user-attachments/assets/7ad476d5-daf6-4d9d-98f4-6901f4a8a9db"">.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/576
https://github.com/OpenGene/fastp/issues/577:0,energy efficiency,Adapt,Adapter,0,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:209,energy efficiency,adapt,adapter,209,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:307,energy efficiency,adapt,adapter,307,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:521,energy efficiency,adapt,adapter,521,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:0,integrability,Adapt,Adapter,0,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:209,integrability,adapt,adapter,209,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:307,integrability,adapt,adapter,307,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:521,integrability,adapt,adapter,521,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:539,integrability,sub,subsequences,539,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:0,interoperability,Adapt,Adapter,0,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:209,interoperability,adapt,adapter,209,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:307,interoperability,adapt,adapter,307,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:521,interoperability,adapt,adapter,521,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:0,modifiability,Adapt,Adapter,0,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:209,modifiability,adapt,adapter,209,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:307,modifiability,adapt,adapter,307,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:521,modifiability,adapt,adapter,521,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:61,security,team,team,61,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:99,usability,tool,tool,99,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:255,usability,minim,minimum,255,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:408,usability,user,user-attachments,408,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:618,usability,user,user-attachments,618,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/577:1157,usability,help,help,1157,"Adapter sequences not removed from short SE data; Dear fastp team,. First of all thank you for the tool, very nice! I am running fastp on SE data from a smallRNAseq dataset of 50nt reads, provided the default adapter sequence ""TGGAATTCTCGGGTGCCAAGGC"" and minimum length 15. Although fastp finds many of the adapter sequences, it is not removing them. ![Screen Shot 2024-09-26 at 11 40 31](https://github.com/user-attachments/assets/d5591283-25ca-4120-8df0-460f37bddbbe). Why is this happening / how to get files with all adapter sequences/subsequences trimmed? ![Screen Shot 2024-09-26 at 00 22 22](https://github.com/user-attachments/assets/ed84f2a6-38f2-4a79-bc4f-626be6ac9348). This is my code:. `Adapter2remov=""TGGAATTCTCGGGTGCCAAGGC"". threads=4. fastp -w $threads -i ""$file"" -o ""${file/.fastq.gz/_fastpadapt30_2.fastq.gz}"" -h ""${file/.fastq.gz/_fastpadapt30_2.html}"" -j ""${file/.fastq.gz/_fastpadapt30_2.json}"" --low_complexity_filter --complexity_threshold 30 --average_qual 30 --qualified_quality_phred 30 -5 -3 -r --trim_poly_x --poly_x_min_len 6 --trim_poly_g --poly_g_min_len 6 -z 4 --adapter_sequence ""$Adapter2remov""`. Thanks in advance for the help,. Mafalda.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/577
https://github.com/OpenGene/fastp/issues/579:21,integrability,filter,filter,21,"Disable ""too many N"" filter; Hi,. I'm sure I'm missing something, but is there an option to _disable_ the `too many N` filter in fastp? Thanks . M",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/579
https://github.com/OpenGene/fastp/issues/579:119,integrability,filter,filter,119,"Disable ""too many N"" filter; Hi,. I'm sure I'm missing something, but is there an option to _disable_ the `too many N` filter in fastp? Thanks . M",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/579
https://github.com/OpenGene/fastp/issues/580:21,availability,failur,failure,21,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:21,deployability,fail,failure,21,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1464,deployability,fail,failed,1464," based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1500,deployability,fail,failed,1500,"he Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1535,deployability,fail,failed,1535,"h < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2764,deployability,fail,failed,2764,"html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2800,deployability,fail,failed,2800,"astp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2835,deployability,fail,failed,2835,"e/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 208420008",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3907,deployability,fail,failed,3907,"e to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bas",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3943,deployability,fail,failed,3943,"0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 219679931",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3978,deployability,fail,failed,3978,"uated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5048,deployability,fail,failed,5048,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5084,deployability,fail,failed,5084,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5119,deployability,fail,failed,5119,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1574,energy efficiency,adapt,adapter,1574,"cy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 af",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1620,energy efficiency,adapt,adapters,1620," first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2874,energy efficiency,adapt,adapter,2874,"D/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads pa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2915,energy efficiency,adapt,adapters,2915,"jects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due t",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4017,energy efficiency,adapt,adapter,4017,"port: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads pass",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4058,energy efficiency,adapt,adapters,4058,". /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5158,energy efficiency,adapt,adapter,5158,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5199,energy efficiency,adapt,adapters,5199,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:868,integrability,filter,filtering,868,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1006,integrability,filter,filtering,1006,"on issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fast",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1144,integrability,filter,filtering,1144,"n. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seco",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1282,integrability,filter,filtering,1282,"tion and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.12",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1408,integrability,Filter,Filtering,1408,"2%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 208",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1440,integrability,filter,filter,1440," round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1574,integrability,adapt,adapter,1574,"cy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 af",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1620,integrability,adapt,adapters,1620," first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2167,integrability,filter,filtering,2167,"05224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2306,integrability,filter,filtering,2306,"5224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before f",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2444,integrability,filter,filtering,2444,"0361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2582,integrability,filter,filtering,2582,"ed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2708,integrability,Filter,Filtering,2708,"ds): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2740,integrability,filter,filter,2740,"son. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2874,integrability,adapt,adapter,2874,"D/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads pa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2915,integrability,adapt,adapters,2915,"jects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due t",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3310,integrability,filter,filtering,3310,":. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3449,integrability,filter,filtering,3449,". total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before fil",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3587,integrability,filter,filtering,3587,". total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3725,integrability,filter,filtering,3725,"ds passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after fi",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3851,integrability,Filter,Filtering,3851,"rt: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Re",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3883,integrability,filter,filter,3883,"med: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total re",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4017,integrability,adapt,adapter,4017,"port: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads pass",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4058,integrability,adapt,adapters,4058,". /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4451,integrability,filter,filtering,4451,"ng:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4590,integrability,filter,filtering,4590,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4728,integrability,filter,filtering,4728,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4866,integrability,filter,filtering,4866,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4992,integrability,Filter,Filtering,4992,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5024,integrability,filter,filter,5024,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5158,integrability,adapt,adapter,5158,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5199,integrability,adapt,adapters,5199,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1574,interoperability,adapt,adapter,1574,"cy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 af",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1620,interoperability,adapt,adapters,1620," first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2874,interoperability,adapt,adapter,2874,"D/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads pa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2915,interoperability,adapt,adapters,2915,"jects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due t",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4017,interoperability,adapt,adapter,4017,"port: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads pass",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4058,interoperability,adapt,adapters,4058,". /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5158,interoperability,adapt,adapter,5158,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5199,interoperability,adapt,adapters,5199,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1574,modifiability,adapt,adapter,1574,"cy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 af",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1620,modifiability,adapt,adapters,1620," first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2874,modifiability,adapt,adapter,2874,"D/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads pa",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2915,modifiability,adapt,adapters,2915,"jects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due t",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4017,modifiability,adapt,adapter,4017,"port: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads pass",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4058,modifiability,adapt,adapters,4058,". /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to ",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5158,modifiability,adapt,adapter,5158,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5199,modifiability,adapt,adapters,5199,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:21,performance,failur,failure,21,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2131,performance,time,time,2131,"ead1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3274,performance,time,time,3274,"78514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR54",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:4415,performance,time,time,4415,"3578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5557,performance,time,time,5557,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:21,reliability,fail,failure,21,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:833,reliability,doe,doesn,833,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1464,reliability,fail,failed,1464," based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1500,reliability,fail,failed,1500,"he Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:1535,reliability,fail,failed,1535,"h < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2764,reliability,fail,failed,2764,"html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total b",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2800,reliability,fail,failed,2800,"astp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:2835,reliability,fail,failed,2835,"e/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_2.fastq.gz -o ERR5445742_l1R1.fastq.gz -O ERR5445742_l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2187263387(96.5974%). Q30 bases: 2063424187(91.1282%). Read2 after filtering:. total reads: 15104100. total bases: 2264308814. Q20 bases: 2197157837(97.0344%). Q30 bases: 2085895844(92.1206%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 208420008",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3907,reliability,fail,failed,3907,"e to adapters: 0. Duplication rate: 0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bas",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3943,reliability,fail,failed,3943,"0.00744113%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 219679931",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:3978,reliability,fail,failed,3978,"uated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l1R1.fastq.gz -O ERR5445742_l1l1R2.fastq.gz --dedup --dup_calc_accuracy 1 --thread 16 . fastp v0.23.4, time used: 79 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5048,reliability,fail,failed,5048,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5084,reliability,fail,failed,5084,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:5119,reliability,fail,failed,5119,"d1 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2185485043(96.5976%). Q30 bases: 2061749882(91.1285%). Read2 after filtering:. total reads: 15091808. total bases: 2262463985. Q20 bases: 2195369494(97.0345%). Q30 bases: 2084200083(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.088817%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l3R1.fastq.gz -O ERR5445742_l1l3R2.fastq.gz --dedup --dup_calc_accuracy 3 --thread 16 . fastp v0.23.4, time used: 80 seconds. Read1 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 before filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Read1 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2186907014(96.5975%). Q30 bases: 2063090824(91.1284%). Read2 after filtering:. total reads: 15101641. total bases: 2263938008. Q20 bases: 2196799311(97.0344%). Q30 bases: 2085557436(92.1208%). Filtering result:. reads passed filter: 30210448. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 0.0237203%. Insert size peak (evaluated by paired-end reads): 214. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i ERR5445742_l1R1.fastq.gz -I ERR5445742_l1R2.fastq.gz -o ERR5445742_l1l6R1.fastq.gz -O ERR5445742_l1l6R2.fastq.gz --dedup --dup_calc_accuracy 6 --thread 16 . fastp v0.23.4, time used: 85 seconds",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:373,safety,input,input,373,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/580:373,usability,input,input,373,"Deduplication issue: failure of one round deduplication + accuracy level issue. [fastp v0.23.4]; Hi, there. We tried to use fastp to do de-duplication. However, we found 2 issues. Looking forward to your reply. . 1) one round of de-duplication is ineffective. . we ran level 1 de-duplication and got ""Duplication rate: 0.498141%"". When we ran level 6 de-duplication on the input, we got ""Duplication rate: 0.312492%"". However, if we ran second round of de-duplication based on the output of first run. The Duplication rate can almost reach < 0.1%, see as below. . But. 2) accuracy level issue:. we run level 1 de-duplication first and then using the output to run de-duplication at different accuracy levels. . As you can see, level 1 + level 1 -> 0.00744113%, level 1 + level 3 -> 0.088817% , level 1 + level 6 -> 0.0237203%, which doesn't make sense. . Read1 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2199749620(96.602%). Q30 bases: 2075324182(91.1378%). Read2 before filtering:. total reads: 15180846. total bases: 2277126900. Q20 bases: 2209710343(97.0394%). Q30 bases: 2098006573(92.1339%). Read1 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2187424528(96.5975%). Q30 bases: 2063578514(91.1284%). Read2 after filtering:. total reads: 15105224. total bases: 2264474181. Q20 bases: 2197319205(97.0344%). Q30 bases: 2086050677(92.1208%). Filtering result:. reads passed filter: 30361692. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 623982. bases trimmed due to adapters: 2636132. Duplication rate: 0.498141%. Insert size peak (evaluated by paired-end reads): 226. JSON report: fastp.json. HTML report: fastp.html. /projects/f_lz332_1/software/fastp -i /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR5445742_1.fastq.gz -I /projects/f_lz332_1/DataBase/MetaGenomeData/Li_FrontMicro_2021_COVID/0.rawdata/ERR544",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/580
https://github.com/OpenGene/fastp/issues/581:277,safety,input,input,277,"merge paired-end reads: include average or even better median overlap length; Hi,. would it be possible to add median or average length of the overlaps used to stitch members of a read pair? Probably on the next line after the insert size in the output. Also output median/avg input FWD and REV read lengths. Thank you.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/581
https://github.com/OpenGene/fastp/issues/581:277,usability,input,input,277,"merge paired-end reads: include average or even better median overlap length; Hi,. would it be possible to add median or average length of the overlaps used to stitch members of a read pair? Probably on the next line after the insert size in the output. Also output median/avg input FWD and REV read lengths. Thank you.",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/581
https://github.com/OpenGene/fastp/issues/582:318,energy efficiency,Current,Current,318,"merging read pair mates using a reference sequence; Hi,. I lack possibility to merge mates (from amplicon sequencing) of a pair using alignment info to a reference. Ideally if they do NOT overlap to fill in the space with Ns. If they overlap, resolve the conflicts using QUAL values (is already implemented in fastp). Current implementation is described here: https://github.com/OpenGene/fastp/issues/31. Thank you,",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/582
https://github.com/OpenGene/fastp/issues/582:255,interoperability,conflict,conflicts,255,"merging read pair mates using a reference sequence; Hi,. I lack possibility to merge mates (from amplicon sequencing) of a pair using alignment info to a reference. Ideally if they do NOT overlap to fill in the space with Ns. If they overlap, resolve the conflicts using QUAL values (is already implemented in fastp). Current implementation is described here: https://github.com/OpenGene/fastp/issues/31. Thank you,",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/582
https://github.com/OpenGene/fastp/issues/583:379,deployability,automat,automatically,379,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:0,energy efficiency,Adapt,Adapter,0,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:275,energy efficiency,adapt,adapter,275,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:370,energy efficiency,adapt,adapters,370,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:477,energy efficiency,adapt,adapter,477,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:630,energy efficiency,adapt,adapter,630,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:0,integrability,Adapt,Adapter,0,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:275,integrability,adapt,adapter,275,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:370,integrability,adapt,adapters,370,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:477,integrability,adapt,adapter,477,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:630,integrability,adapt,adapter,630,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:873,integrability,pub,publication,873,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:0,interoperability,Adapt,Adapter,0,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:275,interoperability,adapt,adapter,275,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:370,interoperability,adapt,adapters,370,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:477,interoperability,adapt,adapter,477,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:618,interoperability,specif,specify,618,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:630,interoperability,adapt,adapter,630,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:0,modifiability,Adapt,Adapter,0,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:275,modifiability,adapt,adapter,275,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:370,modifiability,adapt,adapters,370,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:477,modifiability,adapt,adapter,477,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:630,modifiability,adapt,adapter,630,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:109,reliability,doe,does,109,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:8,safety,Detect,Detection,8,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:362,safety,detect,detects,362,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:8,security,Detect,Detection,8,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:91,security,team,team,91,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:233,security,ident,identifying,233,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:362,security,detect,detects,362,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:462,security,ident,identified,462,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:807,security,Access,Accession,807,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
https://github.com/OpenGene/fastp/issues/583:379,testability,automat,automatically,379,"Adapter Detection Issue with Paired-End Data in fastp Leading to Incomplete Trimming; Dear team,. This issue does not appear to be unique; please also refer to #557 #558 . I encountered this while processing paired-end (PE) data and identifying the Illumina TruSeq Small RNA adapter ""TGGAATTCTCGGGTGCCAAGG"" in the sequences. For paired-end data, fastp typically detects adapters automatically, which is an excellent feature. However, in my case, fastp (v0.23.1) identified the adapter sequences as “ATTCTCGGGTGCCAAGG......”—omitting the “**_TGGA_**” at the 5’ end—resulting in incomplete trimming. I also attempted to specify the adapter sequences with the -a option, but per the manual, ""For PE data, this is used if R1/R2 are found not overlapped"". **### Details about the Sequencing Library:**. > **Data Accession**: NCBI-SRR488706. **Methods & Materials (from [related publication](https://doi.org/10.1371/journal.pone.0042371)):** Small RNAs had linkers ligated to them and bar-coded cDNAs were prepared using the **TruSeq Small RNA Sample Prep Kit (Illumina)** following the manufacturer's instructions. ..... **100 bp paired-end reads** of the libraries were obtained. **Inserts size**: Primarily 27 bp. 	. Could you please advise on any potential solutions for this? Thank you! Best,. Liping",MatchSource.ISSUE,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/583
