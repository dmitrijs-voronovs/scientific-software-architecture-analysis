id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/6489:119,usability,behavi,behavior,119,"Test Issue; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ## Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6489
https://github.com/root-project/root/issues/6489:137,usability,clear,clear,137,"Test Issue; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ## Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6489
https://github.com/root-project/root/issues/6489:250,usability,behavi,behavior,250,"Test Issue; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ## Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6489
https://github.com/root-project/root/issues/6489:395,usability,input,input,395,"Test Issue; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ## Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6489
https://github.com/root-project/root/pull/6490:29,availability,error,error,29,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:38,deployability,observ,observed,38,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:1,interoperability,xml,xmlparser,1,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:108,interoperability,xml,xmlparser,108,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:29,performance,error,error,29,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:29,safety,error,error,29,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:38,testability,observ,observed,38,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6490:29,usability,error,error,29,[xmlparser] print line where error is observed (ROOT-8142); Provides exact line number in the file. Default xmlparser output is misleading - it just reports line number 0.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6490
https://github.com/root-project/root/pull/6492:21,security,Token,Tokens,21,"[RF] Fix ROOT-8173.; Tokens like `1.E-3` were not parsed correctly, because the stream parser expected `1.e-3`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6492
https://github.com/root-project/root/pull/6493:112,safety,avoid,avoid,112,[Hist] Fix the additon to gDirectory in TGraph::GetHistogram; When getting the HIstogram associated to a TGraph avoid to add it by default first in gDirectory by using TH1::AddDirectory(false). This fixes ROOT-8095. This is already the case in TGraph2D::GetHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6494:1,deployability,releas,release,1,[release notes] mention remote CSV reading in RDF;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6494
https://github.com/root-project/root/pull/6495:184,deployability,continu,continuation,184,[skip-ci] Adjust list items in TList.cxx; The list of suggestions for iterating over a TList starts at item zero. This item is currently not part of the list as doxygen considers it a continuation of the previous sentence. Even bringing it to a new line doesn't work since it gets indented separately from the other items (a few spaces before). I propose adjusting the numbers of the items to make the list start from one. This way doxygen renders the list correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6495
https://github.com/root-project/root/pull/6495:127,energy efficiency,current,currently,127,[skip-ci] Adjust list items in TList.cxx; The list of suggestions for iterating over a TList starts at item zero. This item is currently not part of the list as doxygen considers it a continuation of the previous sentence. Even bringing it to a new line doesn't work since it gets indented separately from the other items (a few spaces before). I propose adjusting the numbers of the items to make the list start from one. This way doxygen renders the list correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6495
https://github.com/root-project/root/pull/6495:254,reliability,doe,doesn,254,[skip-ci] Adjust list items in TList.cxx; The list of suggestions for iterating over a TList starts at item zero. This item is currently not part of the list as doxygen considers it a continuation of the previous sentence. Even bringing it to a new line doesn't work since it gets indented separately from the other items (a few spaces before). I propose adjusting the numbers of the items to make the list start from one. This way doxygen renders the list correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6495
https://github.com/root-project/root/pull/6496:87,deployability,version,version,87,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:87,integrability,version,version,87,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:87,modifiability,version,version,87,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:40,performance,perform,performance,40,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:148,performance,memor,memory,148,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:120,safety,test,test,120,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:120,testability,test,test,120,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:40,usability,perform,performance,40,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6496:148,usability,memor,memory,148,[PyROOT][DF] Improve RDataFrame.AsNumpy performance; * Fixes a warning in newer python version (first commit). * Adds a test that we actually adopt memory from C++ objects and fixes the broken adoption from `numpy.array`. We should merge first the respective benchmarks in rootbench. The PR is ongoing here: https://github.com/root-project/rootbench/pull/195,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6496
https://github.com/root-project/root/pull/6498:81,modifiability,extens,extension,81,Fix problem in TSystem::CompileMacro (ROOT-8133) ; Correctly handle file without extension. Was calling TString::Replace method with invalid arguments,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/issues/6500:199,deployability,releas,release,199,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:221,deployability,log,logs,221,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:235,deployability,releas,releases,235,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:260,deployability,patch,patches,260,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:300,deployability,log,log,300,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:147,energy efficiency,Current,Currently,147,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:221,safety,log,logs,221,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:260,safety,patch,patches,260,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:300,safety,log,log,300,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:221,security,log,logs,221,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:260,security,patch,patches,260,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:300,security,log,log,300,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:221,testability,log,logs,221,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:300,testability,log,log,300,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:0,usability,Document,Documentation,0,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:119,usability,document,documented,119,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/issues/6500:162,usability,document,documentation,162,"Documentation of TDirectory::TContext.; ## Explain what you would like to see improved. TDirectory::TContext should be documented more explicitly. Currently the ""documentation"" is spread through-out release notes and git logs. See the releases notes for v5.34 patches and v6.06 as well as the commit log for. 843a15939587b0f730ce81d668ae0358b8d89cf6. af78af292ca467334ebb175e1d437a02abcc7d83. 135e659287a8b7199b4bdf7bd7c0baac514f8258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6500
https://github.com/root-project/root/pull/6501:195,deployability,updat,updates,195,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:110,integrability,event,events,110,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:238,integrability,event,events,238,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:195,safety,updat,updates,195,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:92,security,sign,signal,92,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:195,security,updat,updates,195,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:27,usability,dialog,dialog,27,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6501:67,usability,dialog,dialog,67,"[TMVA] Fix ROOT-7507 ( Fix dialog GUI in mvaeffs.cxx); Fix TMVAGui dialog setting number of signal/background events. When changing the text fild and then clicking on ReDraw the numbers were not updates, because. the function setting the events was not called. This fixes ROOT-7507",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6501
https://github.com/root-project/root/pull/6503:12,deployability,build,builds,12,"[cmake] Fix builds of clad with external LLVM; LLVM_DIR cannot be ""${CMAKE_BINARY_DIR}/interpreter/llvm/src"" in case. of external LLVM, set it to ${LLVM_BINARY_DIR} instead. This is a fairly urgent fix: our nightly conda builds are broken because of this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6503
https://github.com/root-project/root/pull/6503:221,deployability,build,builds,221,"[cmake] Fix builds of clad with external LLVM; LLVM_DIR cannot be ""${CMAKE_BINARY_DIR}/interpreter/llvm/src"" in case. of external LLVM, set it to ${LLVM_BINARY_DIR} instead. This is a fairly urgent fix: our nightly conda builds are broken because of this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6503
https://github.com/root-project/root/issues/6504:127,deployability,FAIL,FAILED,127,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:472,deployability,build,build,472,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:495,deployability,build,build,495,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:588,deployability,build,build,588,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:643,deployability,build,build,643,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:703,deployability,build,build,703,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:758,deployability,build,build,758,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:943,deployability,build,build,943,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:127,reliability,FAIL,FAILED,127,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:149,safety,test,test,149,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:373,safety,test,test,373,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:406,safety,test,testGradient,406,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:442,safety,test,test,442,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1069,safety,test,testing,1069,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1182,safety,test,testing,1182,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1290,safety,test,testing,1290,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:149,testability,test,test,149,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:373,testability,test,test,373,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:406,testability,test,testGradient,406,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:442,testability,test,test,442,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1069,testability,test,testing,1069,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1182,testability,test,testing,1182,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1191,testability,Unit,UnitTest,1191,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1290,testability,test,testing,1290,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1299,testability,Unit,UnitTest,1299,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:0,usability,Minim,Minimal,0,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1335,usability,behavi,behavior,1335,"Minimal config is broken on root-fedora30-1.cern.ch; ### Describe the bug. ```. cmake .. -Droottest=ON ... #without -Dtest=ON. FAILED: math/mathcore/test/GradientUnit. : && /usr/lib64/ccache/c++ -fdiagnostics-color=always -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -rdynamic math/mathcore/test/CMakeFiles/GradientUnit.dir/testGradient.cxx.o -o math/mathcore/test/GradientUnit -Wl,-rpath,/build/workspace/manual/build/lib lib/libHist.so lib/libTree.so lib/libGenVector.so googletest-prefix/src/googletest-build/lib//libgtest.a googletest-prefix/src/googletest-build/lib//libgtest_main.a googletest-prefix/src/googletest-build/lib//libgmock.a googletest-prefix/src/googletest-build/lib//libgmock_main.a lib/libMatrix.so lib/libNet.so lib/libRIO.so lib/libThread.so -lpthread lib/libMathCore.so lib/libCore.so && :. /usr/bin/ld: googletest-prefix/src/googletest-build/lib//libgtest_main.a(gtest_main.cc.o): in function `main':. gtest_main.cc:(.text.startup+0x26): undefined reference to `testing::InitGoogleTest(int*, char**)'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x2b): undefined reference to `testing::UnitTest::GetInstance()'. /usr/bin/ld: gtest_main.cc:(.text.startup+0x33): undefined reference to `testing::UnitTest::Run()'. ```. ### Expected behavior. success.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/pull/6506:0,deployability,Updat,Update,0,Update TPad.cxx; Fixes #6447 . Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:0,safety,Updat,Update,0,Update TPad.cxx; Fixes #6447 . Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:0,security,Updat,Update,0,Update TPad.cxx; Fixes #6447 . Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6507:0,deployability,Updat,Update,0,Update TPad.cxx; Prevent integer divison by zero. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:0,safety,Updat,Update,0,Update TPad.cxx; Prevent integer divison by zero. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:17,safety,Prevent,Prevent,17,Update TPad.cxx; Prevent integer divison by zero. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:0,security,Updat,Update,0,Update TPad.cxx; Prevent integer divison by zero. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:17,security,Preven,Prevent,17,Update TPad.cxx; Prevent integer divison by zero. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6508:20,availability,failur,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:182,availability,failur,failures,182,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:20,deployability,fail,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:182,deployability,fail,failures,182,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:20,performance,failur,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:182,performance,failur,failures,182,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:20,reliability,fail,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/pull/6508:182,reliability,fail,failures,182,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This will fix the failures in the nightlies that suddenly popped up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6508
https://github.com/root-project/root/issues/6509:79,deployability,build,building,79,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:138,deployability,build,build,138,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:348,deployability,build,build,348,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:557,deployability,build,build,557,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:631,deployability,build,build,631,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:702,deployability,build,build,702,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:900,deployability,build,build,900,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1109,deployability,build,build,1109," Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a regi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1183,deployability,build,build,1183,"tionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1254,deployability,build,build,1254,"ctionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1452,deployability,build,build,1452,"ion of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1661,deployability,build,build,1661,"/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a regi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1735,deployability,build,build,1735,"c/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:1806,deployability,build,build,1806,"ionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2004,deployability,build,build,2004,"ion of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2213,deployability,build,build,2213,"/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a regi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2287,deployability,build,build,2287,"c/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2358,deployability,build,build,2358,"ionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2556,deployability,build,build,2556,"ion of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2765,deployability,build,build,2765,"/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2839,deployability,build,build,2839,"c/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:2910,deployability,build,build,2910,"ionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3108,deployability,build,build,3108,"ion of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3317,deployability,build,build,3317,"/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3391,deployability,build,build,3391,"c/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3462,deployability,build,build,3462,"ionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3660,deployability,build,build,3660,"ion of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:3879,deployability,build,build,3879,"ollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4088,deployability,build,build,4088,"har;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4162,deployability,build,build,4162,"mer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4233,deployability,build,build,4233,"ngop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4432,deployability,build,build,4432,"llectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4641,deployability,build,build,4641,"ar;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4715,deployability,build,build,4715,"er.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4786,deployability,build,build,4786,"::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = unsigned char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:4985,deployability,build,build,4985,"n of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5194,deployability,build,build,5194,"rc/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5268,deployability,build,build,5268,"TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5339,deployability,build,build,5339,"nProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5538,deployability,build,build,5538,"n of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5747,deployability,build,build,5747,"rc/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5821,deployability,build,build,5821,"TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:5892,deployability,build,build,5892,"nProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGen",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6091,deployability,build,build,6091,"n of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6300,deployability,build,build,6300,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6374,deployability,build,build,6374,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6445,deployability,build,build,6445,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6644,deployability,build,build,6644,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6853,deployability,build,build,6853,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6927,deployability,build,build,6927,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6998,deployability,build,build,6998,"/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:96:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::u_char’ with size 1 declared here. 96 | UChar_t u_char;. | ^~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6509:6,performance,I/O,I/O,6,"[ROOT I/O] Warning: writing 1 byte into a region of size 0; Noticed this while building 6.22.02 with GCC 10.2 on Arch Linux x86_64. ```. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx: In function ‘void DispatchConvertArray(int, TGenCollectionProxy::StreamHelper*, TGenCollectionProxy::StreamHelper*, int) [with From = char]’:. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~~. /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:152:12: warning: writing 1 byte into a region of size 0 [-Wstringop-overflow=]. 152 | w[i] = (To)r[i];. | ~~~~~^~~~~~~~. In file included from /build/root/src/root-6.22.02/io/io/inc/TGenCollectionStreamer.h:14,. from /build/root/src/root-6.22.02/io/io/src/TGenCollectionStreamer.cxx:25:. /build/root/src/root-6.22.02/io/io/inc/TGenCollectionProxy.h:89:20: note: at offset 0 to object ‘TGenCollectionProxy::StreamHelper::s_char’ with size 1 declared here. 89 | Char_t s_char;. | ^~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6509
https://github.com/root-project/root/issues/6510:102,availability,fault,fault,102,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:102,energy efficiency,fault,fault,102,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:187,integrability,event,event,187,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:443,integrability,event,event,443,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:609,integrability,event,event,609,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:102,performance,fault,fault,102,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:102,reliability,fault,fault,102,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:7,safety,safe,safety,7,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:102,safety,fault,fault,102,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:1223,safety,compl,completely,1223,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:73,security,sign,signal,73,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:1223,security,compl,completely,1223,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:846,testability,context,context,846,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:706,usability,behavi,behavior,706,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:937,usability,Guid,Guidelines,937,"Thread safety in TPad; ## Describe the bug. Crash. ```. Program received signal SIGSEGV, Segmentation fault. 0x00007ffff59494f8 in TPad::ShowGuidelines (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /home/andriish/Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. 6248	 tmpGuideLinePad->Delete();. (gdb) bt. #0 0x00007ffff59494f8 in TPad::ShowGuidelines(TObject*, int, char, bool) (this=0x249da40, object=0x249da40, event=21, mode=114 'r', cling=true) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:6248. #1 0x00007ffff5932f5f in TPad::ExecuteEvent(int, int, int) (this=0x249da40, event=21, px=412, py=186) at /Projects/ROOT/root/graf2d/gpad/src/TPad.cxx:2159. ```. ## Expected behavior. No crash. ## To Reproduce. No working standalone reproducer so far. ## Setup. master ROOT with gcc4.8.5 on CentOS7. ## Additional context. The relevant code is . ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. ```. Obviously the code if completely ok for a single thread application. However, a protection for multithread apps is needed when dealing with tmpGuideLinePad. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/pull/6512:115,availability,Consist,Consistent,115,ROOFIT tutorials formatting; - Make sure the short description of the tutorials is visible in the tutorial list. - Consistent date formant. - p.d.f. => pdf. fixes: https://github.com/root-project/root/issues/6433,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6512
https://github.com/root-project/root/pull/6512:17,interoperability,format,formatting,17,ROOFIT tutorials formatting; - Make sure the short description of the tutorials is visible in the tutorial list. - Consistent date formant. - p.d.f. => pdf. fixes: https://github.com/root-project/root/issues/6433,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6512
https://github.com/root-project/root/pull/6512:115,usability,Consist,Consistent,115,ROOFIT tutorials formatting; - Make sure the short description of the tutorials is visible in the tutorial list. - Consistent date formant. - p.d.f. => pdf. fixes: https://github.com/root-project/root/issues/6433,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6512
https://github.com/root-project/root/pull/6513:22,safety,Prevent,Prevent,22,"Fix division by zero; Prevent division over zero for floats and integers in TArrow. Tag @couet . Please note that only one line was added. Code to reproduce on Linux. ```. #include <TCanvas.h>. #include <TArrow.h>. #include <iostream>. #include <fenv.h>. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",20,200);. const int N=20;. C->cd();. C->Divide(N,1);. C->cd(1);. TArrow* a = new TArrow();. a->PaintArrow(10, 10, 5, 5, 0.01);. delete a;. delete C;. return 0;. }. ````.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:22,security,Preven,Prevent,22,"Fix division by zero; Prevent division over zero for floats and integers in TArrow. Tag @couet . Please note that only one line was added. Code to reproduce on Linux. ```. #include <TCanvas.h>. #include <TArrow.h>. #include <iostream>. #include <fenv.h>. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",20,200);. const int N=20;. C->cd();. C->Divide(N,1);. C->cd(1);. TArrow* a = new TArrow();. a->PaintArrow(10, 10, 5, 5, 0.01);. delete a;. delete C;. return 0;. }. ````.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6514:363,energy efficiency,current,current,363,"[Hist] Fix creation of not registered histogram (i.e not added to gDirectory); When creating histograms without adding them to gDirectory, do not use. global TH1::fgDirectoryStatus flag, since it is not thread safe and use instead,. as suggested by Philippe, TDirectory::TContext. By creating a TDirectory::TContext witha null directory, gDirectory is set in the current context to. a nullptr and the corresponding histograms will not be added to gDirectory. Fix this for TGraph, TGraph2D and TEfficiency. This should finally fix ROOT-8095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6514
https://github.com/root-project/root/pull/6514:210,safety,safe,safe,210,"[Hist] Fix creation of not registered histogram (i.e not added to gDirectory); When creating histograms without adding them to gDirectory, do not use. global TH1::fgDirectoryStatus flag, since it is not thread safe and use instead,. as suggested by Philippe, TDirectory::TContext. By creating a TDirectory::TContext witha null directory, gDirectory is set in the current context to. a nullptr and the corresponding histograms will not be added to gDirectory. Fix this for TGraph, TGraph2D and TEfficiency. This should finally fix ROOT-8095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6514
https://github.com/root-project/root/pull/6514:371,testability,context,context,371,"[Hist] Fix creation of not registered histogram (i.e not added to gDirectory); When creating histograms without adding them to gDirectory, do not use. global TH1::fgDirectoryStatus flag, since it is not thread safe and use instead,. as suggested by Philippe, TDirectory::TContext. By creating a TDirectory::TContext witha null directory, gDirectory is set in the current context to. a nullptr and the corresponding histograms will not be added to gDirectory. Fix this for TGraph, TGraph2D and TEfficiency. This should finally fix ROOT-8095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6514
https://github.com/root-project/root/pull/6515:20,availability,failur,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:20,deployability,fail,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,deployability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,integrability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,interoperability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,modifiability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:20,performance,failur,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:20,reliability,fail,failures,20,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,reliability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,security,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:283,testability,integr,integrals,283,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6515:238,usability,user,user-provided,238,"[RF] Fix std::regex failures on Mac10.15.; Due to a change on Mac, [ and ] in the names of RooFit objects had to be. replaced by \\[ and \\] to be used in regexes. This kind of regexes is auto-generated when RooFit checks for objects. in user-provided formulae. Since auto-generated integrals have [...] in. their names, regexes with a lot of [] may be generated. They were. accepted by all OSs until a recent change in OS X. (cherry picked from commit e0550db0059c17919dc91ad64f5d9d302999f6cc)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6515
https://github.com/root-project/root/pull/6517:19,interoperability,format,formatting,19,ROOSTATS tutorials formatting; Make sure the short description is visible in the list of roostats tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6517
https://github.com/root-project/root/issues/6518:567,deployability,build,build,567,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:628,deployability,contain,contained,628,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1478,energy efficiency,Draw,Draw,1478,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1542,energy efficiency,Draw,Draw,1542,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1632,energy efficiency,Draw,DrawClone,1632,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:276,integrability,event,event,276,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1982,performance,multi-thread,multi-threading,1982,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:241,reliability,doe,does,241,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:521,safety,input,input,521,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1727,testability,context,context,1727,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1756,testability,context,context,1756,"] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:140,usability,behavi,behavior,140,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:158,usability,clear,clear,158,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:376,usability,behavi,behavior,376,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:521,usability,input,input,521,"[TreeReader] When looping over a TTree with a friend with a larger number of entries, the loop spans all entries in the friend; ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. #include <TFile.h>. #include <TTree.h>. #include <iostream>. int main() {. ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});. ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); . auto tmain = fmain.Get<TTree>(""main""); . TFile ffriend(""friend.root"");. auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;. TTreeReader r(tmain); . while (r.Next()). ++counter;. std::cout << ""should be 10: "" << counter << std::endl;. return 0;. } . ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp. tmain->Draw(""x""); // fills the histogram with 10 entries. ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus. ```. ## Additional context. <!--. Add any other context about the problem here. -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/pull/6519:51,energy efficiency,load,loaded,51,TBranch::GetBulkEntries proper handling of already loaded basket; TBranch::GetBulkEntries proper handling of already loaded basket. This fixes #6416 and fixes #6417.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:117,energy efficiency,load,loaded,117,TBranch::GetBulkEntries proper handling of already loaded basket; TBranch::GetBulkEntries proper handling of already loaded basket. This fixes #6416 and fixes #6417.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:51,performance,load,loaded,51,TBranch::GetBulkEntries proper handling of already loaded basket; TBranch::GetBulkEntries proper handling of already loaded basket. This fixes #6416 and fixes #6417.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:117,performance,load,loaded,117,TBranch::GetBulkEntries proper handling of already loaded basket; TBranch::GetBulkEntries proper handling of already loaded basket. This fixes #6416 and fixes #6417.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/issues/6520:18,availability,avail,available,18,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:84,availability,avail,available,84,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:37,deployability,API,API,37,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:37,integrability,API,API,37,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:37,interoperability,API,API,37,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:214,modifiability,extens,extension,214,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:18,reliability,availab,available,18,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:84,reliability,availab,available,84,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:18,safety,avail,available,18,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:84,safety,avail,available,84,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:18,security,availab,available,18,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:84,security,availab,available,84,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:209,security,sign,sign,209,Integer types not available for Bulk API; It looks to me like integer types are not available for bulk reading because they return TLeaf::DeserializeType::kDestructive. I suspect this has something to do with sign extension for unsigned quantities. Is this really the case?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/pull/6521:9,safety,Sanit,Sanitize,9,[PyROOT] Sanitize input arguments to AsNumpy; AsNumpy('foo') would iterate over the characters of 'foo'. Notify the. user that we expects AsNumpy(['foo']) in the case a plain string is. passed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6521
https://github.com/root-project/root/pull/6521:18,safety,input,input,18,[PyROOT] Sanitize input arguments to AsNumpy; AsNumpy('foo') would iterate over the characters of 'foo'. Notify the. user that we expects AsNumpy(['foo']) in the case a plain string is. passed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6521
https://github.com/root-project/root/pull/6521:9,security,Sanit,Sanitize,9,[PyROOT] Sanitize input arguments to AsNumpy; AsNumpy('foo') would iterate over the characters of 'foo'. Notify the. user that we expects AsNumpy(['foo']) in the case a plain string is. passed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6521
https://github.com/root-project/root/pull/6521:18,usability,input,input,18,[PyROOT] Sanitize input arguments to AsNumpy; AsNumpy('foo') would iterate over the characters of 'foo'. Notify the. user that we expects AsNumpy(['foo']) in the case a plain string is. passed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6521
https://github.com/root-project/root/pull/6521:117,usability,user,user,117,[PyROOT] Sanitize input arguments to AsNumpy; AsNumpy('foo') would iterate over the characters of 'foo'. Notify the. user that we expects AsNumpy(['foo']) in the case a plain string is. passed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6521
https://github.com/root-project/root/pull/6522:5,safety,Prevent,Prevent,5,[DF] Prevent crash in TypeName2TypeID() when dictionary is missing;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6522
https://github.com/root-project/root/pull/6522:5,security,Preven,Prevent,5,[DF] Prevent crash in TypeName2TypeID() when dictionary is missing;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6522
https://github.com/root-project/root/issues/6523:3830,availability,Operat,Operating,3830,"that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3905,availability,down,download,3905,"=======================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is calle",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:4112,availability,state,statements,4112,"behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5543,availability,fault,fault,5543," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:169,deployability,continu,continuation,169,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:684,deployability,updat,updated,684,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:789,deployability,stack,stacktrace,789,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1252,deployability,stack,stack,1252,"//sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Progra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1751,deployability,Stack,StackTrace,1751,"ogram crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2764,deployability,stack,stack,2764,"=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3250,deployability,updat,updated,3250,"ams/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3658,deployability,build,build,3658,"ed it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->Ge",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3818,deployability,version,version,3818,"ything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3887,deployability,instal,install,3887,"=========================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1677,energy efficiency,core,core,1677," not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1822,energy efficiency,core,core,1822," with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2003,energy efficiency,core,core,2003,"_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2151,energy efficiency,core,core,2151,"===============================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2275,energy efficiency,core,core,2275,"s:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:4208,energy efficiency,current,current,4208,"m doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5543,energy efficiency,fault,fault,5543," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:482,integrability,queue,queue,482,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2696,integrability,sub,submit,2696,"tem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3818,integrability,version,version,3818,"ything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:4112,integrability,state,statements,4112,"behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:4827,integrability,event,event,4827," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3818,modifiability,version,version,3818,"ything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:427,performance,content,contents,427,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:482,performance,queue,queue,482,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5543,performance,fault,fault,5543," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3214,reliability,doe,doesn,3214,"dler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5543,reliability,fault,fault,5543," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:684,safety,updat,updated,684,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3250,safety,updat,updated,3250,"ams/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3612,safety,input,input,3612,".cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_seq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5543,safety,fault,fault,5543," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:684,security,updat,updated,684,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2315,security,sign,signal,2315,"======================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3250,security,updat,updated,3250,"ams/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:5514,security,sign,signal,5514," can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetDirectory() . $11 = (TDirectory *) 0x19865c0. (gdb) p tree.GetCurrentFile() . $12 = (TFile *) 0x19865c0. (gdb) p tree.GetCurrentFile()->GetName(). $13 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tree.GetDirectory()->GetName() . $14 = 0x1db1780 ""tbuffermerger_sequential_2.root"". (gdb) p tbmfile.get()->GetName(). Program received signal SIGSEGV, Segmentation fault. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1258,testability,trace,trace,1258,"its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2770,testability,trace,trace,2770,"800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:4092,testability,Context,Context,4092,"==. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetDirectory()->GetName(). $8 = 0x1eca1f0 ""tbuffermerger_sequential.root"". (gdb) p tree.GetCurrentFile()->GetName(). $9 = 0x1eca1f0 ""tbuffermerger_sequential.root"". ```. But after the event loop the TTree changes files twice and the latest file it points to is called ""tbuffermerger_sequential_2.root"", but this is not reflected correctly in the TBufferMergerFile:. ```. (gdb) p tbmfile.get(). $10 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:93,usability,clear,clear,93,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:141,usability,behavi,behavior,141,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:812,usability,help,helpful,812,"TBufferMerger cannot handle TTree spanning over multiple files; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):. ```. vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq . Fill: Switching to new file: tbuffermerger_sequential_1.root. Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6. #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6. #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2527,usability,hint,hint,2527,"x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2571,usability,help,help,2571,"t/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2846,usability,help,help,2846,"cxx:2411. #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f4fcd15a82a in SigHandler (sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3117,usability,behavi,behavior,3117,"lan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statement",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3135,usability,clear,clear,3135,"project/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, als",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3467,usability,behavi,behavior,3467,"================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:3612,usability,input,input,3612,".cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #8 0x0000000000000000 in ?? (). #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25. ===========================================================. ```. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also commented in the gist. Before filling the TTree we can see that the current TFile of the tree is correctly the TBufferMergerFile (`tbmfile`):. ```. (gdb) p tbmfile.get(). $4 = (std::__shared_ptr<ROOT::Experimental::TBufferMergerFile, (__gnu_cxx::_Lock_policy)2>::element_type *) 0x1f0e750. (gdb) p tree.GetCurrentFile(). $5 = (TFile *) 0x1f0e750. (gdb) p tree.GetDirectory() . $6 = (TDirectory *) 0x1f0e750. (gdb) p tbmfile.get()->GetName(). $7 = 0x1eca1f0 ""tbuffermerger_seq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/pull/6524:9,safety,test,test,9,[DF] Add test for ROOT-10273;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6524
https://github.com/root-project/root/pull/6524:9,testability,test,test,9,[DF] Add test for ROOT-10273;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6524
https://github.com/root-project/root/pull/6525:0,interoperability,Format,Format,0,Format dataframe tutorials; format dataframe tutorials to make sure the short description is visible in the tutorials list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6525
https://github.com/root-project/root/pull/6525:28,interoperability,format,format,28,Format dataframe tutorials; format dataframe tutorials to make sure the short description is visible in the tutorials list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6525
https://github.com/root-project/root/pull/6526:162,availability,sli,slightly,162,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:327,energy efficiency,current,currently,327,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:162,reliability,sli,slightly,162,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:218,safety,avoid,avoiding,218,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:278,safety,Review,Reviewers,278,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:337,safety,valid,valid,337,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:359,safety,test,test,359,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:278,testability,Review,Reviewers,278,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:359,testability,test,test,359,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:176,usability,efficien,efficient,176,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:212,usability,help,helps,212,"[DF] In jitted lambdas, pass fundamental types by const value; Rather than non-const reference. This has two advantages:. - passing fundamental types by value is slightly more efficient. - passing by const value helps avoiding typos such as `if (x = 0)`. This fixes ROOT-11009. Reviewers, what do you think? Can this break any currently valid code? - [x] add test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/issues/6527:14,availability,error,error,14,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:957,availability,Operat,Operating,957,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1032,availability,down,download,1032,"geFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1930,availability,operat,operator,1930,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:62,deployability,stack,stack,62,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:299,deployability,stack,stack,299,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:785,deployability,build,build,785,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:945,deployability,version,version,945,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1014,deployability,instal,install,1014,"r with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1109,deployability,build,build,1109,"ise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1228,deployability,Stack,Stacktrace,1228,"to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1740,energy efficiency,optim,optimized,1740,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1864,energy efficiency,core,core,1864,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1988,energy efficiency,core,core,1988,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:2091,energy efficiency,optim,optimized,2091,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:945,integrability,version,version,945,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:945,modifiability,version,version,945,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:14,performance,error,error,14,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1740,performance,optimiz,optimized,1740,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:2091,performance,optimiz,optimized,2091,"pen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=0x7fffffffdea0) at ../../../root_dbg/tree/tree/src/TTree.cxx:2792. #9 0x00007ffff6841802 in TTree::Fill (this=0x7fffffffdbd0) at ../../../root_dbg/tree/tree/src/TTree.cxx:4707. #10 0x0000555555555289 in main () at repro_vincenzo.cpp:15. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:14,safety,error,error,14,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:739,safety,input,input,739,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:1219,testability,context,context,1219,"anging it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TObject.cxx:998. #7 0x00007ffff75db056 in TFile::~TFile (this=0x7fffffffdea0, __in_chrg=<optimized out>) at ../../../root_dbg/io/io/src/TFile.cxx:542. #8 0x00007ffff683c479 in TTree::ChangeFile (this=0x7fffffffdbd0, file=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:14,usability,error,error,14,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:98,usability,clear,clear,98,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:146,usability,behavi,behavior,146,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:365,usability,behavi,behaviour,365,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:388,usability,behavi,behavior,388,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:406,usability,clear,clear,406,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:594,usability,behavi,behavior,594,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/issues/6527:739,usability,input,input,739,"Double delete error with TTree::ChangeFile and a TFile on the stack; ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TTree::ChangeFile deletes the old TFile of the tree when changing it to point to a new one. If the TFile was originally created on the stack this leads to a double delete. Using TFile::Open fixes this behaviour. ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. TTree::ChangeFile should not rely on the original TFile to be on the heap. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following gist:. https://gist.github.com/vepadulano/848ebbfbbb7efc95d2f5726538583b82. ## Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT master. 2. Fedora 32. 3. ROOT build with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional context. Stacktrace. ```. #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50. #1 0x00007ffff54f2535 in __GI_abort () at abort.c:79. #2 0x00007ffff5549508 in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff565428d ""%s\n"") at ../sysdeps/posix/libc_fatal.c:181. #3 0x00007ffff554fc1a in malloc_printerr (str=str@entry=0x7ffff5655ff8 ""double free or corruption (out)"") at malloc.c:5341. #4 0x00007ffff5551730 in _int_free (av=0x7ffff568bc40 <main_arena>, p=0x7fffffffde90, have_lock=<optimized out>) at malloc.c:4306. #5 0x00007ffff7bf3dfc in TStorage::ObjectDealloc (vp=0x7fffffffdea0) at ../../../root_dbg/core/base/src/TStorage.cxx:362. #6 0x00007ffff7bd95c8 in TObject::operator delete (ptr=0x7fffffffdea0) at ../../../root_dbg/core/base/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6527
https://github.com/root-project/root/pull/6528:39,deployability,stack,stack,39,"[TTree] Avoid deletion of TFile on the stack; TObject::Delete checks the IsOnHeap() bit, while `delete obj` does not. This fixes #6527 , at least for the provided reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:108,reliability,doe,does,108,"[TTree] Avoid deletion of TFile on the stack; TObject::Delete checks the IsOnHeap() bit, while `delete obj` does not. This fixes #6527 , at least for the provided reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:8,safety,Avoid,Avoid,8,"[TTree] Avoid deletion of TFile on the stack; TObject::Delete checks the IsOnHeap() bit, while `delete obj` does not. This fixes #6527 , at least for the provided reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:73,security,IsO,IsOnHeap,73,"[TTree] Avoid deletion of TFile on the stack; TObject::Delete checks the IsOnHeap() bit, while `delete obj` does not. This fixes #6527 , at least for the provided reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/issues/6529:645,deployability,patch,patch,645,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:255,performance,memor,memory,255,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:367,safety,compl,completely,367,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:645,safety,patch,patch,645,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:367,security,compl,completely,367,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:645,security,patch,patch,645,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:542,testability,simpl,simply,542,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:255,usability,memor,memory,255,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/issues/6529:542,usability,simpl,simply,542,"[RF] segfault in RooWorkspace::import; When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace). The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me. [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6529
https://github.com/root-project/root/pull/6530:20,deployability,Updat,Update,20,[skip-ci][RelNotes] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6530
https://github.com/root-project/root/pull/6530:31,deployability,releas,release,31,[skip-ci][RelNotes] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6530
https://github.com/root-project/root/pull/6530:20,safety,Updat,Update,20,[skip-ci][RelNotes] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6530
https://github.com/root-project/root/pull/6530:20,security,Updat,Update,20,[skip-ci][RelNotes] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6530
https://github.com/root-project/root/pull/6531:10,deployability,patch,patches,10,"[RF] Misc patches; Collection of several small things that came up during work on a dev branch. Since they are not really related to the feature, I thought we could take care of those in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6531
https://github.com/root-project/root/pull/6531:10,safety,patch,patches,10,"[RF] Misc patches; Collection of several small things that came up during work on a dev branch. Since they are not really related to the feature, I thought we could take care of those in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6531
https://github.com/root-project/root/pull/6531:10,security,patch,patches,10,"[RF] Misc patches; Collection of several small things that came up during work on a dev branch. Since they are not really related to the feature, I thought we could take care of those in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6531
https://github.com/root-project/root/pull/6534:0,deployability,Updat,Update,0,Update README.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6534
https://github.com/root-project/root/pull/6534:0,safety,Updat,Update,0,Update README.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6534
https://github.com/root-project/root/pull/6534:0,security,Updat,Update,0,Update README.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6534
https://github.com/root-project/root/issues/6535:194,deployability,releas,releases,194,"TDataMember::SetterMethod(); The analysis software of the H1 Experiment at DESY (you may know it from the tutorial 'h1analysis.C') makes use of `TClass` `RTTI` for parameter setting. With newer releases (probably since root 5.xx?) we get a `NULL` pointer when calling `TDataMember::SetterMethod()`, whereas `TDataMember::GetterMethod()` works well. . When looking at the source code, there is a fall-back option to guess the `Method-Name (""SetXYZ()"")` and then get it:. ```. if (GetClass()->GetMethod(settername, ""1"")). fValueSetter = new TMethodCall(cl, settername, ""1"");. ```. This does not provide the SetterMethod either. However, it would work well with `""0""` instead of `""1""`. . The GetterMethod in TDataMember::GetterMethod() is well obtained with """". No idea if this is a bug, or a feature, and if the ""0"" option should be included as yet another fallback option?!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:164,modifiability,paramet,parameter,164,"TDataMember::SetterMethod(); The analysis software of the H1 Experiment at DESY (you may know it from the tutorial 'h1analysis.C') makes use of `TClass` `RTTI` for parameter setting. With newer releases (probably since root 5.xx?) we get a `NULL` pointer when calling `TDataMember::SetterMethod()`, whereas `TDataMember::GetterMethod()` works well. . When looking at the source code, there is a fall-back option to guess the `Method-Name (""SetXYZ()"")` and then get it:. ```. if (GetClass()->GetMethod(settername, ""1"")). fValueSetter = new TMethodCall(cl, settername, ""1"");. ```. This does not provide the SetterMethod either. However, it would work well with `""0""` instead of `""1""`. . The GetterMethod in TDataMember::GetterMethod() is well obtained with """". No idea if this is a bug, or a feature, and if the ""0"" option should be included as yet another fallback option?!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:584,reliability,doe,does,584,"TDataMember::SetterMethod(); The analysis software of the H1 Experiment at DESY (you may know it from the tutorial 'h1analysis.C') makes use of `TClass` `RTTI` for parameter setting. With newer releases (probably since root 5.xx?) we get a `NULL` pointer when calling `TDataMember::SetterMethod()`, whereas `TDataMember::GetterMethod()` works well. . When looking at the source code, there is a fall-back option to guess the `Method-Name (""SetXYZ()"")` and then get it:. ```. if (GetClass()->GetMethod(settername, ""1"")). fValueSetter = new TMethodCall(cl, settername, ""1"");. ```. This does not provide the SetterMethod either. However, it would work well with `""0""` instead of `""1""`. . The GetterMethod in TDataMember::GetterMethod() is well obtained with """". No idea if this is a bug, or a feature, and if the ""0"" option should be included as yet another fallback option?!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/pull/6536:1,energy efficiency,Core,Core,1,[Core] Revive TSeq tests; I guess these tests were not enabled by mistake?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6536
https://github.com/root-project/root/pull/6536:19,safety,test,tests,19,[Core] Revive TSeq tests; I guess these tests were not enabled by mistake?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6536
https://github.com/root-project/root/pull/6536:40,safety,test,tests,40,[Core] Revive TSeq tests; I guess these tests were not enabled by mistake?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6536
https://github.com/root-project/root/pull/6536:19,testability,test,tests,19,[Core] Revive TSeq tests; I guess these tests were not enabled by mistake?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6536
https://github.com/root-project/root/pull/6536:40,testability,test,tests,40,[Core] Revive TSeq tests; I guess these tests were not enabled by mistake?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6536
https://github.com/root-project/root/pull/6537:78,integrability,batch,batch,78,"Fix another crash in code from #6447; We should not manipulate with canvas in batch mode, I think. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:78,performance,batch,batch,78,"Fix another crash in code from #6447; We should not manipulate with canvas in batch mode, I think. Tag @couet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/issues/6539:41,energy efficiency,Current,Currently,41,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:426,integrability,event,eventually,426,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:21,safety,unsaf,unsafe,21,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:219,safety,safe,safe-browsing,219,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:286,usability,user,user-images,286,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:479,usability,document,documentation,479,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:493,usability,usab,usable,493,"root.cern marked as ""unsafe"" by Google ; Currently, when I visited any page hosted at root.cern (but not root.cern.ch...) I get a big scary warning (on Firefox) which directs me to https://transparencyreport.google.com/safe-browsing/search?url=http:%2F%2Froot.cern%2F. ![image](https://user-images.githubusercontent.com/9206569/94927540-0b810400-0488-11eb-995d-0eb9ac4e9faf.png). This started this morning. I assume this will eventually be fixed, but as a workaround to make the documentation usable it might be worth changing all the internal links to point to root.cern.ch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6540:133,deployability,contain,contains,133,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:402,deployability,updat,updated,402,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:90,energy efficiency,current,current,90,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:6,integrability,messag,message,6,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:104,integrability,messag,message,104,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:285,integrability,sub,submit,285,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:385,integrability,messag,message,385,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:6,interoperability,messag,message,6,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:104,interoperability,messag,message,104,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:349,interoperability,share,share,349,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:385,interoperability,messag,message,385,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:402,safety,updat,updated,402,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:402,security,updat,updated,402,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:160,usability,help,help,160,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:423,usability,user,users,423,Crash message should point to github; ## Explain what you would like to see improved. The current crash message of root applications contains. ```. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs. ```. ## Optional: share how it could be improved. The message could be updated to point the users to https://github.com/root-project/root. ## To Reproduce. Crash root in any way. ## Setup. Any.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/pull/6541:50,integrability,messag,message,50,Change http to https; Change http to https in gdb message,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6541
https://github.com/root-project/root/pull/6541:50,interoperability,messag,message,50,Change http to https; Change http to https in gdb message,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6541
https://github.com/root-project/root/pull/6542:324,availability,operat,operator,324,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:70,deployability,version,version,70,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:13,integrability,interfac,interface,13,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:70,integrability,version,version,70,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:94,integrability,interfac,interface,94,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:13,interoperability,interfac,interface,13,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:94,interoperability,interfac,interface,94,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:13,modifiability,interfac,interface,13,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:70,modifiability,version,version,70,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:94,modifiability,interfac,interface,94,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:458,safety,except,exceptions,458,"[RF] Improve interface of RooArgSet/RooArgList; This is the non-draft version of #6323 . - An interface that had a lot of manually-crafted constructor overloads is replaced by a variadic template. (Previously, you could e.g. construct with N objects, but not with N+1, because the overload didn't exist. - An ambiguity for `operator[]` is solved. - A constructor overload from iterators is added. - A broken cast is solved, because windows was throwing RTTI exceptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6543:0,safety,Avoid,Avoid,0,Avoid null pointer dereference; Avoid null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6543:32,safety,Avoid,Avoid,32,Avoid null pointer dereference; Avoid null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6544:40,energy efficiency,Draw,DrawClassObject,40,Avoid null pointer dereference in TPad::DrawClassObject; Avoid null pointer dereference in TPad::DrawClassObject. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6544
https://github.com/root-project/root/pull/6544:97,energy efficiency,Draw,DrawClassObject,97,Avoid null pointer dereference in TPad::DrawClassObject; Avoid null pointer dereference in TPad::DrawClassObject. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6544
https://github.com/root-project/root/pull/6544:0,safety,Avoid,Avoid,0,Avoid null pointer dereference in TPad::DrawClassObject; Avoid null pointer dereference in TPad::DrawClassObject. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6544
https://github.com/root-project/root/pull/6544:57,safety,Avoid,Avoid,57,Avoid null pointer dereference in TPad::DrawClassObject; Avoid null pointer dereference in TPad::DrawClassObject. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6544
https://github.com/root-project/root/pull/6545:0,safety,Avoid,Avoid,0,Avoid null pointer dereference in TPad::CopyBackgroundPixmaps; Avoid null pointer dereference in TPad::CopyBackgroundPixmaps. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6545
https://github.com/root-project/root/pull/6545:63,safety,Avoid,Avoid,63,Avoid null pointer dereference in TPad::CopyBackgroundPixmaps; Avoid null pointer dereference in TPad::CopyBackgroundPixmaps. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6545
https://github.com/root-project/root/pull/6546:0,safety,Avoid,Avoid,0,Avoid null pointer dereference in TPad::SetCrosshair; Avoid null pointer dereference in TPad::SetCrosshair. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6546
https://github.com/root-project/root/pull/6546:54,safety,Avoid,Avoid,54,Avoid null pointer dereference in TPad::SetCrosshair; Avoid null pointer dereference in TPad::SetCrosshair. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6546
https://github.com/root-project/root/pull/6547:6,deployability,Updat,Update,6,"[bug] Update TVirtualX.cxx to fix 6483; New: This should fix #6483. Old:. This will partially fix #6483. The full fix should include . ```. if (fDefaultFont) gval.fFont = fDefaultFont->GetFontHandle();. ... if(fDocPropFont) gval.fFont = fDocPropFont->GetFontHand. ... . if (fStatusFont) gval.fFont = fStatusFont->GetFontHandle();. ```. in the TGResourcePool.cxx. However, I don't know if that makes sense, so I don't include it. Tag @couet @lmoneta .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:6,safety,Updat,Update,6,"[bug] Update TVirtualX.cxx to fix 6483; New: This should fix #6483. Old:. This will partially fix #6483. The full fix should include . ```. if (fDefaultFont) gval.fFont = fDefaultFont->GetFontHandle();. ... if(fDocPropFont) gval.fFont = fDocPropFont->GetFontHand. ... . if (fStatusFont) gval.fFont = fStatusFont->GetFontHandle();. ```. in the TGResourcePool.cxx. However, I don't know if that makes sense, so I don't include it. Tag @couet @lmoneta .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:6,security,Updat,Update,6,"[bug] Update TVirtualX.cxx to fix 6483; New: This should fix #6483. Old:. This will partially fix #6483. The full fix should include . ```. if (fDefaultFont) gval.fFont = fDefaultFont->GetFontHandle();. ... if(fDocPropFont) gval.fFont = fDocPropFont->GetFontHand. ... . if (fStatusFont) gval.fFont = fStatusFont->GetFontHandle();. ```. in the TGResourcePool.cxx. However, I don't know if that makes sense, so I don't include it. Tag @couet @lmoneta .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6549:18,safety,test,test,18,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:104,safety,compl,complex,104,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:79,security,access,access,79,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:104,security,compl,complex,104,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:289,security,access,access,289,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:13,testability,unit,unit,13,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:18,testability,test,test,18,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:163,usability,Custom,CustomStruct,163,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:191,usability,Custom,CustomStruct,191,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6549:268,usability,efficien,efficient,268,"[ntuple] add unit test for projection of inner collection; Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6549
https://github.com/root-project/root/pull/6550:20,modifiability,refact,refactoring,20,[DF] Simplification/refactoring of dataframe_regression gtests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6550
https://github.com/root-project/root/pull/6550:20,performance,refactor,refactoring,20,[DF] Simplification/refactoring of dataframe_regression gtests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6550
https://github.com/root-project/root/pull/6550:5,testability,Simpl,Simplification,5,[DF] Simplification/refactoring of dataframe_regression gtests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6550
https://github.com/root-project/root/pull/6550:5,usability,Simpl,Simplification,5,[DF] Simplification/refactoring of dataframe_regression gtests;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6550
https://github.com/root-project/root/pull/6551:221,availability,error,error,221,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:436,availability,error,error,436,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:259,deployability,build,build,259,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:293,deployability,build,build,293,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:299,deployability,build,build,299,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:362,deployability,build,build,362,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:396,deployability,build,build,396,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:402,deployability,build,build,402,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:564,deployability,build,build,564,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:598,deployability,build,build,598,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:604,deployability,build,build,604,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:813,deployability,build,build,813,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:847,deployability,build,build,847,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:853,deployability,build,build,853,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:126,interoperability,platform,platforms,126,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:221,performance,error,error,221,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:436,performance,error,error,436,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:221,safety,error,error,221,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:436,safety,error,error,436,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:221,usability,error,error,221,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:436,usability,error,error,436,"Fix potential issue with gStipples bits on Windows with latest LLVM; Use the same gStipples bitmap bits on Windows than other platforms, and invert (flip) the bits before using them. This should fix the following kind of error:. ```. In file included from C:/build/workspace/root-pullrequests-build/build/include/TGLPadUtils.h:18:. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h(168,7): error G9F8B699F: constant expression evaluates to -171 which cannot be narrowed to type 'unsigned char' [-Wc++11-narrowing] [C:\build\workspace\root-pullrequests-build\build\graf3d\gl\G__RGL.vcxproj]. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. [2020-10-05T07:25:50.968Z] C:/build/workspace/root-pullrequests-build/build/include/RStipples.h:168:7: note: insert an explicit cast to silence this issue. [2020-10-05T07:25:50.968Z] ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55, ~0xaa, ~0xaa, ~0x55, ~0x55,. [2020-10-05T07:25:50.968Z] ^~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/issues/6552:1708,availability,slo,slot,1708,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1868,availability,Operat,Operating,1868,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:48,deployability,fail,fails,48,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:564,deployability,fail,fails,564,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:641,deployability,modul,module,641,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:697,deployability,modul,module,697,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1156,deployability,depend,depend,1156,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1425,deployability,build,build,1425,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1672,deployability,fail,fails,1672,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1745,deployability,version,versions,1745,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1846,deployability,version,version,1846,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1156,integrability,depend,depend,1156,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1745,integrability,version,versions,1745,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1846,integrability,version,version,1846,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:2150,interoperability,specif,specific,2150,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:641,modifiability,modul,module,641,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:697,modifiability,modul,module,697,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1156,modifiability,depend,depend,1156,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1745,modifiability,version,versions,1745,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1846,modifiability,version,version,1846,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:48,reliability,fail,fails,48,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:564,reliability,fail,fails,564,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1672,reliability,fail,fails,1672,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1708,reliability,slo,slot,1708,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:641,safety,modul,module,641,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:697,safety,modul,module,697,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1156,safety,depend,depend,1156,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1379,safety,input,input,1379,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1656,safety,test,test,1656,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1156,testability,depend,depend,1156,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1656,testability,test,test,1656,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1956,testability,context,context,1956,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1985,testability,context,context,1985,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:485,usability,clear,clear,485,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:533,usability,behavi,behavior,533,"PyROOT (de)serialization using pickle (or dill) fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1044,usability,behavi,behavior,1044,"fails without pre-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1062,usability,clear,clear,1062,"-import of ROOT for new PyROOT ; [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1234,usability,behavi,behavior,1234,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1379,usability,input,input,1379,"es?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ## Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. . If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. . It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`. . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ). ## Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) . . ## Setup. 1. ROOT version 6.22-6.23. 2. Operating system lxplus . 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context. <!--. Add any other context about the problem here. -->. It could have something common with [issue#6370](https://github.com/root-project/root/issues/6370), but those issue is `pyton3`-specific, while this one for `python2.7+new PyROOT`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6553:80,deployability,version,version,80,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:158,deployability,version,version,158,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:62,energy efficiency,Current,Currently,62,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:80,integrability,version,version,80,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:158,integrability,version,version,158,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:284,interoperability,distribut,distributions,284,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:340,interoperability,compatib,compatible,340,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:80,modifiability,version,version,80,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:158,modifiability,version,version,158,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:15,usability,support,support,15,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:108,usability,support,supported,108,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/issues/6553:235,usability,support,supported,235,[TMVA] Provide support in MethodPyKeras for tensorflow.keras; Currently in ROOT version 6.22 >Tensorflow is supported but with a standalone keras (with Keras version >= 2.3). The keras shipped with tensorflow (tf.keras) is instead not supported. . It is now needed since LCG software distributions (from LCG 98) have Keras 2.2 which is not compatible,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6553
https://github.com/root-project/root/pull/6554:40,performance,memor,memory,40,[PyROOT][RVec][Doc] Add doxygen docs of memory adoption features;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6554
https://github.com/root-project/root/pull/6554:40,usability,memor,memory,40,[PyROOT][RVec][Doc] Add doxygen docs of memory adoption features;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6554
https://github.com/root-project/root/pull/6555:33,performance,cach,cache,33,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their cache RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6555
https://github.com/root-project/root/pull/6555:143,performance,cach,cache,143,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their cache RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6555
https://github.com/root-project/root/pull/6555:331,performance,cach,cache,331,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their cache RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6555
https://github.com/root-project/root/pull/6555:354,performance,cach,cache,354,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their cache RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6555
https://github.com/root-project/root/issues/6556:161,deployability,upgrad,upgraded,161,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:520,energy efficiency,Draw,Draw,520,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:949,energy efficiency,Cool,Cooling,949,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1094,energy efficiency,Cool,Cooling,1094,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1253,integrability,sub,subtractions,1253,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:161,modifiability,upgrad,upgraded,161,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:12,reliability,doe,doesn,12,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:593,reliability,Doe,Does,593,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:175,safety,detect,detector,175,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:175,security,detect,detector,175,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:417,security,session,session,417,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1071,security,ident,identified,1071,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1112,testability,simpl,simple,1112,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1190,testability,simpl,simple,1190,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:764,usability,navigat,navigating,764,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:811,usability,behavi,behavior,811,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1112,usability,simpl,simple,1112,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1190,usability,simpl,simple,1190,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:1327,usability,behavi,behavior,1327,"gGeoManager doesn't find overlaps correctly; Dear ROOT experts,. When using [DD4hep](https://dd4hep.web.cern.ch/dd4hep/) to try and describe the geometry of the upgraded LHCb detector geometry, we've noticed overlapping geometry that's not picked up by running `gGeoManager::CheckOverlaps`. The geometry is attached as ROOT files (Geometry.root and Geometry_ClampInModule.root). To view the geometry we run in a ROOT session (or as a macro). ```c++. TGeoManager::Import(""Geometry.root""). gGeoManager->GetMasterVolume()->Draw(""ogl""). ```. and then running `gGeoManager->CheckOverlaps(0.00001)` Does not find the overlap between the shapes `pvCoolingClamp` and `pvPipeBottom` (The list of shapes can be found by opening a `TBrowser` after importing the geometry and navigating the 'default' folder). The expected behavior here is that overlaps would be found between these shapes as one passes straight through the other. I have also tried moving the Cooling Clamp to the top of the shape and trying again there (see Geometry_ClampInModule.root) and here overlaps are only identified between the Cooling Clamp and simple shapes (e.g. Chips, glue) but not `lvDet` or `lvModule` itself. These 'simple shapes' refer to just cuboids/cylinders/etc rather than subtractions of shapes which is how the others are produced. The expected behavior here is that overlaps would be found between each of these visibly overlapping shapes. Do you know what may be causing this or how it could be fixed? My setup typically is done by running dd4hep `geoDisplay` however with the attached root files it can be reproduced using any recent LCG view (I used 96b). Geometry ROOT files: [GeometryFiles.zip](https://github.com/root-project/root/files/5328354/GeometryFiles.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6557:86,availability,recov,recovery,86,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:740,availability,state,states,740,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1348,availability,avail,available,1348," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1722,availability,down,down,1722," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1788,availability,slo,slowly,1788," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1884,availability,error,errors,1884," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:86,deployability,recov,recovery,86,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:527,deployability,Continu,Continue,527,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:795,deployability,compos,composite,795,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:870,deployability,Continu,Continue,870,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:997,deployability,updat,updateRooSimultaneous,997,"as for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless special",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,deployability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1231,deployability,version,version,1231,"or RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,deployability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,deployability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:455,energy efficiency,optim,optimisation,455,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:588,energy efficiency,Profil,Profile,588,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:600,energy efficiency,optim,optimise,600,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:39,integrability,batch,batch,39,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:123,integrability,batch,batch,123,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:343,integrability,batch,batch,343,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:479,integrability,batch,batch,479,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:547,integrability,interfac,interface,547,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:613,integrability,Batch,Batch,613,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:619,integrability,interfac,interface,619,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:715,integrability,batch,batch,715,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:740,integrability,state,states,740,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:761,integrability,batch,batch,761,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:819,integrability,compon,components,819,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,integrability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1088,integrability,interfac,interface,1088,"y from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1171,integrability,event,events,1171,"ll/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1231,integrability,version,version,1231,"or RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,integrability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,integrability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1669,integrability,topic,topic,1669," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1685,integrability,messag,message,1685," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1764,integrability,interfac,interface,1764," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1986,integrability,event,events,1986," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2168,integrability,batch,batch,2168," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2174,integrability,interfac,interface,2174," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2228,integrability,event,events,2228," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2287,integrability,event,events,2287," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:547,interoperability,interfac,interface,547,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:619,interoperability,interfac,interface,619,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:646,interoperability,prox,proxyList,646,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:819,interoperability,compon,components,819,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,interoperability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1088,interoperability,interfac,interface,1088,"y from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,interoperability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,interoperability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1685,interoperability,messag,message,1685," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1764,interoperability,interfac,interface,1764," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2174,interoperability,interfac,interface,2174," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:320,modifiability,interm,intermediate,320,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:547,modifiability,interfac,interface,547,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:619,modifiability,interfac,interface,619,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:795,modifiability,compos,composite,795,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:819,modifiability,compon,components,819,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,modifiability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1088,modifiability,interfac,interface,1088,"y from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1231,modifiability,version,version,1231,"or RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,modifiability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,modifiability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1764,modifiability,interfac,interface,1764," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1847,modifiability,paramet,parameters,1847," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2174,modifiability,interfac,interface,2174," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:39,performance,batch,batch,39,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:123,performance,batch,batch,123,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:343,performance,batch,batch,343,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:479,performance,batch,batch,479,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:588,performance,Profil,Profile,588,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:613,performance,Batch,Batch,613,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:715,performance,batch,batch,715,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:761,performance,batch,batch,761,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1884,performance,error,errors,1884," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2129,performance,time,times,2129," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:2168,performance,batch,batch,2168," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:86,reliability,recov,recovery,86,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,reliability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1185,reliability,doe,doesn,1185,"] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,reliability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1348,reliability,availab,available,1348," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,reliability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1590,reliability,Poisson,Poisson,1590," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1788,reliability,slo,slowly,1788," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1899,reliability,stabil,stabilise,1899," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,safety,test,test,59,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:86,safety,recov,recovery,86,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:997,safety,updat,updateRooSimultaneous,997,"as for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless special",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1348,safety,avail,available,1348," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1864,safety,prevent,prevents,1864," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1884,safety,error,errors,1884," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:86,security,recov,recovery,86,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:997,security,updat,updateRooSimultaneous,997,"as for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless special",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,security,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,security,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1348,security,availab,available,1348," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,security,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1864,security,preven,prevents,1864," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,testability,test,test,59,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1047,testability,integr,integration,1047," Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, Roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1312,testability,integr,integrals,1312,"ll intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, an",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1386,testability,integr,integrator,1386," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1716,testability,trace,trace,1716," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:310,usability,clear,clear,310,"[RF] Ideas for RooFit; - [ ] Implement batch eval for Chi2 test stat. - [x] Implement recovery from disallowed regions for batch eval (https://github.com/root-project/root/pull/6401). - [x] Implement getWeightBatch() and getBatches() for RooDataHist. - [ ] Implement getBatch for RooTreeDataStore? - [ ] Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:1884,usability,error,errors,1884," in batch fits between fit cycles. Only the ones that changed. - [ ] Disable recalculateCache etc belonging to Lvl2 optimisation. - [ ] Use batch evaluation & inverted CDF for toys. - [ ] Continue to improve interface with variadic templates. - [ ] Profile and optimise new Batch interface. - [ ] Modernise proxyList member of RooSimultaneous. - [ ] Investigate if retrieving batch data with category states is better for batch evaluations. (vs. splitting composite datasets into components, and creating one NLL for each.). - [ ] Continue modernisation of RooSimultaneous. Requires rebasing and fixing an index bug in https://github.com/hageboeck/root/tree/updateRooSimultaneous. - [ ] Implement analytical integration of RooJohnson. - [ ] Correct interface of RooAbsData and derived classes to use e.g. `std::size_t` for indexing events. `int` doesn't make sense. - [ ] Always have a debug version of RooFit around with `-DROOFIT_CHECK_CACHED_VALUES`. - [ ] Use analytic integrals in RooBinSamplingPdf when available. - [ ] Check that different integrator settings are honoured in RooBinSamplingPdf. - [ ] https://sft.its.cern.ch/jira/browse/ROOT-8304. - [ ] Implement evaluateSpan() in classes relevant for HistFactory fits. - [ ] Throw Gaussian & Poisson constraints into dedicated fast class. - [ ] Switch on FastEvaluations topic in RooFit message streams, and use it to trace down PDFs that don't implement the faster interface. - [ ] #7210, slowly augment PDFs with checks of the definition range of parameters. This prevents evaluation errors and can stabilise fits. - [ ] #7217, pythonisations for RooFit. - [ ] Vectorized generation of events. Unless specialised generator functions are implemented, RooFit employs accept/reject sampling. Since this has to evaluate the PDF many times, one could think about using the batch interface to generate e.g. 2x the requested number of events, and do accept/reject on those. Repeat until enough events have been generated, and throw away the rest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/pull/6558:111,testability,simpl,simply,111,Make GetEntriesSerialized actually work with destructive serialization; TBulkRead::GetEntriesSerialized should simply work with destructive. serialization. Not sure why the check is there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:111,usability,simpl,simply,111,Make GetEntriesSerialized actually work with destructive serialization; TBulkRead::GetEntriesSerialized should simply work with destructive. serialization. Not sure why the check is there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6559:291,energy efficiency,optim,optimized,291,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:37,integrability,repositor,repository,37,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:37,interoperability,repositor,repository,37,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:8,modifiability,scal,scalabity,8,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:91,modifiability,scal,scaling,91,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:594,modifiability,scal,scalar,594,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:8,performance,scalab,scalabity,8,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:231,performance,I/O,I/O,231,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:291,performance,optimiz,optimized,291,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:333,performance,I/O,I/O,333,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:357,performance,time,times,357,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:601,performance,perform,performance,601,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:484,safety,compl,complete,484,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:484,security,compl,complete,484,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:601,usability,perform,performance,601,"Improve scalabity of TClass's object repository; Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6560:18,deployability,build,build,18,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:262,deployability,releas,release,262,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:508,deployability,infrastructur,infrastructure,508,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:594,deployability,build,builds,594,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:407,testability,assert,asserts,407,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:333,usability,behavi,behaviour,333,"[cmake] Introduce build option -Dasserts; The flag is enabled by default for CMAKE_BUILD_TYPE=Debug and dev=ON and. has the effect that the -DNDEBUG flag is **not** attached to the. CMAKE_C_FLAGS and CMAKE_CXX_FLAGS. Fixes #6448. I'll also add a sentence to the release notes before merging something. However, note that the default behaviour of ROOT has only changed for the `dev=ON` option, which has now asserts enabled. Do we like this or shall I remove it from the dev mode? I can also take care of the infrastructure (aka rootspi) so that we actually define that flag for all interesting builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6561:0,deployability,Updat,Update,0,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:119,deployability,observ,observed,119,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:0,safety,Updat,Update,0,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:26,safety,Prevent,Prevent,26,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:34,safety,unsaf,unsafe,34,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:0,security,Updat,Update,0,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:26,security,Preven,Prevent,26,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:119,testability,observ,observed,119,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:93,usability,behavi,behavior,93,"Update TGProgressBar.cxx; Prevent unsafe shift that can cause FPE. Tag @couet . Note: no bad behavior of this code was observed, so this is ""an improvement"" rather than ""bug fix"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/issues/6563:5,availability,failur,failures,5,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:46,availability,failur,failures,46,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:134,availability,servic,services,134,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:988,availability,Error,Error,988,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1482,availability,Error,Error,1482,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1926,availability,Error,Error,1926,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2038,availability,error,error,2038,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:5,deployability,fail,failures,5,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:46,deployability,fail,failures,46,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:70,deployability,build,builds,70,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:92,deployability,build,builds,92,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:134,deployability,servic,services,134,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:210,deployability,patch,patches,210,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:349,deployability,version,versions,349,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:358,deployability,instal,installed,358,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:462,deployability,version,versions,462,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:498,deployability,stack,stacktraces,498,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:564,deployability,build,build,564,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:725,deployability,build,build,725,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:769,deployability,build,build,769,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:841,deployability,Version,Versions,841,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:896,deployability,build,build,896,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:940,deployability,build,build,940,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1045,deployability,Fail,Failed,1045,"ilures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1084,deployability,build,build,1084,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1128,deployability,build,build,1128,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1219,deployability,build,build,1219,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1263,deployability,build,build,1263,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1335,deployability,Version,Versions,1335,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1390,deployability,build,build,1390,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1434,deployability,build,build,1434,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1539,deployability,Fail,Failed,1539,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1578,deployability,build,build,1578,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1622,deployability,build,build,1622,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1951,deployability,build,build,1951,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1995,deployability,build,build,1995,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:687,energy efficiency,load,loadLibrary,687,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:808,energy efficiency,load,loaded,808,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1055,energy efficiency,load,load,1055,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1181,energy efficiency,load,loadLibrary,1181,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1302,energy efficiency,load,loaded,1302,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1549,energy efficiency,load,load,1549,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1881,energy efficiency,load,load,1881,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:134,integrability,servic,services,134,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:349,integrability,version,versions,349,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:462,integrability,version,versions,462,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:841,integrability,Version,Versions,841,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1335,integrability,Version,Versions,1335,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1763,integrability,interfac,interface,1763,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2027,integrability,messag,message,2027,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1763,interoperability,interfac,interface,1763,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1904,interoperability,share,shared,1904,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2027,interoperability,messag,message,2027,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:134,modifiability,servic,services,134,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:349,modifiability,version,versions,349,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:462,modifiability,version,versions,462,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:841,modifiability,Version,Versions,841,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1335,modifiability,Version,Versions,1335,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1763,modifiability,interfac,interface,1763,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:5,performance,failur,failures,5,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:46,performance,failur,failures,46,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:484,performance,time,times,484,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:687,performance,load,loadLibrary,687,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:808,performance,load,loaded,808,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:988,performance,Error,Error,988,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1055,performance,load,load,1055,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1181,performance,load,loadLibrary,1181,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1302,performance,load,loaded,1302,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1482,performance,Error,Error,1482,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1549,performance,load,load,1549,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1881,performance,load,load,1881,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1926,performance,Error,Error,1926,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2038,performance,error,error,2038,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:5,reliability,fail,failures,5,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:46,reliability,fail,failures,46,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1045,reliability,Fail,Failed,1045,"ilures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1539,reliability,Fail,Failed,1539,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:0,safety,Test,Test,0,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:210,safety,patch,patches,210,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:269,safety,test,testReport,269,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:988,safety,Error,Error,988,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1482,safety,Error,Error,1482,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1926,safety,Error,Error,1926,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2038,safety,error,error,2038,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:210,security,patch,patches,210,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:0,testability,Test,Test,0,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:269,testability,test,testReport,269,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:549,usability,User,Users,549,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:710,usability,User,Users,710,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:881,usability,User,Users,881,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:988,usability,Error,Error,988,"Test failures on MacOS with Xcode 12; We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1069,usability,User,Users,1069,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1204,usability,User,Users,1204,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1375,usability,User,Users,1375,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1482,usability,Error,Error,1482,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1563,usability,User,Users,1563,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1926,usability,Error,Error,1926,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:1936,usability,User,Users,1936,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:2038,usability,error,error,2038,"n our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```. Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C... cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. Reason: image not found. Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so. IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]! You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(). Maybe you need to load the corresponding shared library? CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):. error code: 1. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6565:234,usability,user,user-images,234,"RVec docs do not show DOI banner; If you go to https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html, you'll see that the DOI banner is not shown. I'll attach a screenshot below. ![Screenshot from 2020-10-06 15-09-59](https://user-images.githubusercontent.com/6951222/95205799-2c2dbe80-07e6-11eb-9144-e7765d3f5963.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6565
https://github.com/root-project/root/issues/6566:350,integrability,asynchron,asynchronously,350,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:511,interoperability,bind,bindings,511,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:511,modifiability,bind,bindings,511,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:292,performance,content,content,292,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:350,performance,asynch,asynchronously,350,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:258,security,access,accesses,258,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:405,security,access,access,405,"TListOf{Functions,DataMembers}::fIds might need thread protection; E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/pull/6568:93,deployability,version,version,93,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:285,deployability,version,version,285,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:93,integrability,version,version,93,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:285,integrability,version,version,285,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:93,modifiability,version,version,93,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:285,modifiability,version,version,285,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:11,usability,support,support,11,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/pull/6568:54,usability,support,support,54,[TMVA] Add support for tf.keras in MethodPyKeras; Add support in MethodPyKeras for the Keras version shipped with tensorflow 2 (tf.keras). At the moment default is still using keras with tensorflow backend. - tf.keras can be enabled with the option `tf.keras=True`. . - If not a keras version >= 2.3 is not found and tensorflow 2 is used then tf.keras is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6568
https://github.com/root-project/root/issues/6569:0,deployability,Build,Build,0,Build option exceptions is broken; The option can be found here: https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:120,deployability,modul,modules,120,Build option exceptions is broken; The option can be found here: https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:120,modifiability,modul,modules,120,Build option exceptions is broken; The option can be found here: https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:13,safety,except,exceptions,13,Build option exceptions is broken; The option can be found here: https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:120,safety,modul,modules,120,Build option exceptions is broken; The option can be found here: https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L120,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/pull/6570:609,deployability,Updat,Update,609,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:394,performance,I/O,I/O,394,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:232,reliability,doe,doesn,232,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:313,reliability,doe,doesn,313,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:367,reliability,doe,doesn,367,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:712,reliability,doe,doesn,712,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,safety,Avoid,Avoid,0,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:279,safety,Avoid,Avoid,279,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:609,safety,Updat,Update,609,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:776,safety,test,test,776,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:609,security,Updat,Update,609,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:776,testability,test,test,776,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:114,usability,behavi,behaviour,114,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:346,usability,user,user,346,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:683,usability,user,users,683,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:733,usability,behavi,behaviour,733,"Avoid calling TTree::ChangeFile if file is TMemFile; Fixes #6523 . As per comments by Philippe and Guilherme, the behaviour triggered by `TTree::Fill` to change the associated TFile when reaching a size greater than `fgMaxTreeSize` doesn't fit within the scope of TBufferMerger. Avoid calling `TTree::ChangeFile` doesn't change anything from the user perspective and doesn't interfere with the I/O mechanism of TBufferMerger (and thus of the multithreaded RDF Snapshot as well). . While fixing the above issue I found another one that may be related to this. Meanwhile the draft can be discussed. TODO. - [x] Update docs in TTree::Fill, TTree::ChangeFile and TBufferMerger. Tell the users that TBufferMergerFile doesn't trigger this behaviour. - [x] Include the reproducer as test",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6571:318,interoperability,conflict,conflict,318,"[cling] DefinitionShadower: allow shadowing of non-user-defined declarations; These changes allow the `DefinitionShadower` to shadow declarations whose first definition was possibly in a system header. As discussed on ROOT's meeting last Monday, this should solve the problem of declaring a variable `data` that might conflict with `std::data` (by allowing `std::data` to be shadowed). Additionally, this PR also fixes the handling of variable templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/pull/6571:291,modifiability,variab,variable,291,"[cling] DefinitionShadower: allow shadowing of non-user-defined declarations; These changes allow the `DefinitionShadower` to shadow declarations whose first definition was possibly in a system header. As discussed on ROOT's meeting last Monday, this should solve the problem of declaring a variable `data` that might conflict with `std::data` (by allowing `std::data` to be shadowed). Additionally, this PR also fixes the handling of variable templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/pull/6571:435,modifiability,variab,variable,435,"[cling] DefinitionShadower: allow shadowing of non-user-defined declarations; These changes allow the `DefinitionShadower` to shadow declarations whose first definition was possibly in a system header. As discussed on ROOT's meeting last Monday, this should solve the problem of declaring a variable `data` that might conflict with `std::data` (by allowing `std::data` to be shadowed). Additionally, this PR also fixes the handling of variable templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/pull/6571:51,usability,user,user-defined,51,"[cling] DefinitionShadower: allow shadowing of non-user-defined declarations; These changes allow the `DefinitionShadower` to shadow declarations whose first definition was possibly in a system header. As discussed on ROOT's meeting last Monday, this should solve the problem of declaring a variable `data` that might conflict with `std::data` (by allowing `std::data` to be shadowed). Additionally, this PR also fixes the handling of variable templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/pull/6572:43,deployability,build,build,43,[cmake] Also print compiler flags from the build type;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6572
https://github.com/root-project/root/pull/6573:122,deployability,build,build,122,[cmake] Force the ROOT defaults for CMAKE_CXX_FLAGS_${BUILD_TYPE}; Forcing the ROOT defaults so they are picked up by the build system. This should fix https://github.com/root-project/root/issues/6575 and https://github.com/root-project/root/issues/6574.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6573
https://github.com/root-project/root/issues/6574:190,deployability,modul,modules,190,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:466,deployability,build,builds,466,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:500,energy efficiency,current,currently,500,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:190,modifiability,modul,modules,190,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:264,modifiability,variab,variable,264,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:562,modifiability,variab,variable,562,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:313,performance,cach,cache,313,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6574:190,safety,modul,modules,190,"ROOT defaults for CMAKE_C[XX]_FLAGS_${BUILD_TYPE} are not picked up; We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6575:245,availability,servic,services,245,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:168,deployability,build,builds,168,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:245,deployability,servic,services,245,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1915,deployability,build,build,1915," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2027,deployability,Releas,Release,2027," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2101,deployability,build,build,2101," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:245,integrability,servic,services,245,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2496,integrability,repositor,repository,2496," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2496,interoperability,repositor,repository,2496," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:245,modifiability,servic,services,245,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:474,performance,time,timeout,474,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:214,safety,test,tests,214,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:310,safety,test,testReport,310,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:474,safety,timeout,timeout,474,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:511,safety,test,test-root,511,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1490,safety,TEST,TEST,1490,"0s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roott",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1869,safety,input,input,1869," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:214,testability,test,tests,214,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:310,testability,test,testReport,310,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:511,testability,test,test-root,511,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1490,testability,TEST,TEST,1490,"0s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roott",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2133,testability,context,context,2133," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2162,testability,context,context,2162," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:2211,testability,understand,understand,2211," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:84,usability,clear,clear,84,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:132,usability,behavi,behavior,132,"The new -Dasserts=ON flag breaks standalone roottest; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Our nightly conda builds are affected. An example of the broken tests is [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/183/testReport/junit/projectroot.cling/array/roottest_cling_array_runarray1/). The relevant part of the output:. ```. cd /test_job/roottest_build/cling/array. /usr/bin/timeout -s USR2 270s /opt/conda/envs/test-root/bin/root -e '#define NDEBUG' -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1597,usability,command,command,1597,"'#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1724,usability,behavi,behavior,1724," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:1869,usability,input,input,1869," ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/test_job/roottest_build/cling/array"",true)' -e 'gSystem->AddDynamicPath(""/test_job/roottest_build/cling/array"")' -e 'gROOT->SetMacroPath(""/test_job/roottest/cling/array"")' -e 'gInterpreter->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -e 'gSystem->AddIncludePath(""-I/test_job/roottest_build/cling/array"")' -q -l -b /test_job/roottest/cling/array/runarray1test.C. -- BEGIN TEST OUTPUT --. ROOT_cli_0:1:9: warning: 'NDEBUG' macro redefined [-Wmacro-redefined]. #define NDEBUG. ^. <command line>:1:9: note: previous definition is here. #define NDEBUG 1. ^. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. To reproduce it's sufficient to compile ROOT with `-DCMAKE_BUILD_TYPE=Release -Droottest=OFF` and then compile roottest separately against this build of ROOT. . ### Additional context. <!--. Add any other context about the problem here. -->. As far as I understand, that ` -e '#define NDEBUG'` in the invocation of `root.exe` used by roottest was not there before, and it's what's causing the issue. roottest takes the `-e '#define ...'` arguments from cmake's `COMPILE_DEFINITIONS` (a quick `git grep COMPILE_DEFINITIONS` in the roottest repository shows where this happens). I could not figure out where the _other_ definition of `NDEBUG` comes from.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/pull/6576:343,deployability,fail,fails,343,"[Bugfix] Fix of crash in TCanvas as suggested by Olivier Couet; This fixes a crash in the following code:. ```. #include <TCanvas.h>. #include <TText.h>. #include <TPad.h>. #include <fenv.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. delete t;. delete c;. delete C;. return 0;. }. ``` . that shoud be compiled to an executable. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:396,energy efficiency,Draw,Draw,396,"[Bugfix] Fix of crash in TCanvas as suggested by Olivier Couet; This fixes a crash in the following code:. ```. #include <TCanvas.h>. #include <TText.h>. #include <TPad.h>. #include <fenv.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. delete t;. delete c;. delete C;. return 0;. }. ``` . that shoud be compiled to an executable. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:343,reliability,fail,fails,343,"[Bugfix] Fix of crash in TCanvas as suggested by Olivier Couet; This fixes a crash in the following code:. ```. #include <TCanvas.h>. #include <TText.h>. #include <TPad.h>. #include <fenv.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. delete t;. delete c;. delete C;. return 0;. }. ``` . that shoud be compiled to an executable. Tag @couet .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/issues/6577:72,energy efficiency,current,current,72,"Use CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT to overwrite cmake defaults; The current setup of the defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}` are not picked up (also see https://github.com/root-project/root/issues/6574). To change the defaults for ROOT **and** allowing users to set their own `CMAKE_CXX_FLAGS_${BUILD_TYPE}` flags, the definition of the ROOT specific defaults have to move before we invoke `project(ROOT)`. Geant4 has a proper implementation of such a mechanic [here](https://github.com/Geant4/geant4/blob/67ba86d073ec6366df0de75a0f5b5d57920d0b7e/CMakeLists.txt#L24-L32). The proper approach is overwriting `CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT` (note the `_INIT`) before invoking `project(ROOT)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:355,interoperability,specif,specific,355,"Use CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT to overwrite cmake defaults; The current setup of the defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}` are not picked up (also see https://github.com/root-project/root/issues/6574). To change the defaults for ROOT **and** allowing users to set their own `CMAKE_CXX_FLAGS_${BUILD_TYPE}` flags, the definition of the ROOT specific defaults have to move before we invoke `project(ROOT)`. Geant4 has a proper implementation of such a mechanic [here](https://github.com/Geant4/geant4/blob/67ba86d073ec6366df0de75a0f5b5d57920d0b7e/CMakeLists.txt#L24-L32). The proper approach is overwriting `CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT` (note the `_INIT`) before invoking `project(ROOT)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:266,usability,user,users,266,"Use CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT to overwrite cmake defaults; The current setup of the defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}` are not picked up (also see https://github.com/root-project/root/issues/6574). To change the defaults for ROOT **and** allowing users to set their own `CMAKE_CXX_FLAGS_${BUILD_TYPE}` flags, the definition of the ROOT specific defaults have to move before we invoke `project(ROOT)`. Geant4 has a proper implementation of such a mechanic [here](https://github.com/Geant4/geant4/blob/67ba86d073ec6366df0de75a0f5b5d57920d0b7e/CMakeLists.txt#L24-L32). The proper approach is overwriting `CMAKE_CXX_FLAGS_${BUILD_TYPE}_INIT` (note the `_INIT`) before invoking `project(ROOT)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6578:158,availability,error,error,158,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2395,availability,Operat,Operating,2395,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2470,availability,down,download,2470,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:677,deployability,modul,module,677,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1549,deployability,build,build,1549,", 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2383,deployability,version,version,2383,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2452,deployability,instal,install,2452,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1933,integrability,pub,public,1933,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1957,integrability,pub,public,1957,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2383,integrability,version,version,2383,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:117,modifiability,inherit,inherits,117,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:677,modifiability,modul,module,677,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:2383,modifiability,version,version,2383,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:158,performance,error,error,158,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:860,reliability,doe,does,860,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1771,reliability,doe,does,1771,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1867,reliability,doe,does,1867,". ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (6.23/01), Fedora31, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:158,safety,error,error,158,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:677,safety,modul,module,677,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1503,safety,input,input,1503,"). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:590,testability,Trace,Traceback,590,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:158,usability,error,error,158,"Using declaration of TGMainFrame constructor not taken into account; . ### Describe the bug. In Python, when a class inherits from `TGMainFrame`, there is an error when trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1163,usability,behavi,behavior,1163,"n trying to invoke the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m :",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1181,usability,clear,clear,1181,"e the `TGMainFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python. import ROOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1358,usability,behavi,behavior,1358,"OOT. class pMainFrame( ROOT.TGMainFrame ):. def __init__( self, parent, width, height ):. ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6578:1503,usability,input,input,1503,"). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). ```. This prints:. ```. Traceback (most recent call last):. File ""../examples/mainframerepro.py"", line 10, in <module>. window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ). File ""../examples/mainframerepro.py"", line 6, in __init__. ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work. TypeError: none of the 2 overloaded methods succeeded. Full details:. Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>. TypeError: takes at most 1 arguments (3 given). Dispatcher1::Dispatcher1() =>. TypeError: takes at most 0 arguments (3 given). ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++. namespace __cppyy_internal {. class Dispatcher1 : public ::TGMainFrame {. public:. virtual ~Dispatcher1() {}. using TGMainFrame::TGMainFrame;. using TGMainFrame::GetMWMinpString;. };. }. void tgmainframe_repro(). {. TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMethods()) {. cout << m->GetName() << ((TMethod*)m)->GetSignature() << endl;. }. }. ```. This prints:. ```. ~Dispatcher1(). GetMWMinpString() const. Dispatcher1(). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6578
https://github.com/root-project/root/issues/6579:572,availability,error,error,572,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:618,availability,error,error,618,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1569,availability,Operat,Operating,1569,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1783,availability,fault,fault,1783,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:24,deployability,Fail,Failed,24,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:825,deployability,modul,module,825,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:979,deployability,Fail,Failed,979,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1048,deployability,Fail,Failed,1048,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1548,deployability,version,version,1548,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1641,deployability,version,version,1641,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1783,energy efficiency,fault,fault,1783,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1548,integrability,version,version,1548,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1641,integrability,version,version,1641,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1712,integrability,repositor,repositories,1712,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:768,interoperability,share,share,768,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1017,interoperability,format,format,1017,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1239,interoperability,bind,bindings,1239,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1712,interoperability,repositor,repositories,1712,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:825,modifiability,modul,module,825,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:898,modifiability,pac,packages,898,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1239,modifiability,bind,bindings,1239,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1548,modifiability,version,version,1548,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1641,modifiability,version,version,1641,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1773,modifiability,pac,packagers,1773,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:572,performance,error,error,572,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:618,performance,error,error,618,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1783,performance,fault,fault,1783,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:24,reliability,Fail,Failed,24,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:979,reliability,Fail,Failed,979,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1048,reliability,Fail,Failed,1048,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1783,reliability,fault,fault,1783,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:572,safety,error,error,572,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:618,safety,error,error,618,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:825,safety,modul,module,825,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1666,safety,test,tested,1666,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1783,safety,fault,fault,1783,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:469,security,access,access,469,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:721,testability,Trace,Traceback,721,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1666,testability,test,tested,1666,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:572,usability,error,error,572,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:618,usability,error,error,618,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:1313,usability,behavi,behavior,1313,"PyROOT: AttributeError: Failed to get attribute TPyDispatcher from ROOT; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. When I try to access `ROOT.TPyDispatcher` from PyROOT (for example, using tutorials/pyroot/gui_ex.py), the following error occurs:. ```. input_line_37:1:10: fatal error: 'ROOT/TPyDispatcher.h' file not found. #include ""ROOT/TPyDispatcher.h"". ^~~~~~~~~~~~~~~~~~~~~~. Traceback (most recent call last):. File ""/usr/share/doc/root/tutorials/pyroot/gui_ex.py"", line 35, in <module>. m = ROOT.TPyDispatcher( MyDraw ). File ""/usr/lib/python3.8/site-packages/ROOT/_facade.py"", line 163, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute TPyDispatcher from ROOT. ```. I also cannot find `TPyDispatcher.h` on my system, which PyROOT tries to [include here](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L292). ### Expected behavior. ROOT.TPyDispatcher is known to be broken in 6.22.00, but [it is supposed to be fixed for 6.22.02](https://github.com/root-project/root/pull/6065). ### To Reproduce. Run `python tutorials/pyroot/gui_ex.py`. ### Setup. 1. ROOT version: 6.22.02. 2. Operating system: Linux x86_64 (Arch Linux and Ubuntu 18.04). 3. Python version: Python3.8. 4. I tested this both for root from the Arch Linux repositories and from conda-forge, so I assume it is not the packagers fault.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/pull/6581:33,performance,cach,cache,33,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their objects in RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529. (cherry picked from commit b4008a13853b9a341a779f73f9aa4c966719d5c1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6581
https://github.com/root-project/root/pull/6581:143,performance,cach,cache,143,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their objects in RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529. (cherry picked from commit b4008a13853b9a341a779f73f9aa4c966719d5c1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6581
https://github.com/root-project/root/pull/6581:359,performance,cach,cache,359,"[RF] Don't copy expensive object cache pointers in RooAbsArg.; If an object inside a workspace is cloned, its pointer to the expensive. object cache inside the original workspace is copied. This creates a. dangling pointer when the original workspace is deleted. This excludes. the pointer from cloning, so clones will store their objects in RooFit's. global cache or (after they have been assigned to a new workspace) in. their new workspace. Fixes root-project/root#6529. (cherry picked from commit b4008a13853b9a341a779f73f9aa4c966719d5c1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6581
https://github.com/root-project/root/pull/6582:228,availability,error,error,228,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:354,deployability,UPDAT,UPDATE,354,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:228,performance,error,error,228,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:228,safety,error,error,228,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:354,safety,UPDAT,UPDATE,354,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:429,safety,test,tested,429,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:354,security,UPDAT,UPDATE,354,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:544,security,ident,identified,544,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:429,testability,test,tested,429,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:228,usability,error,error,228,"[PyROOT][6467] For Python-C++ derived types, invoke constructor via the dispatcher; Fixes https://github.com/root-project/root/issues/6467. It needs https://github.com/root-project/root/pull/6377 for Python <= 3.6, otherwise an error of the type `KeyError: 'fProofChain'` (for TChain) happens first and we don't even get to the issue that this PR fixes (UPDATE: #6377 has been merged). Also, before merging, this fix needs to be tested for `TGMainFrame`, where the problem described in https://github.com/root-project/root/issues/6578 has been identified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6583:4,deployability,resourc,resource,4,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:4,energy efficiency,resourc,resource,4,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:4,performance,resourc,resource,4,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:4,safety,resourc,resource,4,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:147,safety,prevent,prevent,147,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:147,security,preven,prevent,147,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:4,testability,resourc,resource,4,Add resource script & icon for all ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6584:25,performance,Cach,Cache,25,[DF][NFC] Minor fixes to Cache;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6584
https://github.com/root-project/root/pull/6585:93,deployability,log,logic,93,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:130,energy efficiency,optim,optimization,130,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:118,performance,performance optim,performance optimization,118,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:463,performance,Cach,Cache,463,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:93,safety,log,logic,93,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:93,security,log,logic,93,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:64,testability,simpl,simplification,64,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:93,testability,log,logic,93,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:64,usability,simpl,simplification,64,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:118,usability,perform,performance,118,"[DF] Unify jitting of Snapshot actions with the rest; This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6586:168,availability,failur,failure,168,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:135,deployability,fail,fail,135,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:168,deployability,fail,failure,168,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:199,deployability,build,builds,199,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:168,performance,failur,failure,168,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:135,reliability,fail,fail,135,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6586:168,reliability,fail,failure,168,[cmake] Add NDEBUG to CMAKE_CXX_FLAGS_${BUILD_TYPE}; Otherwise roottest will pick up in the standalone mode the NDEBUG. flag twice and fail due to a redefinition. This failure shows up. in the conda builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6586
https://github.com/root-project/root/pull/6587:18,reliability,diagno,diagnostics,18,Improve rootcling diagnostics.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6587
https://github.com/root-project/root/pull/6587:18,testability,diagno,diagnostics,18,Improve rootcling diagnostics.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6587
https://github.com/root-project/root/pull/6588:42,deployability,Instal,Installation,42,[PyROOT] A few CMake fixes; Fixes for:. - Installation of TPyDispatcher.h. Fixes #6579 . - Removal of pythonization files that are no longer there,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6589:19,deployability,Instal,Install,19,[PyROOT] Backport: Install missing header TPyDispatcher.h; Backport of the TPyDispatcher.h fix in https://github.com/root-project/root/pull/6588,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6589
https://github.com/root-project/root/pull/6590:98,modifiability,paramet,parameters,98,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:18,performance,Cach,Cache,18,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:70,performance,Cach,Cache,70,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:173,performance,Cach,Cache,173,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:279,performance,Cach,Cache,279,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:399,performance,Cach,Cache,399,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:480,performance,Cach,Cache-related,480,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:531,performance,Cach,Cache,531,"[DF] Jit and exec Cache together with the rest; Before this commit, a Cache call without template parameters would. trigger jitting and execution of the corresponding typed Cache call. on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of. the code booked for jitting. Jitting is then triggered on the spot,. because a jitted Cache call needs the jitted code to produce its return. value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of. Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6591:138,availability,error,error,138,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:195,availability,error,error,195,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:113,deployability,build,build,113,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:369,deployability,build,build,369,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:403,deployability,build,build,403,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:409,deployability,build,build,409,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:490,deployability,configurat,configuration,490,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:490,integrability,configur,configuration,490,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:490,modifiability,configur,configuration,490,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:11,performance,CACH,CACHE,11,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:138,performance,error,error,138,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:195,performance,error,error,195,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:591,performance,CACH,CACHE,591,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:138,safety,error,error,138,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:195,safety,error,error,195,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:427,safety,test,test,427,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:490,security,configur,configuration,490,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:427,testability,test,test,427,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:138,usability,error,error,138,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/pull/6591:195,usability,error,error,195,"Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…; … Windows. This was breaking the Windows build with the following error:. ```. [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]. ```. On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/issues/6592:120,integrability,sub,subplots,120,"ROOT blocks matplotlib; In a python interactive shell. import ROOT. from matplotlib import pyplot as plt. fig, ax = plt.subplots(). this freeze my program. If I don't import ROOT it works. fedora 32. matplotlib 3.2.2. ROOT 6.22/02.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:36,usability,interact,interactive,36,"ROOT blocks matplotlib; In a python interactive shell. import ROOT. from matplotlib import pyplot as plt. fig, ax = plt.subplots(). this freeze my program. If I don't import ROOT it works. fedora 32. matplotlib 3.2.2. ROOT 6.22/02.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6593:318,availability,error,error,318,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:622,availability,redund,redundant,622,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:1164,availability,Operat,Operating,1164,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:622,deployability,redundan,redundant,622,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:1126,deployability,version,version,1126,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:841,energy efficiency,Draw,Draw,841,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:851,energy efficiency,Draw,Draw,851,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:1126,integrability,version,version,1126,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:1126,modifiability,version,version,1126,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:318,performance,error,error,318,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:622,reliability,redundan,redundant,622,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:318,safety,error,error,318,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:622,safety,redund,redundant,622,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:230,usability,behavi,behavior,230,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:318,usability,error,error,318,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:371,usability,interact,interactive,371,"Cannot set TPaveText text color to white; Hi ROOTers! ### Description. When setting text color in TPaveText (via TAttText::SetTextColor()), text that is set to white displays as black. ### To Reproduce. I produced this unexpected behavior by running the PyROOT code below (Python3). I was _also_ able to reproduce the error by running the equivalent C++ code in the ROOT interactive prompt. ```. import sys, ROOT as rt. def main(args):. c = rt.TCanvas('c','c',800,600). pave = rt.TPaveText(0.25,0.25,0.75,0.75,option='NDC'). pave.AddText('This line is in black.'). # pave.GetListOfLines().Last().SetTextColor(rt.kBlack) # redundant (black is default). pave.AddText('This line is in red.'). pave.GetListOfLines().Last().SetTextColor(rt.kRed). pave.AddText('This line is in white.'). pave.GetListOfLines().Last().SetTextColor(rt.kWhite). pave.Draw(). c.Draw(). c.SaveAs('color_pave.png'). return. if __name__ == '__main__':. main(sys.argv). ```. ### Output. [Here is what I see as output from the code above (color_pave.png).](https://drive.google.com/file/d/16rtJc1gQtYeifRwNi4ZjDEOvg0TTVqQa/view?usp=sharing). ### Setup. ROOT version: 6.22/02 (built from source). Operating system: macOS 10.14.6. ---------------------------------------------. Let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/pull/6595:34,usability,support,support,34,[tmva] Backport in 6.22 for pymva support of tf keras; This is a backport of #6568 in 6.22 branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6595
https://github.com/root-project/root/pull/6596:90,deployability,canary,canary,90,[cmake] Test that NDEBUG is disabled if asserts are requested; Should we put this in as a canary?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6596
https://github.com/root-project/root/pull/6596:8,safety,Test,Test,8,[cmake] Test that NDEBUG is disabled if asserts are requested; Should we put this in as a canary?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6596
https://github.com/root-project/root/pull/6596:8,testability,Test,Test,8,[cmake] Test that NDEBUG is disabled if asserts are requested; Should we put this in as a canary?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6596
https://github.com/root-project/root/pull/6596:40,testability,assert,asserts,40,[cmake] Test that NDEBUG is disabled if asserts are requested; Should we put this in as a canary?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6596
https://github.com/root-project/root/issues/6597:4964,availability,Error,Error,4964,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:82,deployability,FAIL,FAILED,82,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:127,deployability,Fail,Failed,127,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:175,deployability,Fail,Failed,175,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:223,deployability,Fail,Failed,223,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:286,deployability,Fail,Failed,286,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:343,deployability,Fail,Failed,343,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:384,deployability,Fail,Failed,384,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:449,deployability,Fail,Failed,449,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:773,deployability,build,build,773,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:865,deployability,build,build,865,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:899,deployability,log,log,899,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:934,deployability,build,build,934,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1143,deployability,build,build,1143,"ttest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1208,deployability,build,build,1208,"c-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 13",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1242,deployability,build,build,1242,"st-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1433,deployability,build,build,1433,"stract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (mos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1483,deployability,build,build,1483,"owing issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1851,deployability,build,build,1851,"ht/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2053,deployability,build,build,2053,"ipts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2180,deployability,build,build,2180,"S=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4996,deployability,build,build,4996,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5146,deployability,Fail,Failed,5146,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5188,deployability,fail,failed,5188,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5260,deployability,FAIL,FAILED,5260,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5305,deployability,Fail,Failed,5305,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5454,deployability,modul,module,5454,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5478,deployability,version,versions,5478,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2897,energy efficiency,core,core,2897,"ariables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3075,energy efficiency,core,core,3075,"sic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3234,energy efficiency,core,core,3234,"SR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4229,energy efficiency,core,core,4229,"st/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4377,energy efficiency,core,core,4377,"on/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4506,energy efficiency,core,core,4506,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5028,integrability,messag,message,5028,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5478,integrability,version,versions,5478,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:34,interoperability,compatib,compatible,34,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2015,interoperability,share,shared,2015,"ome/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5028,interoperability,messag,message,5028,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5360,interoperability,compatib,compatible,5360,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5419,interoperability,distribut,distribution,5419,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1898,modifiability,variab,variables,1898," ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5454,modifiability,modul,module,5454,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5478,modifiability,version,versions,5478,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:597,performance,time,timeout,597,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1941,performance,time,timeout,1941,"est/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2224,performance,time,timeout,2224,"night/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4964,performance,Error,Error,4964,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5216,performance,time,time,5216,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:82,reliability,FAIL,FAILED,82,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:127,reliability,Fail,Failed,127,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:175,reliability,Fail,Failed,175,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:223,reliability,Fail,Failed,223,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:286,reliability,Fail,Failed,286,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:343,reliability,Fail,Failed,343,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:384,reliability,Fail,Failed,384,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:449,reliability,Fail,Failed,449,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5146,reliability,Fail,Failed,5146,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5188,reliability,fail,failed,5188,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5260,reliability,FAIL,FAILED,5260,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5305,reliability,Fail,Failed,5305,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:76,safety,test,tests,76,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:467,safety,test,tests,467,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:552,safety,Test,Test,552,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:597,safety,timeout,timeout,597,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:899,safety,log,log,899,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1936,safety,Test,Test,1936,"d/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1941,safety,timeout,timeout,1941,"est/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2130,safety,TEST,TEST,2130,"ht/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2224,safety,timeout,timeout,2224,"night/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2385,safety,TEST,TEST,2385,"n:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4936,safety,TEST,TEST,4936,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4964,safety,Error,Error,4964,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5097,safety,Test,Test,5097,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5166,safety,test,tests,5166,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5182,safety,test,tests,5182,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5211,safety,Test,Test,5211,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5254,safety,test,tests,5254,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5397,safety,hot,hotfix,5397,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5454,safety,modul,module,5454,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:899,security,log,log,899,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:76,testability,test,tests,76,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:467,testability,test,tests,467,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:552,testability,Test,Test,552,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:899,testability,log,log,899,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1728,testability,Simpl,SimpleClass,1728,"ixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1936,testability,Test,Test,1936,"d/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2130,testability,TEST,TEST,2130,"ht/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2385,testability,TEST,TEST,2385,"n:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2422,testability,Trace,Traceback,2422,"unsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2775,testability,hook,hook,2775,"t/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3397,testability,assert,assertion,3397,"312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3594,testability,assert,assertion,3594,"> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3682,testability,assert,assert,3682,"st/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3717,testability,Assert,AssertionError,3717,"ne 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assert",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3800,testability,assert,assertion,3800,"elf). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:3829,testability,Trace,Traceback,3829,"le ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4122,testability,hook,hook,4122,"OR> res = mc.execute(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: INTERNALERROR> res = method(**kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: INTERNALERROR> warn_about_missing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4639,testability,assert,assertion,4639,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4806,testability,assert,assertion,4806,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4879,testability,assert,assert,4879,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4899,testability,Assert,AssertionError,4899,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4936,testability,TEST,TEST,4936,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5097,testability,Test,Test,5097,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5166,testability,test,tests,5166,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5182,testability,test,tests,5182,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5211,testability,Test,Test,5211,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:5254,testability,test,tests,5254,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:557,usability,command,command,557,"pytest shipped in roottest is not compatible with py3.9; ```. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). 1313 - roottest-python-basic-datatype (Failed). 1315 - roottest-python-basic-overload (Failed). 1409 - roottest-python-pythonizations-pythonizations (Failed). 1410 - roottest-python-pythonizations-smartptr (Failed). 1413 - roottest-python-stl-stl (Failed). 2106 - roottest-root-tree-fastcloning-runabstract-copy (Failed). ```. All tests have the following issue:. ```. Start 1312: roottest-python-basic-basic. 1312: Test command: /usr/bin/cmake ""-DCMD=/usr/bin/timeout^-s^USR2^270s^/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::AC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:1728,usability,Simpl,SimpleClass,1728,"ixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:2135,usability,COMMAND,COMMAND,2135,"sch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake"". 1312: Environment variables: . 1312: ROOT_HIST=0. 1312: Test timeout computed to be: 300. 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so. 1312: . 1312: -- TEST COMMAND -- . 1312: cd /home/sftnight/swunsch/build/roottest/python/basic. 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling. 1312: -- BEGIN TEST OUTPUT --. 1312: INTERNALERROR> Traceback (most recent call last):. 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: INTERNALERROR> config.do_configure(). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: INTERNALERROR> self.hook.pytest_configure(config=self). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: INTERNALERROR> return self._docall(methods, kwargs). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: INTERNALERROR> res = mc.ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:4964,usability,Error,Error,4964,"ing_assertion(mode). 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: INTERNALERROR> assert False. 1312: INTERNALERROR> AssertionError. 1312: ! /home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py. 1312: Traceback (most recent call last):. 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session. 1312: config.do_configure(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/config.py"", line 608, in do_configure. 1312: self.hook.pytest_configure(config=self). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 377, in __call__. 1312: return self._docall(methods, kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 388, in _docall. 1312: res = mc.execute(). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/core.py"", line 289, in execute. 1312: res = method(**kwargs). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 56, in pytest_configure. 1312: warn_about_missing_assertion(mode). 1312: File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/assertion/__init__.py"", line 113, in warn_about_missing_assertion. 1312: assert False. 1312: AssertionError. 1312: . 1312: -- END TEST OUTPUT --. 1312: CMake Error at /home/sftnight/swunsch/build/RootTestDriver.cmake:191 (message):. 1312: got exit code 3 but expected 0. 1312: . 1312: . 1/1 Test #1312: roottest-python-basic-basic ......***Failed 5.07 sec. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 6.17 sec. The following tests FAILED:. 1312 - roottest-python-basic-basic (Failed). ```. That means our pytest in roottest is not compatible with py3.9. We can either hotfix our own pytest distribution or remove the inbuilt module and use official versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/pull/6600:760,deployability,updat,update,760,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:835,deployability,updat,update,835,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:868,deployability,updat,update,868,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1010,deployability,updat,update,1010,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1140,deployability,updat,update,1140,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:309,safety,review,review,309,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:693,safety,test,tests,693,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:713,safety,test,tests,713,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:738,safety,test,test,738,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:760,safety,updat,update,760,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:835,safety,updat,update,835,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:868,safety,updat,update,868,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1010,safety,updat,update,1010,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1140,safety,updat,update,1140,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:760,security,updat,update,760,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:835,security,updat,update,835,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:868,security,updat,update,868,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1010,security,updat,update,1010,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1140,security,updat,update,1140,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:309,testability,review,review,309,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:693,testability,test,tests,693,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:713,testability,test,tests,713,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:738,testability,test,test,738,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:11,usability,support,support,11,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1147,usability,user,user,1147,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1154,usability,guid,guide,1154,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1161,usability,document,documentation,1161,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:1175,usability,user,users-guide,1175,"[Tree] Add support for branches of type long and unsigned long; The corresponding leaflist letters are 'G' and 'g'. A new class TLeafG is added -- basically a copy of TLeafL with. [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,. std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:. - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt). - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right? ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx. - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`. - [x] update doc of class TTree. - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`. - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`. - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6601:35,availability,slo,slots,35,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:85,availability,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:212,availability,slo,slot,212,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:301,availability,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:178,deployability,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:91,integrability,messag,messages,91,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:154,integrability,event,event,154,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:307,integrability,messag,messages,307,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:91,interoperability,messag,messages,91,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:307,interoperability,messag,messages,307,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:85,performance,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:141,performance,multi-thread,multi-thread,141,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:301,performance,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:35,reliability,slo,slots,35,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:212,reliability,slo,slot,212,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:63,safety,prevent,prevents,63,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:85,safety,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:111,safety,except,exception,111,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:178,safety,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:301,safety,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:63,security,preven,prevents,63,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:178,security,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:16,usability,help,helper,16,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:85,usability,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6601:301,usability,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6601
https://github.com/root-project/root/pull/6602:35,availability,slo,slots,35,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:85,availability,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:212,availability,slo,slot,212,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:301,availability,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:178,deployability,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:91,integrability,messag,messages,91,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:154,integrability,event,event,154,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:307,integrability,messag,messages,307,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:91,interoperability,messag,messages,91,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:307,interoperability,messag,messages,307,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:85,performance,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:141,performance,multi-thread,multi-thread,141,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:301,performance,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:35,reliability,slo,slots,35,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:212,reliability,slo,slot,212,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:63,safety,prevent,prevents,63,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:85,safety,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:111,safety,except,exception,111,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:178,safety,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:301,safety,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:63,security,preven,prevents,63,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:178,security,patch,patch,178,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:16,usability,help,helper,16,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:85,usability,error,error,85,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6602:301,usability,error,error,301,"[DF] Use a RAII helper to pop/push slots from RSlotStack; This prevents certain ugly error messages in case an exception is. thrown during a multi-thread event loop: before this patch, in that. case the thread's slot number was never returned to the RSlotStack. and it could result in some misleading error messages being printed on. screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6602
https://github.com/root-project/root/pull/6603:12,availability,error,error,12,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:18,integrability,messag,message,18,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:18,interoperability,messag,message,18,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:12,performance,error,error,12,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:12,safety,error,error,12,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:43,safety,input,input,43,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:12,usability,error,error,12,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6603:43,usability,input,input,43,[DF] Better error message in case of empty input TTree for Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6603
https://github.com/root-project/root/pull/6604:144,deployability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,integrability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,interoperability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,modifiability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,reliability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,security,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6604:144,testability,Integr,Integral,144,Fix computing maximum value for RooCBShape; The maximum value for RooCBSHape is use din generate() to speedup Accept/reject. The maximum is 1./ Integral of funciton in range and not 1 ! This fixes generating from a RooCBShape. Fix for ROOT-8489,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6604
https://github.com/root-project/root/pull/6605:47,deployability,version,version,47,[cmake] Ask for PROCESSOR_DESCRIPTION if cmake version is 3.10 or later.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6605
https://github.com/root-project/root/pull/6605:47,integrability,version,version,47,[cmake] Ask for PROCESSOR_DESCRIPTION if cmake version is 3.10 or later.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6605
https://github.com/root-project/root/pull/6605:47,modifiability,version,version,47,[cmake] Ask for PROCESSOR_DESCRIPTION if cmake version is 3.10 or later.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6605
https://github.com/root-project/root/pull/6606:99,deployability,manag,manager,99,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:160,deployability,patch,patch,160,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:775,deployability,upgrad,upgrade,775,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:99,energy efficiency,manag,manager,99,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:672,energy efficiency,load,load,672,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:45,integrability,messag,message,45,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:596,integrability,interfac,interface,596,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:45,interoperability,messag,message,45,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:596,interoperability,interfac,interface,596,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:596,modifiability,interfac,interface,596,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:775,modifiability,upgrad,upgrade,775,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:672,performance,load,load,672,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:229,reliability,diagno,diagnostics,229,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:99,safety,manag,manager,99,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:160,safety,patch,patch,160,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:160,security,patch,patch,160,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:229,testability,diagno,diagnostics,229,[cling] Use the dyld to show more meaningful message when a symbol is missing; The dynamic library manager's dyld can search a symbol in the library path. This patch uses that functionality to aid the 'unresolved while linking'. diagnostics. Now we get:. ```. cling -L lib/. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ extern int gErrorIgnoreLevel;. [cling]$ gErrorIgnoreLevel. IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]! Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ? [cling]$. ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/issues/6607:50,energy efficiency,alloc,allocator,50,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:173,energy efficiency,alloc,allocator,173,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:396,energy efficiency,alloc,allocator,396,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:489,energy efficiency,alloc,allocator,489,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:542,energy efficiency,alloc,allocator,542,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:591,energy efficiency,alloc,allocator,591,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:30,reliability,doe,does,30,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:154,reliability,doe,does,154,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:752,safety,test,testing,752,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:717,testability,context,context,717,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:752,testability,test,testing,752,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:244,usability,behavi,behavior,244,"TClassEdit::GetNormalizedName does not strip std::allocator on Windows; ### Describe the bug. The type name normalization `TClassEdit::GetNormalizedName` does not strip the allocator off STL classes on Windows. On Linux, it works. ### Expected behavior. On both, Windows and Linux the following should be true. ```. std::string n;. TClassEdit::GetNormalizedName(n, ""std::vector<float, class std::allocator<float>>"");. n == std::string(""vector<float>"");. ```. Note that even on Windows the allocator _is_ stripped for `std::vector<float, std::allocator<float>>` (i.e. without prefixing `std::allocator` by `class`). ### Setup. <!--. 1. Master. 2. Arch Linux / Windows 10. 3. Compiled from sources. -->. ### Additional context. The issue was found while testing PR #6548 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6608:741,availability,state,statements,741,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1018,availability,Operat,Operating,1018,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1093,availability,down,download,1093,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:535,deployability,log,log-level,535,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:588,deployability,log,log-level,588,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1006,deployability,version,version,1006,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1075,deployability,instal,install,1075,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1140,deployability,Version,Version,1140,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1201,deployability,manag,manager,1201,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1209,deployability,version,version,1209,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1233,deployability,instal,installation,1233,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1265,deployability,instal,install,1265,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1356,deployability,depend,dependency,1356,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1201,energy efficiency,manag,manager,1201,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:741,integrability,state,statements,741,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1006,integrability,version,version,1006,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1140,integrability,Version,Version,1140,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1209,integrability,version,version,1209,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1356,integrability,depend,dependency,1356,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1367,interoperability,conflict,conflicts,1367,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:823,modifiability,pac,packages,823,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1006,modifiability,version,version,1006,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1140,modifiability,Version,Version,1140,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1193,modifiability,pac,package,1193,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1209,modifiability,version,version,1209,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1356,modifiability,depend,dependency,1356,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:602,reliability,doe,does,602,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:778,reliability,doe,doesn,778,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:964,reliability,doe,does,964,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:535,safety,log,log-level,535,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:588,safety,log,log-level,588,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1201,safety,manag,manager,1201,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1356,safety,depend,dependency,1356,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:535,security,log,log-level,535,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:588,security,log,log-level,588,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:535,testability,log,log-level,535,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:588,testability,log,log-level,588,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:1356,testability,depend,dependency,1356,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:445,usability,clear,clear,445,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:493,usability,behavi,behavior,493,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:688,usability,help,helpful,688,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:786,usability,help,help,786,"[JupyROOT] ROOT C++ Kernel only working as superuser; - [x ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `sudo root --notebook --log-level 10 --allow-root` works. `root --notebook --log-level 10` does not, jupyter is trying to reconnect to the kernel every few seconds. There is no helpful debug output. For debugging I put some print statements around that line but that doesn't help much:. `/usr/lib/python3.8/site-packages/JupyROOT/kernel/rootkernel.py`. and noticed that the kernel freezes on line 57:. `MetaKernel.__init__(self,**kwargs)`. With sudo it does not freeze. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT Version: 6.22/02. 2. arch linux. 3. I tried both the package manager version and the [manual installation](https://root.cern/install). I also gave miniconda and anaconda a try but both don't work for ROOT because of dependency conflicts. The python kernel works flawlessly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/pull/6609:768,availability,error,errors,768,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:29,deployability,build,builds,29,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:92,deployability,depend,dependence,92,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:376,deployability,depend,dependence,376,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:598,deployability,depend,dependence,598,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:682,deployability,configurat,configuration,682,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:92,integrability,depend,dependence,92,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:118,integrability,pub,public,118,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:356,integrability,pub,publicly,356,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:376,integrability,depend,dependence,376,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:598,integrability,depend,dependence,598,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:682,integrability,configur,configuration,682,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:92,modifiability,depend,dependence,92,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:376,modifiability,depend,dependence,376,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:458,modifiability,inherit,inherit,458,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:598,modifiability,depend,dependence,598,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:682,modifiability,configur,configuration,682,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:768,performance,error,errors,768,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:92,safety,depend,dependence,92,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:376,safety,depend,dependence,376,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:598,safety,depend,dependence,598,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:768,safety,error,errors,768,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:832,safety,test,test,832,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:365,security,expos,exposing,365,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:682,security,configur,configuration,682,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:719,security,sign,significant,719,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:92,testability,depend,dependence,92,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:376,testability,depend,dependence,376,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:598,testability,depend,dependence,598,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:832,testability,test,test,832,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:768,usability,error,errors,768,"libatomic usage fix (for ARM builds), master branch (2020.10.11.); Made the `RIO` library's dependence on `libatomic` public. Unfortunately the previous incantation was not transitive. The clients were not set up to link against libatomic themselves as well. And with [TFile.h](https://github.com/root-project/root/blob/master/io/io/inc/TFile.h#L129-L132) publicly exposing a dependence on `std::atomic`, and multiple classes implemented in the project that inherit from `TFile` (and are built into other libraries), this really is a must. This ties to both #4561 (where I described ARM's explicit dependence on `libatomic` ""in certain situations""), and also to #6432 (ROOT's CMake configuration could really do with a significant cleanup/rewrite). Unfortunately such errors will keep coming back if we can not set up a centralised test for this. Any chance that that could be done?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6610:10,deployability,resourc,resource,10,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:10,energy efficiency,resourc,resource,10,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:10,performance,resourc,resource,10,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:10,safety,resourc,resource,10,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:149,safety,prevent,prevent,149,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:149,security,preven,prevent,149,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:10,testability,resourc,resource,10,v6.22 Add resource script & icon for ROOT executables on Windows; This is mostly to make anti-virus (virustotal.com) happy with Windows binaries and prevent false positives. But it is also nice to have proper ROOT icon and meta-information in the executables themselves,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/issues/6611:315,deployability,contain,containing,315,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:429,deployability,contain,contains,429,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:594,deployability,contain,contain,594,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:971,deployability,build,build,971,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1036,deployability,depend,depends,1036,"rger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1036,integrability,depend,depends,1036,"rger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1794,integrability,buffer,buffermerger,1794,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:2059,integrability,buffer,buffermerger,2059,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1315,interoperability,standard,standardwrite,1315,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1488,interoperability,standard,standard,1488,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1549,interoperability,standard,standardwrite,1549,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1036,modifiability,depend,depends,1036,"rger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:727,performance,time,time,727,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:585,reliability,doe,does,585,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1676,reliability,doe,does,1676,"the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:925,safety,input,input,925,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1036,safety,depend,depends,1036,"rger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1036,testability,depend,depends,1036,"rger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. aut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:101,usability,clear,clear,101,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:149,usability,behavi,behavior,149,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:780,usability,behavi,behavior,780,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:925,usability,input,input,925,"Writing an RVec to a TTree via TBufferMerger omits its streamer infos; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. First reported [on the forum](https://root-forum.cern.ch/t/missing-tstreamerinfo-for-branches-of-rvec/41805). `RDataFrame` creates `TTree` branches containing `RVecs` as `tree.Branch(""rvec"", &rvec.AsVector())`. When writing to a classic `TFile`, the output file contains streamer infos related to RVecs such as `vector<float,ROOT::Detail::VecOps::RAdoptAllocator<float> >`. When using `TBufferMerger`, the output file does not contain such streamer infos. ROOT can read the data back anyway, but third party libraries such as `uproot` reportedly have a harder time. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. A reproducer that only depends on `RVec` and `TBufferMerger`:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::Experimental::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv.AsVector());. t.Fill();. f->Write();. }. std::cout << ""\n\n***** ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/pull/6613:67,interoperability,bind,bindings,67,[PyROOT] Backport 6.20: Fix -Wmissing-field-initializers in python bindings for Python 3.8 an…; …d 3.9. Backport of https://github.com/root-project/root/pull/5399.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6613
https://github.com/root-project/root/pull/6613:67,modifiability,bind,bindings,67,[PyROOT] Backport 6.20: Fix -Wmissing-field-initializers in python bindings for Python 3.8 an…; …d 3.9. Backport of https://github.com/root-project/root/pull/5399.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6613
https://github.com/root-project/root/pull/6614:67,interoperability,bind,bindings,67,[PyROOT] Backport 6.18: Fix -Wmissing-field-initializers in python bindings for Python 3.8 an…; …d 3.9. Backport of https://github.com/root-project/root/pull/5399,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/pull/6614:67,modifiability,bind,bindings,67,[PyROOT] Backport 6.18: Fix -Wmissing-field-initializers in python bindings for Python 3.8 an…; …d 3.9. Backport of https://github.com/root-project/root/pull/5399,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/pull/6615:405,deployability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,deployability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:40,integrability,interfac,interface,40,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:72,integrability,interfac,interface,72,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:311,integrability,interfac,interface,311,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,integrability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,integrability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:619,integrability,interfac,interface,619,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:40,interoperability,interfac,interface,40,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:72,interoperability,interfac,interface,72,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:311,interoperability,interfac,interface,311,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,interoperability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,interoperability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:619,interoperability,interfac,interface,619,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:40,modifiability,interfac,interface,40,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:72,modifiability,interfac,interface,72,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:311,modifiability,interfac,interface,311,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,modifiability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,modifiability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:619,modifiability,interfac,interface,619,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,reliability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,reliability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:335,safety,safe,safe,335,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:651,safety,test,tests,651,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,security,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,security,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:405,testability,integr,integral,405,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:590,testability,integr,integrators,590,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/pull/6615:651,testability,test,tests,651,"[RF] Add more functional-style getValue interface to RooFit.; Add a new interface to RooFit, which uses a `RunContext` object to store data. This allows for passing data around between nodes of the computation graph without having to alter class members. Some residual altering of class members remains, so the interface is not thread safe. It, however, solves the problem of not being able to compute an integral, the likelihoods of entries in a dataset + possibly some other set of x-values while another computation is running. This is the key to solving things like ROOT-3874 or faster integrators. In this PR, the interface is never used. Uses + tests will come in later PRs, but I couldn't dump 30 commits in one PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6615
https://github.com/root-project/root/issues/6616:909,deployability,Version,Version,909,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1527,deployability,build,build,1527,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:909,integrability,Version,Version,909,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:457,interoperability,specif,specific,457,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:909,modifiability,Version,Version,909,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:432,reliability,doe,does,432,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1481,safety,input,input,1481,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1581,safety,input,input,1581,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:88,usability,clear,clear,88,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:136,usability,behavi,behavior,136,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:180,usability,command,commands,180,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:594,usability,user,user,594,"hadd writes files with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1093,usability,behavi,behavior,1093,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1111,usability,clear,clear,1111,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1187,usability,command,command,1187,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1336,usability,behavi,behavior,1336,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1481,usability,input,input,1481,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1581,usability,input,input,1581,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6616:1895,usability,Close,Close,1895,"s with unspecified compression algorithm; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The following sequence of commands shows how an output file f2.root produced via hadd has compression settings equal to 1, i.e. compression level is 1 but the compressoin algorithm is 0, which corresponds to RCompressionSetting::EAlgorithm::kUseGlobal. Unfortunately kUseGlobal does not correspond to a specific compression algorithm but it refers to the ""compression setting for this process; may be affected by rootrc"". In other words, a user that receives a file with compression algorithm 0 has no way to figure out what the compression algorithm actually is. ```. ~ hadd f2.root f.root. hadd Target file: f2.root. hadd compression setting for all output: 1. hadd Source file 1: f.root. hadd Target path: f2.root:/. ~ file f2.root. f2.root: ROOT file Version 62301 (Compression: 1). ~ root -l -b -q f2.root -e '_file0->GetCompressionSettings()'. Attaching file f2.root as _file0... (TFile *) 0x55a618b47f40. (int) 1. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The last command above should print full compression settings with non-zero compression algorithm, e.g. `101`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I think any input file can be used to reproduce the problem, but e.g. this snippet produces a file `""f.root""` that can be used for the reproducer above:. ```cpp. #include <TFile.h>. #include <TTree.h>. int main() {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. int x = 42;. t.Branch(""x"", &x);. t.Fill();. t.Write();. f.Close();. return 0;. }. ```. `hadd f2.root f.root` then produces a file `f2.root` with unspecified compression algorithm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6617:18,deployability,build,build,18,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:86,deployability,build,build,86,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:270,deployability,build,build,270,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:328,deployability,build,build,328,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:386,deployability,build,build,386,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:397,deployability,depend,dependency,397,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:427,deployability,depend,dependency,427,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:519,deployability,build,build,519,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:552,deployability,build,build,552,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:397,integrability,depend,dependency,397,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:427,integrability,depend,dependency,427,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:397,modifiability,depend,dependency,397,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:427,modifiability,depend,dependency,427,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:525,performance,time,times,525,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:397,safety,depend,dependency,397,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:427,safety,depend,dependency,427,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:229,testability,simul,simulations,229,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:397,testability,depend,dependency,397,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:427,testability,depend,dependency,427,"Add posibility to build only the Math libraries; I would like to have a posibility to build only the math libraries or that they are split out from the main project, as we don't want to use root as an application but are writing simulations in c++ and would not like to build our own math lib. . At the moment it is possible to build the math libs one by one but the c++ interpreter is build as a dependency of them (also some dependency that uses openssl) which is not needed to use the pure math libs. This increases build times unreasonably. I just build the MathMore target. For this Target about 97% of the compile steps where made up of compiling the interpretor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/pull/6618:14,deployability,patch,patch,14,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6618:51,deployability,version,version,51,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6618:51,integrability,version,version,51,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6618:51,modifiability,version,version,51,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6618:14,safety,patch,patch,14,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6618:14,security,patch,patch,14,"[PyROOT] Redo patch for multi-python; The previous version was wrongly inverted: the deletions and. additions had to be additions and deletions, respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6618
https://github.com/root-project/root/pull/6620:349,safety,test,test,349,"[DF] Fix calls to compiled Snapshot without columns, `Snapshot<>`; Recent changes in Snapshot broke the edge case of a compiled Snapshot. call with no selected columns, i.e. `Snapshot<>(""tree"", ""f.root"", {})`. This commit adds support for this case in the CreateAction machinery. that Snapshot now makes use of, re-enabling this usecase. We have a ""test"" for this usecase in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6620
https://github.com/root-project/root/pull/6620:349,testability,test,test,349,"[DF] Fix calls to compiled Snapshot without columns, `Snapshot<>`; Recent changes in Snapshot broke the edge case of a compiled Snapshot. call with no selected columns, i.e. `Snapshot<>(""tree"", ""f.root"", {})`. This commit adds support for this case in the CreateAction machinery. that Snapshot now makes use of, re-enabling this usecase. We have a ""test"" for this usecase in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6620
https://github.com/root-project/root/pull/6620:227,usability,support,support,227,"[DF] Fix calls to compiled Snapshot without columns, `Snapshot<>`; Recent changes in Snapshot broke the edge case of a compiled Snapshot. call with no selected columns, i.e. `Snapshot<>(""tree"", ""f.root"", {})`. This commit adds support for this case in the CreateAction machinery. that Snapshot now makes use of, re-enabling this usecase. We have a ""test"" for this usecase in rootbench.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6620
https://github.com/root-project/root/pull/6623:28,deployability,instal,installation,28,[PyROOT] Backport fixes for installation of PyROOT; Backport of:. https://github.com/root-project/root/pull/6618. and. https://github.com/root-project/root/pull/6621,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6623
https://github.com/root-project/root/issues/6624:262,availability,state,state,262,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:655,availability,state,state,655,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:91,energy efficiency,model,model,91,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:167,energy efficiency,model,model,167,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:262,integrability,state,state,262,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:655,integrability,state,state,655,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:19,interoperability,mismatch,mismatch,19,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:273,performance,time,time,273,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:76,reliability,stabil,stability,76,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:67,safety,test,test,67,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:9,security,sign,signature,9,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:91,security,model,model,91,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:167,security,model,model,167,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:67,testability,test,test,67,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:699,usability,document,documentation,699,"TRandom: signature mismatch between getter and setter; In order to test the stability of a model in RooFit, I need to generate independent pseudo-datasets and fit the model back to them. I use the TRandom class to make sure that the system starts in a different state each time in the following way:. RooRandom::randomGenerator()->SetSeed(0);. I need to be able to reproduce these fits, so I save the seed associated with each pseudo-dataset:. UInt_t my_seed = RooRandom::randomGenerator()->GetSeed();. However, if I then set the seed to the number that GetSeed() returns and and re-run the fit:. RooRandom::randomGenerator()->SetSeed(my_seed);. The same state is not reproduced. I have checked the documentation, and SetSeed accepts the type ULong_T as an argument, where as GetSeed returns the type UInt_t. There is therefore no way for me to extract the actual seed the RooRandom object is using to generate the pseudo-datasets as the number is truncated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6625:240,safety,input,input,240,"[RF] Tiny mistake in web documentation for RooCategory; Hello,. there is a tiny mistake in the documentation of RooCategory :. consider . https://root.cern.ch/doc/master/classRooCategory.html. It is said that for the method defineType, the input is a *string*. Actually, this is a char *. You may just correct the web page. Thank you. Proof :. 1) I had to move to char * in order to be able to compile. 2) we see that directly in line command . root [0] RooCategory categ. root [1] categ.defineType( <----------I press tabulation here in order to know the types. Bool_t defineType(const char* label). Bool_t defineType(const char* label, Int_t index). Thank you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:25,usability,document,documentation,25,"[RF] Tiny mistake in web documentation for RooCategory; Hello,. there is a tiny mistake in the documentation of RooCategory :. consider . https://root.cern.ch/doc/master/classRooCategory.html. It is said that for the method defineType, the input is a *string*. Actually, this is a char *. You may just correct the web page. Thank you. Proof :. 1) I had to move to char * in order to be able to compile. 2) we see that directly in line command . root [0] RooCategory categ. root [1] categ.defineType( <----------I press tabulation here in order to know the types. Bool_t defineType(const char* label). Bool_t defineType(const char* label, Int_t index). Thank you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:95,usability,document,documentation,95,"[RF] Tiny mistake in web documentation for RooCategory; Hello,. there is a tiny mistake in the documentation of RooCategory :. consider . https://root.cern.ch/doc/master/classRooCategory.html. It is said that for the method defineType, the input is a *string*. Actually, this is a char *. You may just correct the web page. Thank you. Proof :. 1) I had to move to char * in order to be able to compile. 2) we see that directly in line command . root [0] RooCategory categ. root [1] categ.defineType( <----------I press tabulation here in order to know the types. Bool_t defineType(const char* label). Bool_t defineType(const char* label, Int_t index). Thank you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:240,usability,input,input,240,"[RF] Tiny mistake in web documentation for RooCategory; Hello,. there is a tiny mistake in the documentation of RooCategory :. consider . https://root.cern.ch/doc/master/classRooCategory.html. It is said that for the method defineType, the input is a *string*. Actually, this is a char *. You may just correct the web page. Thank you. Proof :. 1) I had to move to char * in order to be able to compile. 2) we see that directly in line command . root [0] RooCategory categ. root [1] categ.defineType( <----------I press tabulation here in order to know the types. Bool_t defineType(const char* label). Bool_t defineType(const char* label, Int_t index). Thank you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:435,usability,command,command,435,"[RF] Tiny mistake in web documentation for RooCategory; Hello,. there is a tiny mistake in the documentation of RooCategory :. consider . https://root.cern.ch/doc/master/classRooCategory.html. It is said that for the method defineType, the input is a *string*. Actually, this is a char *. You may just correct the web page. Thank you. Proof :. 1) I had to move to char * in order to be able to compile. 2) we see that directly in line command . root [0] RooCategory categ. root [1] categ.defineType( <----------I press tabulation here in order to know the types. Bool_t defineType(const char* label). Bool_t defineType(const char* label, Int_t index). Thank you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/pull/6626:25,deployability,patch,patches,25,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:40,deployability,patch,patches,40,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:145,performance,time,time,145,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:25,safety,patch,patches,25,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:40,safety,patch,patches,40,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:124,safety,review,review,124,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:25,security,patch,patches,25,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:40,security,patch,patches,40,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6626:124,testability,review,review,124,"[RF] Collection of small patches; Small patches that piled up during developing a feature. Since they are unrelated, we can review them ahead of time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6626
https://github.com/root-project/root/pull/6627:9,deployability,Updat,Update,9,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6627:48,integrability,complian,compliant,48,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6627:9,safety,Updat,Update,9,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6627:48,safety,compl,compliant,48,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6627:9,security,Updat,Update,9,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6627:48,security,compl,compliant,48,[PyROOT] Update GUI demo tutorial; - To make it compliant with Python3. - To fix a few wrong paths. Related ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10844,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6627
https://github.com/root-project/root/pull/6629:6,deployability,Build,Build,6,WIP: [Build] Add distcc-pump option; Cool:. pump mode allows the offloading of the preprocessing to the nodes. Good to use in a distcc container based worker. Bad:. The system headers must be the same.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:135,deployability,contain,container,135,WIP: [Build] Add distcc-pump option; Cool:. pump mode allows the offloading of the preprocessing to the nodes. Good to use in a distcc container based worker. Bad:. The system headers must be the same.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:37,energy efficiency,Cool,Cool,37,WIP: [Build] Add distcc-pump option; Cool:. pump mode allows the offloading of the preprocessing to the nodes. Good to use in a distcc container based worker. Bad:. The system headers must be the same.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6630:0,energy efficiency,Optim,Optimize,0,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:38,energy efficiency,Optim,Optimize,38,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:346,energy efficiency,measur,measured,346,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:0,performance,Optimiz,Optimize,0,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:38,performance,Optimiz,Optimize,38,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:128,performance,time,time,128,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:114,security,sign,significative,114,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6630:203,security,access,access,203,Optimize TPrincipal::AddRow function; Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements. In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6630
https://github.com/root-project/root/pull/6631:14,deployability,Updat,Update,14,[Doc][PyROOT] Update release notes for 6.22/04;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6631
https://github.com/root-project/root/pull/6631:21,deployability,releas,release,21,[Doc][PyROOT] Update release notes for 6.22/04;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6631
https://github.com/root-project/root/pull/6631:14,safety,Updat,Update,14,[Doc][PyROOT] Update release notes for 6.22/04;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6631
https://github.com/root-project/root/pull/6631:14,security,Updat,Update,14,[Doc][PyROOT] Update release notes for 6.22/04;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6631
https://github.com/root-project/root/pull/6632:101,deployability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,deployability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,deployability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,deployability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:397,deployability,log,log,397,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,deployability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:678,deployability,log,log,678,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,deployability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,deployability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1049,deployability,log,log,1049,"interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,deployability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,deployability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,deployability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,deployability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,deployability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,deployability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,deployability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,deployability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,deployability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,deployability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:45,integrability,batch,batch,45,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:51,integrability,interfac,interface,51,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,integrability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:119,integrability,batch,batch,119,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,integrability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,integrability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,integrability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,integrability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,integrability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,integrability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,integrability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,integrability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,integrability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,integrability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,integrability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,integrability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,integrability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,integrability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,integrability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,integrability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:51,interoperability,interfac,interface,51,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,interoperability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,interoperability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,interoperability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,interoperability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,interoperability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,interoperability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,interoperability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,interoperability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,interoperability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,interoperability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,interoperability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2488,interoperability,distribut,distribution,2488,"n 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_br",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,interoperability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,interoperability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2857,interoperability,distribut,distribution,2857,"16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,interoperability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3167,interoperability,distribut,distribution,3167,"25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,interoperability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3582,interoperability,distribut,distribution,3582,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,interoperability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3886,interoperability,distribut,distribution,3886,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,interoperability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4192,interoperability,distribut,distribution,4192,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:51,modifiability,interfac,interface,51,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,modifiability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,modifiability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,modifiability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,modifiability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,modifiability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,modifiability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,modifiability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,modifiability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,modifiability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,modifiability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,modifiability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,modifiability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,modifiability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,modifiability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,modifiability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,modifiability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,modifiability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:45,performance,batch,batch,45,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:119,performance,batch,batch,119,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:228,performance,perform,performance,228,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,reliability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,reliability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,reliability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,reliability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,reliability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,reliability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,reliability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,reliability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,reliability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,reliability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,reliability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,reliability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,reliability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,reliability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,reliability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,reliability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,reliability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:283,safety,test,tests,283,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:397,safety,log,log,397,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:678,safety,log,log,678,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1049,safety,log,log,1049,"interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,security,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,security,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,security,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,security,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:397,security,log,log,397,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,security,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:678,security,log,log,678,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,security,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,security,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1049,security,log,log,1049,"interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,security,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,security,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,security,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,security,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,security,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,security,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,security,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,security,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,security,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,security,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:101,testability,integr,integrator,101,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:165,testability,integr,integrator,165,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:253,testability,integr,integrators,253,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:283,testability,test,tests,283,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:385,testability,Integr,Integrating,385,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:397,testability,log,log,397,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:666,testability,Integr,Integrating,666,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:678,testability,log,log,678,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:956,testability,integr,integrator,956,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1037,testability,Integr,Integrating,1037,"w batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1049,testability,log,log,1049,"interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1438,testability,Integr,Integrating,1438,"	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.Convergence",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:1742,testability,Integr,Integrating,1742,"9e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2047,testability,Integr,Integrating,2047,"a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.3953",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2463,testability,Integr,Integrating,2463,"r, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2755,testability,integr,integrator,2755,"mial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:2832,testability,Integr,Integrating,2832,"-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.38354e-16	t=0.06. Integrating Polynomial 4th order, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40424e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.069",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3142,testability,Integr,Integrating,3142,".12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.06. 	new:	1.7536e-16	2.12764e-16	4.25528e-16	6.38292e-16	6.38292e-16	t=0.02. 	ROOT:	1.45531e-16	2.12764e-16	4.25528e-16	4.25528e-16	6.38292e-16	t=0.03. [ OK ] Roo1DIntegrator.ConvergenceSettings_pol4 (501 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_breitWig. Integrating Breit-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3561,testability,Integr,Integrating,3561,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:3865,testability,Integr,Integrating,3865,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:4171,testability,Integr,Integrating,4171,"t-Wigner distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0303175	0.0209141	0.0827284	0.116045	0.125775	t=0.05. 	new:	0.00084728	0.000305644	0.00479046	0.0129056	0.125775	t=0.02. 	ROOT:	1.69943e-06	6.01714e-12	2.93861e-09	6.96465e-08	0.125775	t=0.25. Old integrator reached poor precision: 0.0303175 +/- 0.0273059 instead of 0.001. Integrating Breit-Wigner distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	3.37556e-06	3.37556e-06	3.39334e-06	3.39492e-06	3.39532e-06	t=0.18. 	new:	2.27034e-08	2.27035e-08	2.28213e-08	2.28318e-08	3.39532e-06	t=0.18. 	ROOT:	1.98411e-16	2.29224e-16	4.58502e-16	4.58676e-16	3.39532e-06	t=0.16. Integrating Breit-Wigner distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	2.28344e-08	t=0.3. 	new:	1.21223e-10	1.21223e-10	1.21223e-10	1.21223e-10	2.28344e-08	t=0.25. 	ROOT:	2.1239e-16	2.29339e-16	4.58677e-16	5.73346e-16	2.28344e-08	t=0.2. [ OK ] Roo1DIntegrator.ConvergenceSettings_breitWig (1691 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_Erf. Integrating Gaussian distribution, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	7.08849e-07	1.10954e-07	3.73492e-06	5.0379e-06	5.42401e-06	t=0.04. 	new:	1.1389e-09	4.99603e-11	6.97092e-09	1.01533e-08	5.42401e-06	t=0.07. 	ROOT:	1.64064e-16	1.47929e-16	3.92701e-16	5.06943e-16	5.42401e-06	t=0.03. Integrating Gaussian distribution, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	5.85915e-11	5.85915e-11	5.92462e-11	5.93042e-11	5.93189e-11	t=0.02. 	new:	2.36704e-12	2.36701e-12	2.36767e-12	2.36784e-12	5.93189e-11	t=0.02. 	ROOT:	1.74104e-16	1.77729e-16	3.55466e-16	5.33192e-16	5.93189e-11	t=0.07. Integrating Gaussian distribution, relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	5.78644e-11	5.78644e-11	5.78648e-11	5.78648e-11	5.78651e-11	t=0.03. 	new:	2.36649e-12	2.36652e-12	2.3667e-12	2.36688e-12	5.78651e-11	t=0.06. 	ROOT:	1.75032e-16	1.77734e-16	3.55467e-16	5.33201e-16	5.78651e-11	t=0.05. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:200,usability,stop,stops,200,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:228,usability,perform,performance,228,"[RF] Rewrite RooIntegrator1D.; After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:. ```. Integrating log(a*x), relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04. 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03. 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14. Integrating log(a*x), relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19. 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41. 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3. Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06. Integrating log(a*x), relEps = 1e-08. 	 	mean 	median 	q95 	q99 	max. 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26. 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48. 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38. [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms). [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4. Integrating Polynomial 4th order, relEps = 0.001. 	 	mean 	median 	q95 	q99 	max. 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04. 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05. 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05. Integrating Polynomial 4th order, relEps = 1e-06. 	 	mean 	median 	q95 	q99 	max. 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05. 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04. 	ROOT:	1.44538e-16	2.12768e-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6633:6,deployability,Updat,Update,6,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:6,safety,Updat,Update,6,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:29,safety,prevent,prevent,29,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:64,safety,Prevent,Prevent,64,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:6,security,Updat,Update,6,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:29,security,preven,prevent,29,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6633:64,security,Preven,Prevent,64,[gui] Update TGClient.cxx to prevent null pointer dereference.; Prevent null pointer dereference. Tag @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6634:7,deployability,Updat,Update,7,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:1,energy efficiency,core,core,1,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:7,safety,Updat,Update,7,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:33,safety,prevent,prevent,33,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:68,safety,Prevent,Prevent,68,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:7,security,Updat,Update,7,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:33,security,preven,prevent,33,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:68,security,Preven,Prevent,68,[core] Update TCollection.cxx to prevent null pointer dereference.; Prevent null pointer dereference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/issues/6635:113,availability,down,downloading,113,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:279,availability,down,downloading,279,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:97,deployability,build,builds,97,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:125,deployability,depend,dependencies,125,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:125,integrability,depend,dependencies,125,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:188,interoperability,share,share,188,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:125,modifiability,depend,dependencies,125,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:238,modifiability,paramet,parameter,238,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:28,performance,TIME,TIMEOUT,28,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:165,performance,time,timeout,165,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:229,performance,TIME,TIMEOUT,229,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:28,safety,TIMEOUT,TIMEOUT,28,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:125,safety,depend,dependencies,125,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:165,safety,timeout,timeout,165,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:229,safety,TIMEOUT,TIMEOUT,229,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:125,testability,depend,dependencies,125,"CMake ExternalProject: add `TIMEOUT`; ### Explain what you would like to see improved. We had CI builds stuck in downloading dependencies, e.g. VecCore. That should timeout. ### Optional: share how it could be improved. Add the `TIMEOUT` parameter to all `ExternalProject` calls downloading sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/pull/6636:19,security,sign,signedness,19,[cling] Force char-signedness of host. Fixes #6465.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6636
https://github.com/root-project/root/issues/6637:150,deployability,updat,updated-pyroot-in-current-master-,150,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:168,energy efficiency,current,current-master-,168,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:327,integrability,pub,public,327,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:37,modifiability,inherit,inheritance,37,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:150,safety,updat,updated-pyroot-in-current-master-,150,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:150,security,updat,updated-pyroot-in-current-master-,150,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:758,usability,behavi,behavior,758,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:841,usability,behavi,behaviour,841,"[PyROOT] Infinite recursion in cross inheritance when invoking method of base class; ### Describe the bug. Reported in:. https://root-forum.cern.ch/t/updated-pyroot-in-current-master-6-23-01. The following is a standalone reproducer. When running the code below:. ```python. import cppyy. cppyy.cppdef("""""". class MyCppClass {. public:. virtual void MyMethod() { cout << ""In C++"" << endl; }. virtual ~MyCppClass() {}. };. """"""). class MyPyClass(cppyy.gbl.MyCppClass):. def MyMethod(self):. super(MyPyClass, self).MyMethod(). print(""In Python""). a = MyPyClass(). a.MyMethod(). ```. it goes in infinite recursion when invoking `a.MyMethod()`, in particular in `super(MyPyClass, self).MyMethod()`, which calls again the `MyMethod` defined in Python. ### Expected behavior. That `super(MyPyClass, self).MyMethod()` invokes `MyCppClass::MyMethod` (behaviour of old PyROOT). ### To Reproduce. Described above. ### Setup. ROOT 6.23/01, Ubuntu18, compiled from sources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6640:823,availability,error,error,823,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:869,availability,error,error,869,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:973,availability,fault,faulty,973,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1646,availability,Operat,Operating,1646,"tiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1721,availability,down,download,1721,"triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_sys",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3571,availability,Error,ErrorHandler,3571,"___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:894,deployability,patch,patch,894,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1469,deployability,build,build,1469,"ay's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1634,deployability,version,version,1634,"s merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1703,deployability,instal,install,1703,"ile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1991,deployability,Stack,Stack,1991,"er that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3077,deployability,Stack,StackTrace,3077,"ll: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:973,energy efficiency,fault,faulty,973,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:2594,energy efficiency,optim,optimized,2594,"dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:2736,energy efficiency,optim,optimized,2736," it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3003,energy efficiency,core,core,3003," the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3149,energy efficiency,core,core,3149," new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3502,energy efficiency,core,core,3502,") at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3918,energy efficiency,core,core,3918,"est/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:4264,energy efficiency,core,core,4264,"on=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:4572,energy efficiency,core,core,4572,"orHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:4898,energy efficiency,core,core,4898,"/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5030,energy efficiency,alloc,alloc,5030,"ation=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5097,energy efficiency,core,core,5097," file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5241,energy efficiency,core,core,5241,"ams/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5338,energy efficiency,optim,optimized,5338,"7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5398,energy efficiency,core,core,5398,"fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5505,energy efficiency,optim,optimized,5505,"ger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5565,energy efficiency,core,core,5565,"root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5684,energy efficiency,optim,optimized,5684,"3e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5846,energy efficiency,optim,optimized,5846,"0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5999,energy efficiency,optim,optimized,5999,"OT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109. #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:6187,energy efficiency,core,core,6187,"bj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109. #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:623. #24 0x00007fb64cb20ee4 in TFileMerger::PartialMerge (this=0x7ffcc0391e90, in_type=12) at /home/vpadulan/Programs/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:7459,energy efficiency,core,core,7459," (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109. #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:623. #24 0x00007fb64cb20ee4 in TFileMerger::PartialMerge (this=0x7ffcc0391e90, in_type=12) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:864. #25 0x00007fb64cb1e4e9 in TFileMerger::Merge (this=0x7ffcc0391e90) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:371. #26 0x00000000004024ea in main () at tfilemerger_setmaxtreesize.cpp:47. Aborted (core dumped). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1634,integrability,version,version,1634,"s merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1634,modifiability,version,version,1634,"s merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:823,performance,error,error,823,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:869,performance,error,error,869,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:973,performance,fault,faulty,973,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:2594,performance,optimiz,optimized,2594,"dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:2736,performance,optimiz,optimized,2736," it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3571,performance,Error,ErrorHandler,3571,"___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5338,performance,optimiz,optimized,5338,"7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5505,performance,optimiz,optimized,5505,"ger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5684,performance,optimiz,optimized,5684,"3e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5846,performance,optimiz,optimized,5846,"0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:5999,performance,optimiz,optimized,5999,"OT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458. #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400. #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45. #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91. #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178. #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503. #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542. #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178. #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792. #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539. #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875. #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109. #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:973,reliability,fault,faulty,973,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1002,reliability,doe,doesn,1002,"Merger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3988,reliability,DoE,DoError,3988,"oject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922. #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965. #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354. #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:823,safety,error,error,823,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:869,safety,error,error,869,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:894,safety,patch,patch,894,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:973,safety,fault,faulty,973,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1423,safety,input,input,1423,"eport, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3571,safety,Error,ErrorHandler,3571,"___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:894,security,patch,patch,894,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1925,testability,context,context,1925,"hat the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1954,testability,context,context,1954," files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"")",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1997,testability,trace,trace,1997,"t doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27. #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:521,usability,clear,clear,521,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:569,usability,behavi,behavior,569,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:712,usability,behavi,behaviour,712,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:823,usability,error,error,823,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:869,usability,error,error,869,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:937,usability,behavi,behaviour,937,"TFileMerger output file is deleted when TTree::ChangeFile is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1054,usability,behavi,behavior,1054,"is triggered by reaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1072,usability,clear,clear,1072,"eaching a file size greater than TTree::GetMaxTreeSize; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1278,usability,behavi,behavior,1278,"s.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergero",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:1423,usability,input,input,1423,"eport, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. This issue is related to #6523 . When TFileMerger is merging multiple files into one output file, if the `TTree::ChangeFile` behaviour is triggered, the output file of the merger (`fOutputFile`) will be deleted, thus triggering a fatal error in `TFileMerger::RecursiveRemove`. This error came out after the patch provided by #6570 and shows that the behaviour of changing files is also faulty with TFileMerger that doesn't use `TMemFile` for its output. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The output file of TFileMerger is never deleted, thus all the merging can happen correctly. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. See the following reproducer https://gist.github.com/vepadulano/cf52f6326ae2058c36a35d08dee3a258. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master. Fedora 32. `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`. ### Additional context. <!--. Add any other context about the problem here. -->. Stack trace of the reproducer. ```. Fill: Switching to new file: filemergerinput_1.root. Fill: Switching to new file: filemergerinput_2.root. Fill: Switching to new file: filemergeroutput_1.root. Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb). aborting. #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6640:3571,usability,Error,ErrorHandler,3571,"___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffcc038dd08, options=options. entry=0) at waitpid.c:38. #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172. #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120. #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174. #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", ap=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/foundation/src/TError.cxx:152. #7 0x00007fb64d14acad in TObject::DoError (this=0x7ffcc0391e90, level=6000, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcc0390628) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:857. #8 0x00007fb64d14b0e5 in TObject::Fatal (this=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6640
https://github.com/root-project/root/issues/6641:1063,energy efficiency,current,current,1063,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:163,safety,test,test,163,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:378,safety,test,test,378,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:603,safety,test,test,603,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:666,safety,test,test,666,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:947,safety,test,test,947,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:1304,safety,valid,valid,1304,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:163,testability,test,test,163,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:378,testability,test,test,378,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:603,testability,test,test,603,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:666,testability,test,test,666,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:947,testability,test,test,947,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:134,usability,minim,minimal,134,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6641:582,usability,Close,Close,582,"Misleading warning from TTreeReader::GetEntries; In certain cases `TTreeReader::GetEntries` gives an inappropriate warning. Here is a minimal example:. ```C++. // test.C. #include <iostream>. #include <string>. #include <TChain.h>. #include <TFile.h>. #include <TTreeReader.h>. #include <TTreeReaderValue.h>. void WriteTestFiles() {. for (int i = 0; i < 2; ++i) {. TFile file((""test"" + std::to_string(i + 1) + "".root"").c_str(), ""recreate"");. TTree tree(""tree"", """");. int n = 1;. TBranch *branch = tree.Branch(""n"", &n);. branch->SetTitle(""Title"");. tree.Fill();. tree.Write();. file.Close();. }. }. void test() {. WriteTestFiles();. TChain chain(""tree"");. chain.Add(""test*.root"");. TTreeReader reader;. reader.SetTree(&chain);. TTreeReaderValue<int> n{reader, ""n""};. std::cout << reader.GetTree()->GetBranch(""n"")->GetTitle() << std::endl;. std::cout << reader.GetEntries(true) << std::endl; // Gives warning. }. ```. Running this as `root -q -b -l test.C` in ROOT 6.20/04 or 6.22/02 gives the following warning:. ```. Warning in <TTreeReader::SetEntryBase()>: The current tree in the TChain tree has changed (e.g. by TTree::Process) even though TTreeReader::SetEntry() was called, which switched the tree again. Did you mean to call TTreeReader::SetLocalEntry()? ```. I believe the code in the snippet is valid and hence the warning should not be printed. The warning disappears if the calls to `reader.GetTree` and `reader.GetEntries` are swapped or if another call to `reader.GetEntries` is inserted before `reader.GetTree`. This might be related to the issue reported [here](https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484), which has since been fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6641
https://github.com/root-project/root/issues/6642:70,energy efficiency,draw,drawing,70,"THStack behaviour is not aligned with behaviour of other objects when drawing - TopMargin is non-zero; Please see. https://root-forum.cern.ch/t/thstack-what-is-the-correct-way-to-set-the-y-axis-limits/41851/12. In short,. THStack appears to have a default non-zero value of ""SetTopMargin"". whereas other objects have default value of zero. (TH2D for example)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6642
https://github.com/root-project/root/issues/6642:8,usability,behavi,behaviour,8,"THStack behaviour is not aligned with behaviour of other objects when drawing - TopMargin is non-zero; Please see. https://root-forum.cern.ch/t/thstack-what-is-the-correct-way-to-set-the-y-axis-limits/41851/12. In short,. THStack appears to have a default non-zero value of ""SetTopMargin"". whereas other objects have default value of zero. (TH2D for example)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6642
https://github.com/root-project/root/issues/6642:38,usability,behavi,behaviour,38,"THStack behaviour is not aligned with behaviour of other objects when drawing - TopMargin is non-zero; Please see. https://root-forum.cern.ch/t/thstack-what-is-the-correct-way-to-set-the-y-axis-limits/41851/12. In short,. THStack appears to have a default non-zero value of ""SetTopMargin"". whereas other objects have default value of zero. (TH2D for example)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6642
https://github.com/root-project/root/pull/6643:35,security,sign,signature,35,[ntuple] Improve RFieldBase::Clone signature; - Make it `const`. - Return a unique pointer instead of a raw pointer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6643
https://github.com/root-project/root/issues/6645:935,availability,Operat,Operating,935,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:1010,availability,down,download,1010,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:12,deployability,instal,installing,12,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:28,deployability,version,version,28,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:856,deployability,build,build,856,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:923,deployability,version,version,923,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:992,deployability,instal,install,992,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:28,integrability,version,version,28,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:923,integrability,version,version,923,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:28,modifiability,version,version,28,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:923,modifiability,version,version,923,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:810,safety,input,input,810,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:1064,testability,context,context,1064,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:1093,testability,context,context,1093,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:454,usability,clear,clear,454,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:502,usability,behavi,behavior,502,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:533,usability,behavi,behavior,533,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:551,usability,clear,clear,551,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:665,usability,behavi,behavior,665,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/issues/6645:810,usability,input,input,810,"crash after installing root version v6-22-00 on suse Leap 15-2; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->. [bugs.txt](https://github.com/root-project/root/files/5383141/bugs.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6645
https://github.com/root-project/root/pull/6647:138,availability,error,error,138,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:20,deployability,fail,failing,20,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:115,deployability,fail,fail,115,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:209,deployability,build,build,209,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:259,deployability,build,build,259,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:305,deployability,fail,failed,305,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:381,deployability,build,build,381,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:10,integrability,coupl,couple,10,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:191,interoperability,share,shared,191,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:10,modifiability,coupl,couple,10,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:138,performance,error,error,138,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:20,reliability,fail,failing,20,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:115,reliability,fail,fail,115,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:305,reliability,fail,failed,305,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:138,safety,error,error,138,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:10,testability,coupl,couple,10,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:295,testability,Assert,Assertion,295,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:138,usability,error,error,138,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6647:457,usability,tool,tools,457,"Disable a couple of failing roofit tutorials on Windows; After the commits of 14.10.2020, several roofit tutorials fail with this kind of error:. ```. Info in <TWinNTSystem::ACLiC>: creating shared library C:/build/night/LABEL/windows10/SPEC/default/V/master/build/runtutorials/MyPdfV3_cxx.dll. Assertion failed: !CurTokenLexer && ""Cannot #include a file inside a macro!"", file C:\build\night\LABEL\windows10\SPEC\default\V\master\root\interpreter\llvm\src\tools\clang\lib\Lex\PPLexerChange.cpp, line 73. ```. So let's disable them until the problem is understood and fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6647
https://github.com/root-project/root/pull/6650:5,deployability,Continu,Continue,5,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:358,deployability,build,build,358,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:18,integrability,batch,batch,18,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:24,integrability,interfac,interface,24,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:65,integrability,batch,batch,65,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:71,integrability,interfac,interface,71,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:181,integrability,interfac,interface,181,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:309,integrability,batch,batch,309,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:24,interoperability,interfac,interface,24,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:71,interoperability,interfac,interface,71,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:181,interoperability,interfac,interface,181,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:24,modifiability,interfac,interface,24,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:71,modifiability,interfac,interface,71,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:181,modifiability,interfac,interface,181,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:18,performance,batch,batch,18,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:65,performance,batch,batch,65,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:309,performance,batch,batch,309,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:208,safety,test,testing,208,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/pull/6650:208,testability,test,testing,208,"[RF] Continue new batch interface; Add more functionality to new batch interface, notably. - The direct retrieval of spans from datasets / data histograms. - Code that uses the new interface in RooNLLVar for testing. For the moment protected by an `#ifdef ROOFIT_NEW_BATCH_INTEFACE`. - An implementation of a batch computation for the RooProdPdf. @phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DROOFIT_NEW_BATCH_INTERFACE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6650
https://github.com/root-project/root/issues/6651:44,energy efficiency,Current,Currently,44,"Enable http/webgui/eve7 tutorials as tests; Currently http/webgui/eve7 tutorials are vetoed because of many reasons. But main reason - such tutorials designed so that `THttpServer` should runs forever . that user can test them in the web browsers. This can be changed. All tutorials used in ROOT testing started with arguments `root -b -l -q tutorial_name.C`. In tutorials itself one could detect that using something like:. ```. bool test_mode = gApplication->Argn() > 3 &&. !strcmp(gApplication->Argv(1),""-b"") && . !strcmp(gApplication->Argv(2),""-l"") && . !strcmp(gApplication->Argv(3),""-q"");. ```. Especially `-q` argument is clear sign that macro should not be running forever. Alternatively, one can set special environment variable and test it inside tutorials with:. ```. bool test_mode = gSystem->Getenv(""ROOT_TESTING"") != nullptr;. ```. But this requires that ROOT_TESTING environment variable should be set before. In any case - if such `test_mode` detected, macro should behaves differently:. 1. Do not start real http server while it most probably will conflict with other tutorials running in parallel. 2. Run macro for only limited number of loops for ~3 seconds. 3. Check production of png images - for most of these tutorials `THttpServer` or `RCanvas` or `REve` can generate image.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6651
