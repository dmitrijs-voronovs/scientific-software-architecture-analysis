id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/15924:617,safety,modul,module,617,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:737,safety,modul,module,737,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:880,safety,modul,module,880,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:1721,security,Team,Team,1721,"o`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:448,testability,Trace,Traceback,448,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:2202,testability,context,context,2202,"o`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:366,usability,help,help,366,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:528,usability,User,Users,528,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:647,usability,User,Users,647,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:784,usability,User,Users,784,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:927,usability,User,Users,927,"python -c 'import ROOT' fails on macOS if ROOT is built with gnuinstall=ON; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/issues/15924:1959,usability,help,help,1959,"o`import ROOT` in Python, on macOS : . ```. Python 3.9.6 (default, Mar 29 2024, 10:51:09). [Clang 15.0.0 (clang-1500.3.9.4)] on darwin. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>. import cppyy. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>. from ._cpython_cppyy import *. File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>. c = loader.load_cpp_backend(). File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend. raise RuntimeError(""could not load cppyy_backend library""). RuntimeError: could not load cppyy_backend library. >>> quit(). ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```. git clone https://github.com/root-project/root. cd root. mkdir build. cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON. source ../install-2/thisroot.sh. python3 -c 'import ROOT'. ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```. ---------------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosxarm64 on Jun 25 2024, 12:00:47 |. | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |. | With Apple clang version 15.0.0 (clang-1500.3.9.4) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ---------------------------------------------------------------------------. ```. ### Installation method. built from source. ### Operating system. macOS Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15924
https://github.com/root-project/root/pull/15925:69,deployability,updat,update,69,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:199,deployability,updat,updated,199,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:69,safety,updat,update,69,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:169,safety,test,tested,169,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:199,safety,updat,updated,199,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:69,security,updat,update,69,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:199,security,updat,updated,199,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15925:169,testability,test,tested,169,[cmake] fix CMAKE_INSTALL_RPATH path on macOS; # This Pull request:. update the CMAKE_INSTALL_RPATH on macOS . ## Changes or fixes:. fixes #15924 . ## Checklist:. - [X] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15924.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15925
https://github.com/root-project/root/pull/15926:5,availability,Restor,Restore,5,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:25,deployability,build,builds,25,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:117,deployability,build,build,117,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:174,deployability,artifact,artifacts,174,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:233,deployability,log,logic,233,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:5,reliability,Restor,Restore,5,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:262,reliability,doe,doesn,262,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:233,safety,log,logic,233,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:233,security,log,logic,233,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/pull/15926:233,testability,log,logic,233,"[ci] Restore incremental builds; Revert the changes to `build_root.py` from commit 542b98b2cc (""[ci] Add alma9 clang build"") since they were not reflected when uploading the artifacts which could consequently not be found. The extra logic of appending the image doesn't seem needed, the compiler is part of the options.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15926
https://github.com/root-project/root/issues/15927:1374,availability,Operat,Operating,1374,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:871,deployability,depend,depends,871,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1323,deployability,version,version,1323,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1344,deployability,Instal,Installation,1344,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:236,energy efficiency,core,core,236,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:945,energy efficiency,Power,PowerPC,945,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:436,integrability,target system,target system,436,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:871,integrability,depend,depends,871,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1323,integrability,version,version,1323,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:910,interoperability,platform,platform,910,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1203,interoperability,standard,standard,1203,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:871,modifiability,depend,depends,871,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1218,modifiability,evolv,evolved,1218,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1323,modifiability,version,version,1323,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:13,reliability,doe,does,13,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:871,safety,depend,depends,871,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1233,safety,compl,complete,1233,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:29,security,sign,signed,29,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:326,security,sign,signed,326,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:503,security,sign,signed,503,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:852,security,sign,signedness,852,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1020,security,sign,signed,1020,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1058,security,sign,signed,1058,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1110,security,sign,signed,1110,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1233,security,compl,complete,1233,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:680,testability,unit,units,680,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:871,testability,depend,depends,871,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:1412,testability,context,context,1412,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/issues/15927:407,usability,efficien,efficiently,407,"RtypesCore.h does not have a signed character type; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The Char_t typedef here:. https://github.com/root-project/root/blob/4cf09dc362036e22eaa687cd2566fabb6c8ed693/core/foundation/inc/RtypesCore.h#L37. is incorrect--a bare `char` is not guaranteed to be signed or unsigned. > char — type for character representation which can be most efficiently processed on the target system (has the same representation and alignment as either signed char or unsigned char, but is always a distinct type). [Multibyte characters strings](https://en.cppreference.com/w/cpp/string/multibyte) use this type to represent code units. For every value of type unsigned char in range [​0​, 255], converting the value to char and then back to unsigned char produces the original value.(since C++11) The signedness of char depends on the compiler and the target platform: the defaults for ARM and PowerPC are typically unsigned, the defaults for x86 and x64 are typically signed. To actually guarantee to be a signed type, `Char_t` would have to be declared as `signed char`. From another issue, it appears ROOT is moving away from Rtypes.h since the C++ standard has a evolved a more complete type system, so this may be a ""who cares"" issue... ### Reproducer. n/a. ### ROOT version. latest. ### Installation method. n/a. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15927
https://github.com/root-project/root/pull/15928:780,deployability,scale,scale,780,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:157,energy efficiency,Draw,Draw,157,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:200,energy efficiency,draw,draw,200,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:295,energy efficiency,draw,draw,295,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:349,energy efficiency,draw,draw,349,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:464,energy efficiency,draw,drawing,464,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:546,energy efficiency,draw,drawingJSON,546,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:780,energy efficiency,scale,scale,780,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:780,modifiability,scal,scale,780,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:780,performance,scale,scale,780,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:317,testability,context,context,317,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:387,testability,context,context,387,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:325,usability,menu,menu,325,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:334,usability,Support,Support,334,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:379,usability,support,support,379,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:395,usability,menu,menu,395,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15928:822,usability,close,closer,822,"[jsroot] dev 26/06/2024 with `THStack` and `TMultiGraph` fixes; 1. TProfile and TProfile2D projections https://github.com/root-project/root/issues/15851. 2. Draw total histogram from TEfficiency when draw option starts with 'b'. 3. Let redraw TEfficiency, THStack and TMultiGraph with different draw options via hist context menu. 4. Support 'pads' draw options for TMultiGraph, support context menu for it. 5. Internals - do not select pad (aka gPad) for objects drawing, always use assigned pad painter. 6. Fix - properly save zoomed ranges in drawingJSON(). 7. Fix - properly redraw TMultuGraph. Resolves many issues with `THStack` and `TMultiGraph` handling. For instance, macro `tutorials/legacy/mlp/mlpRegression.C` with multi-graph works properly with web graphics. Also y scale range selection for THStack is much closer to original ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15928
https://github.com/root-project/root/pull/15929:644,availability,operat,operator,644,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1397,deployability,updat,updated,1397,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1319,performance,time,time,1319,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:7,safety,prevent,prevent,7,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1367,safety,test,tested,1367,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1397,safety,updat,updated,1397,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:7,security,preven,prevent,7,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:23,security,access,access,23,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:98,security,access,access,98,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1397,security,updat,updated,1397,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15929:1367,testability,test,tested,1367,"[tree] prevent nullptr access in ttreereader; # This Pull request:. ## Changes or fixes:. nullptr access when branch is not found. Fixes first part of https://its.cern.ch/jira/browse/ROOT-8842 by @jpivarski. `GetNextRange(int)`. but it still crashes later at:. ```. 1 frombuf                                                      Bytes.h                  384 0x7f62c0ded275 . 2 ROOT::Experimental::TTreeReaderValueFast<float>::Deserialize TTreeReaderValueFast.hxx 171 0x7f62b6563bd0 . 3 ROOT::Experimental::TTreeReaderValueFast<float>::Get         TTreeReaderValueFast.hxx 162 0x7f62b6563b42 . 4 ROOT::Experimental::TTreeReaderValueFast<float>::operator *  TTreeReaderValueFast.hxx 165 0x7f62b6563b60 . 5 reader                                                       reader.C                 30  0x7f62b6563004 . 6 ??                                                                                        0x7f62b7e280bc . 7 ??                                                                                        0x7ffda58c2b60 . 8 ??                                                                                        0x7ffda58c2b28 . 9 ??                                                                                                       . ```. and this part, I do not know how to solve. The crash happens every time at a different entry. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15929
https://github.com/root-project/root/pull/15930:1,deployability,build,build,1,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:48,deployability,build,build,48,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:221,deployability,build,build,221,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:227,deployability,configurat,configuration,227,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:227,integrability,configur,configuration,227,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:227,modifiability,configur,configuration,227,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:248,safety,test,test,248,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:227,security,configur,configuration,227,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:248,testability,test,test,248,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15930:94,usability,clear,clear,94,"[build] Remove hsimple tutorial from main CMake build; The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15930
https://github.com/root-project/root/pull/15931:64,availability,Error,Errors,64,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:75,deployability,stack,stacked,75,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:210,deployability,log,log,210,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:214,deployability,scale,scale,214,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:300,deployability,stack,stack,300,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:52,energy efficiency,draw,drawing,52,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:214,energy efficiency,scale,scale,214,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:292,energy efficiency,draw,drawing,292,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:271,integrability,sub,subpad,271,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:338,integrability,sub,subpads,338,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:428,integrability,sub,subpads,428,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:214,modifiability,scal,scale,214,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:323,modifiability,Reu,Reuse,323,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:64,performance,Error,Errors,64,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:214,performance,scale,scale,214,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:64,safety,Error,Errors,64,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:210,safety,log,log,210,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:210,security,log,log,210,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:210,testability,log,log,210,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:64,usability,Error,Errors,64,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15931:281,usability,clear,clear,281,"[thstack] fix GetMinimum/GetMaximum, improve ""pads"" drawing; 1. Errors for stacked histogram were not taken into account. Therefore methods were returning wrong values. 2. Protect GetMinimum method for case of log scale. 3. Improve pads options:. 3.1. Always ensure that subpad is clear when drawing stack histograms. 3.2. Reuse existing subpads, no need to divide canvas again. 3.3. Use TPad::Add() method to add histograms to subpads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15931
https://github.com/root-project/root/pull/15932:188,availability,error,errors,188,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:243,deployability,build,build,243,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:1,energy efficiency,core,core,1,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:188,performance,error,errors,188,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:188,safety,error,errors,188,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:205,safety,test,tests,205,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:263,safety,test,test,263,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:205,testability,test,tests,205,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:258,testability,unit,unit,258,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:263,testability,test,test,263,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:170,usability,user,user,170,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:188,usability,error,errors,188,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/pull/15932:325,usability,user,user-attachments,325,"[core] swap table search and fPID; # This Pull request:. ## Changes or fixes:. Fixes https://its.cern.ch/jira/browse/ROOT-3594. This explores if the fix suggested by the user triggers any errors in the CI tests. I did not check myself a local build, nor the unit test (attached below). [clones_test_3.zip](https://github.com/user-attachments/files/15984085/clones_test_3.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15932
https://github.com/root-project/root/issues/15933:537,availability,Operat,Operating,537,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:339,deployability,contain,contains,339,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:465,deployability,version,version,465,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:508,deployability,Instal,Installation,508,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:14,integrability,filter,filter,14,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:132,integrability,filter,filter,132,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:465,integrability,version,version,465,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:330,modifiability,variab,variable,330,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:465,modifiability,version,version,465,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:574,testability,context,context,574,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:31,usability,tool,tools,31,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/issues/15933:52,usability,workflow,workflow,52,"changed-in-PR filter of ""clang-tools code analysis"" workflow is leaky; ### Explain what you would like to see improved and how. The filter seems to include files that were changed since the last branch off of master. Take for instance https://github.com/root-project/root/actions/runs/9682129594/job/26714405775. The COMMIT_FILES variable contains many files not touched in this PR. This makes the output quite tedious to parse and the PR hard to improve. ### ROOT version. Irrelevant, it is a CI issue. ### Installation method. CI. ### Operating system. CI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15933
https://github.com/root-project/root/pull/15934:15,deployability,version,version,15,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:26,deployability,build,build,26,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:32,deployability,artifact,artifacts,32,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:73,deployability,version,versions,73,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:82,deployability,instal,installed,82,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:15,integrability,version,version,15,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:73,integrability,version,versions,73,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:15,modifiability,version,version,15,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:73,modifiability,version,versions,73,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/pull/15934:108,security,ident,identical,108,[ci] Add MacOS version to build artifacts path; To differentiate between versions installed on runners with identical labels.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15934
https://github.com/root-project/root/issues/15936:353,availability,failur,failures,353,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:582,availability,Operat,Operating,582,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:55,deployability,build,builds,55,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:202,deployability,build,builds,202,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:353,deployability,fail,failures,353,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:522,deployability,version,version,522,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:543,deployability,Instal,Installation,543,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:522,integrability,version,version,522,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:503,interoperability,platform,platform,503,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:522,modifiability,version,version,522,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:353,performance,failur,failures,353,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:353,reliability,fail,failures,353,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:142,safety,test,test,142,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:311,safety,avoid,avoid,311,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:385,safety,test,test,385,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:476,safety,test,test,476,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:142,testability,test,test,142,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:385,testability,test,test,385,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:476,testability,test,test,476,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/issues/15936:663,testability,context,context,663,"roottest-root-hist-h2root broken on Alma9 march=native builds; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The test roottest-root-hist-h2root broken on Alma9 march=native builds. This PR https://github.com/root-project/root/pull/15935 deactivated FORTRAN on Alma9 march=native to avoid confusing developers with ""expected failures"" (broken windows). The test should be fixed and the PR reverted ASAP. ### Reproducer. Just run the aforementioned test on the aforementioned platform. ### ROOT version. master. ### Installation method. from sources. ### Operating system. Linux, Alma9, march=native on modern Intel/AMD. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15936
https://github.com/root-project/root/pull/15937:1955,availability,consist,consistent,1955,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1255,deployability,continu,continues,1255,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1328,energy efficiency,reduc,reduced,1328,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:811,integrability,sub,sub-classes,811,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:915,integrability,Sub,SubClass,915,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:972,integrability,Sub,SubClass,972,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:116,interoperability,specif,specified,116,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:382,interoperability,standard,standard,382,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1503,interoperability,convers,conversion,1503,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1290,performance,content,contentiously,1290,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:401,safety,detect,detect,401,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1517,safety,compl,completed,1517,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1793,safety,safe,safe,1793,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:401,security,detect,detect,401,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1232,security,modif,modifications,1232,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1517,security,compl,completed,1517,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1177,testability,simpl,simple,1177,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:134,usability,support,support,134,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:413,usability,custom,custom,413,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:803,usability,support,support,803,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1177,usability,simpl,simple,1177,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1416,usability,support,support,1416,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1434,usability,user,user,1434,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1799,usability,Interact,Interactive,1799,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/pull/15937:1955,usability,consist,consistent,1955,"[draft] [DO NOT MERGE] Introducing `TObject::PaintOn()` method; It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:. ```. void TObject::Paint(Option_t *opt). {. if (gPad) . PaintOn(gPad);. }. ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect . if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked. ```. if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)). obj->Paint(lnk->GetOption());. else. obj->PaintOn(this, lnk->GetOption());. ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code. PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. . But contentiously usage of `gPad` will be reduced. Main goal - `gPad` should not be touched when painting ROOT classes. . Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare . special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and . advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, . but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15937
https://github.com/root-project/root/issues/15938:1155,availability,Operat,Operating,1155,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:398,deployability,upgrad,upgrade,398,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1069,deployability,version,version,1069,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1117,deployability,Instal,Installation,1117,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:910,energy efficiency,Load,Load,910,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1541,energy efficiency,current,current,1541,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1069,integrability,version,version,1069,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:215,interoperability,share,shared-library-doesnt-catch-changes-made-in-cint,215,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:842,interoperability,share,shared,842,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1356,interoperability,share,shared,1356,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1553,interoperability,standard,standard,1553,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:26,modifiability,variab,variables,26,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:318,modifiability,variab,variables,318,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:398,modifiability,upgrad,upgrade,398,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1069,modifiability,version,version,1069,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1286,modifiability,variab,variable,1286,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:910,performance,Load,Load,910,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:230,reliability,doe,doesnt-catch-changes-made-in-cint,230,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1224,testability,context,context,1224,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/issues/15938:1460,testability,unit,unit,1460,"Merging issue with global variables between compiled and interpreted code; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++. // calo.h. #ifndef __CALO__. #define __CALO__. namespace calo {. int nUnits = 0;. void setnUnits (int n) {. 	nUnits = n;. }. }. #endif. // insert.h. #ifndef _cali_. #define _cali_. void insert();. #endif. // insert.C. #include <iostream>. #include ""calo.h"". #include ""insert.h"". using namespace std;. void insert() {. cout << ""DEBUG\t"" << calo::nUnits << endl;. }. ```. ```. $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C. ```. On the prompt:. ```. gSystem->Load(""libinsert.so""). #include ""calo.h"". #include ""insert.h"". insert(). calo::setnUnits(3). insert(). ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15938
https://github.com/root-project/root/pull/15939:572,deployability,contain,contain,572,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:806,deployability,contain,contains,806,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1255,deployability,updat,updated,1255,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:598,energy efficiency,current,current,598,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:698,energy efficiency,current,current,698,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:746,energy efficiency,current,current,746,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1146,energy efficiency,load,load,1146,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:278,integrability,interfac,interface,278,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:358,integrability,interfac,interface,358,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:669,integrability,interfac,interface,669,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:278,interoperability,interfac,interface,278,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:358,interoperability,interfac,interface,358,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:669,interoperability,interfac,interface,669,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:278,modifiability,interfac,interface,278,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:358,modifiability,interfac,interface,358,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:669,modifiability,interfac,interface,669,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1146,performance,load,load,1146,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:178,safety,prevent,prevents,178,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:247,safety,compl,completely,247,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1225,safety,test,tested,1225,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1255,safety,updat,updated,1255,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:178,security,preven,prevents,178,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:247,security,compl,completely,247,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:991,security,access,access,991,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1255,security,updat,updated,1255,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15939:1225,testability,test,tested,1225,"[ntuple] Dynamically activate fields in `RNTupleProcessor`; With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:. 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator. 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15939
https://github.com/root-project/root/pull/15940:246,availability,operat,operator,246,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:457,availability,failur,failure,457,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:517,availability,operat,operator,517,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:457,deployability,fail,failure,457,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:330,energy efficiency,model,model,330,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:405,energy efficiency,model,model,405,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:457,performance,failur,failure,457,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:457,reliability,fail,failure,457,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:232,safety,input,input,232,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:330,security,model,model,330,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:405,security,model,model,405,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15940:232,usability,input,input,232,[tmva][sofie] Introduce not writable initialized tensors in RModel; We need to add a new category of initialized tensors in RModel that are not written in the weight file. These are for example tensors defining the shape and use as input to some operator such as Reshape. Its data are used when parsing and hard-coded then in the model. There is no need to generate or getting t heir value when using the model for inference. This Pull request should fix a failure reported in master after merging the PR on constant operator ( #15837 ).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15940
https://github.com/root-project/root/pull/15942:312,availability,failur,failures,312,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:306,deployability,build,build,306,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:312,deployability,fail,failures,312,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:38,interoperability,prox,proxies,38,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:97,interoperability,prox,proxies,97,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:155,interoperability,prox,proxy,155,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:175,interoperability,prox,proxies,175,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:312,performance,failur,failures,312,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15942:312,reliability,fail,failures,312,"[RF][HS3] Correct cast for collection proxies in RooJSONFactoryWSTool; When exporting collection proxies, the type was only checked against the RooArgList proxy, so RooArgSet proxies would not get correctly exported. It is better to check for the more general `RooAbsCollection` base class. This fixes the build failures on macos-beta. Needs to be backported to 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15942
https://github.com/root-project/root/pull/15943:275,deployability,updat,update,275,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:304,deployability,version,version,304,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:304,integrability,version,version,304,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:304,modifiability,version,version,304,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:275,safety,updat,update,275,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:77,security,ident,identifier,77,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15943:275,security,updat,update,275,"[jupyter] correctly handle TCanvases with same name; Canvas name was used as identifier to track HTML element. . If new canvas with same name was created, old HTML name was overwritten. Therefore add unique ID (pointer) to the canvas name to handle new canvas properly. Also update jsroot link to latest version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15943
https://github.com/root-project/root/pull/15945:66,usability,support,support,66,[RF] Some fixups to the RooFit code generation for AD in order to support CMS likelihoods; More details in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15945
https://github.com/root-project/root/pull/15946:164,deployability,build,builds,164,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:227,deployability,releas,release-notes,227,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:281,integrability,interfac,interfaces,281,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:281,interoperability,interfac,interfaces,281,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:281,modifiability,interfac,interfaces,281,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:269,performance,memor,memory-safe-interfaces,269,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:276,safety,safe,safe-interfaces,276,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15946:269,usability,memor,memory-safe-interfaces,269,[RF] Make ROOT compile again also with `-DROOFIT_MEMORY_SAFE_INTERFACES`; Thanks to Tomas Dado for noticing that this was broken. We should ensure that ROOT always builds with this flag. See also:. * https://root.cern/doc/v632/release-notes.html#compile-your-code-with-memory-safe-interfaces. * https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooFit/Config.h#L16,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15946
https://github.com/root-project/root/pull/15947:185,availability,operat,operation,185,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:316,deployability,contain,containing,316,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:385,deployability,contain,containing,385,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:683,deployability,resourc,resources,683,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1236,deployability,updat,updated,1236,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:226,energy efficiency,current,current,226,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:532,energy efficiency,optim,optimal,532,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:603,energy efficiency,alloc,allocated,603,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:683,energy efficiency,resourc,resources,683,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:954,energy efficiency,alloc,allocating,954,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:438,integrability,sub,subsequently,438,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:205,performance,memor,memory,205,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:352,performance,time,times,352,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:683,performance,resourc,resources,683,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:971,performance,memor,memory,971,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1015,performance,execution time,execution time,1015,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:683,safety,resourc,resources,683,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1206,safety,test,tested,1206,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1236,safety,updat,updated,1236,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1236,security,updat,updated,1236,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:683,testability,resourc,resources,683,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:1206,testability,test,tested,1206,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:205,usability,memor,memory,205,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/pull/15947:971,usability,memor,memory,971,"[matrix] Fast SpMM; # This Pull request:. Implements fast conservative Sparse Matrix Multiplication (SpMM), i.e. C=A*B, where A, B and C are sparse matrices, with remarkable savings in operation count and memory usage. In the current implementation, the number of nonzeros in C is guessed as the number of rows in A containing at least a nonzero entry times the number of columns in B containing at least a nonzero entry. The matrix C is subsequently shrunk to delete entries corresponding to zero elements. This choice is far from optimal: for example, if A and B are diagonal matrices, C is initially allocated as fully dense even if it is diagonal too, with a tremendous waste of resources. In this PR, the number of nonzeros in C is computed in a conservative fashion (i.e. without dropping numerically zero entries in the result matrix C), prior to the matrix product computation itself. This is the best guess for the sparsity pattern of C without allocating extra memory. This PR results in a huge saving in execution time: for example, on randomly generated instances of size 5000 and 1% of non-zero elements, the average speedup with respect to the old implementation is 35x. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes [ROOT-2345](https://its.cern.ch/jira/browse/ROOT-2345).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15947
https://github.com/root-project/root/issues/15948:860,availability,Operat,Operating,860,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:804,deployability,version,version,804,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:830,deployability,Instal,Installation,830,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:628,energy efficiency,Draw,Draw,628,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:804,integrability,version,version,804,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:804,modifiability,version,version,804,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:698,performance,time,time,698,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:734,safety,except,except,734,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/issues/15948:898,testability,context,context,898,"Tex Gyre fonts has a bad side effect ...; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. As well explained in this [forum post](https://root-forum.cern.ch/t/text-rendering-bug-related-to-tex-gyreheros-font-since-v6-32/60032), the Tex Gyre fonts put in action by this [PR](https://github.com/root-project/root/pull/14841) on CMS demand have a very bad side effect: white spaces before special symbols like `#pm` are far too large. The following example shows the problem:. ```. {. auto c = new TCanvas;. auto l1 = new TLatex(.1, 0.9, ""A #pm #in B"");. l1->SetTextFont(42);. l1->SetTextSize(0.05);. l1->Draw();. c->Print(""file.ps"");. c->Print(""file.pdf"");. }. ```. For the time being, there is no obvious fix except reverting the PR. ### Reproducer. see the forum post. ### ROOT version. >= v6.32.00. ### Installation method. any. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15948
https://github.com/root-project/root/pull/15952:228,availability,slo,slots,228,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:312,availability,slo,slots,312,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:468,deployability,patch,patch,468,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:24,energy efficiency,schedul,scheduling,24,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:82,energy efficiency,schedul,scheduler,82,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:291,energy efficiency,schedul,scheduling,291,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:542,energy efficiency,core,cores,542,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:156,integrability,batch,batches,156,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:188,integrability,batch,batch,188,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:204,integrability,batch,batch,204,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:258,integrability,batch,batch,258,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:24,performance,schedul,scheduling,24,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:82,performance,schedul,scheduler,82,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:100,performance,multi-thread,multi-threaded,100,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:156,performance,batch,batches,156,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:188,performance,batch,batch,188,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:204,performance,batch,batch,204,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:258,performance,batch,batch,258,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:291,performance,schedul,scheduling,291,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:531,performance,cach,cached,531,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:228,reliability,slo,slots,228,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:312,reliability,slo,slots,312,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:468,safety,patch,patch,468,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15952:468,security,patch,patch,468,"[ntuple] Improve RDF MT scheduling; Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened. 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15952
https://github.com/root-project/root/pull/15953:615,deployability,updat,updated,615,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:260,energy efficiency,current,currently,260,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:512,modifiability,inherit,inherit,512,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:430,performance,time,time,430,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:585,safety,test,tested,585,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:615,safety,updat,updated,615,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:615,security,updat,updated,615,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15953:585,testability,test,tested,585,"[ntuple] Reader: add option to enable metrics on construction; # This Pull request:. adds the possibility of requesting metrics in `RNTupleReadOptions`. . Since one normally has to call `EnableMetrics()` on the RNTupleReader to start collecting metrics, it is currently not possible to query the metrics gathered during construction of the reader itself. With this new option you can request metrics to be enabled at construction time. As a somewhat arbitrary choice, an RNTupleReader created via `Clone()` will inherit this option from the one it is cloned from. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15953
https://github.com/root-project/root/pull/15954:108,availability,cluster,clusters,108,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:108,deployability,cluster,clusters,108,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:196,deployability,updat,updated,196,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:166,safety,test,tested,166,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:196,safety,updat,updated,196,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:196,security,updat,updated,196,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15954:166,testability,test,tested,166,[ntuple] use RClusterPool in RNTupleMerger; # This Pull request:. adds the use of `RClusterPool` to preload clusters during merging of RNTuples. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15954
https://github.com/root-project/root/pull/15956:24,availability,error,error,24,[v632][RF] MultiProcess error handling; Backport of #15797 to fix the ATLAS Higgs combinations with multiprocessing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15956
https://github.com/root-project/root/pull/15956:24,performance,error,error,24,[v632][RF] MultiProcess error handling; Backport of #15797 to fix the ATLAS Higgs combinations with multiprocessing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15956
https://github.com/root-project/root/pull/15956:24,safety,error,error,24,[v632][RF] MultiProcess error handling; Backport of #15797 to fix the ATLAS Higgs combinations with multiprocessing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15956
https://github.com/root-project/root/pull/15956:24,usability,error,error,24,[v632][RF] MultiProcess error handling; Backport of #15797 to fix the ATLAS Higgs combinations with multiprocessing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15956
https://github.com/root-project/root/issues/15957:406,availability,error,error,406,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:433,availability,Backup,Backup,433,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1396,availability,Operat,Operating,1396,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:16,deployability,Fail,Failed,16,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:856,deployability,Fail,Failed,856,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:925,deployability,Fail,Failed,925,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1272,deployability,version,version,1272,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1299,deployability,Instal,Installation,1299,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:461,integrability,Event,Events,461,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:708,integrability,Event,Event,708,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1272,integrability,version,version,1272,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:894,interoperability,format,format,894,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1272,modifiability,version,version,1272,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:406,performance,error,error,406,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:16,reliability,Fail,Failed,16,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:433,reliability,Backup,Backup,433,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:856,reliability,Fail,Failed,856,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:925,reliability,Fail,Failed,925,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:406,safety,error,error,406,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:433,safety,Backup,Backup,433,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:298,security,Control,ControlPlots,298,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:516,security,Control,ControlPlots,516,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1171,security,Control,ControlPlots,1171,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:298,testability,Control,ControlPlots,298,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:516,testability,Control,ControlPlots,516,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1171,testability,Control,ControlPlots,1171,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1449,testability,context,context,1449,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:273,usability,command,command,273,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:406,usability,error,error,406,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:605,usability,Tool,Tools,605,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:756,usability,Tool,Tools,756,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/issues/15957:1111,usability,command,command,1111,"AttributeError: Failed to get attribute CreateScopeProxy from ROOT ; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I’m a beginner so apologies if this is an annoying question, I’m trying to run Delphes which uses ROOT for Analysis. here is the command: DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. i get following error:. “File “/media/kami/Backup/MG5_aMC_v3_5_4/pp-tt/Events/run_01_decayed_1/Delphes/python/DelphesAnalysis/ControlPlots.py”, line 45, in. from DelphesAnalysis import Delphes. File “/home/kami/1Me/Tools/MG5_aMC_v2_9_19/Delphes/python/DelphesAnalysis/Delphes.py”, line 17, in. root.CreateScopeProxy( “Event” ).str = Event__str. File “/home/kami/1Me/Tools/root/root_install/lib/ROOT/_facade.py”, line 164, in _fallback_getattr. raise AttributeError(“Failed to get attribute {} from ROOT”.format(name)). AttributeError: Failed to get attribute CreateScopeProxy from ROOT”. when i checked ROOT library, there’s no CreateScopeProxy.h file there. ### Reproducer. you can reproduce the issue with running this command while in Delphes/python directory,. DelphesAnalysis/ControlPlots.py -i …/…/delphes_output.root -o controlPlots_demo.root --all -c topConfig.py. ### ROOT version. ROOT 6.32.02. ### Installation method. Built from source, Compiler: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. ### Operating system. Ubuntu 22.04.4 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15957
https://github.com/root-project/root/pull/15958:29,deployability,build,build,29,[ci] Do not add overrides to build name if not applied; # This Pull request:. ## Changes or fixes:. Does not add to the build name the overrides in case they are not used. This PR fixes #15615.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15958
https://github.com/root-project/root/pull/15958:120,deployability,build,build,120,[ci] Do not add overrides to build name if not applied; # This Pull request:. ## Changes or fixes:. Does not add to the build name the overrides in case they are not used. This PR fixes #15615.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15958
https://github.com/root-project/root/pull/15958:100,reliability,Doe,Does,100,[ci] Do not add overrides to build name if not applied; # This Pull request:. ## Changes or fixes:. Does not add to the build name the overrides in case they are not used. This PR fixes #15615.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15958
https://github.com/root-project/root/issues/15959:72,energy efficiency,Current,Currently,72,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:276,energy efficiency,Profil,ProfileLikelihoodTestStat,276,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:320,energy efficiency,Profil,ProfileLikelihoodTestStat,320,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:696,energy efficiency,Profil,ProfileLikelihoodTestStat,696,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:883,energy efficiency,Current,Currently,883,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:772,interoperability,Standard,StandardHypoTestInvDemo,772,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:276,performance,Profil,ProfileLikelihoodTestStat,276,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:320,performance,Profil,ProfileLikelihoodTestStat,320,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:696,performance,Profil,ProfileLikelihoodTestStat,696,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:988,testability,plan,plan,988,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:1069,testability,context,context,1069,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:24,usability,usab,usable,24,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/issues/15959:963,usability,person,personally,963,"[RF] Make Offset(“bin”) usable for CLs method; ### Feature description. Currently, the Offset(“bin”) feature cannot be used for. - RooMinimizer ([ROOT: RooMinimizer Class Reference](https://root.cern.ch/doc/master/classRooMinimizer.html#aa9d82cf348d33423e9d2f62b64b20806)). - ProfileLikelihoodTestStat ([ROOT: RooStats::ProfileLikelihoodTestStat Class Reference](https://root.cern/doc/master/classRooStats_1_1ProfileLikelihoodTestStat.html#a9ec699c073aae63a061941b286183071)). - UseNLLOffset ([ROOT: RooStats Namespace Reference](https://root.cern/doc/master/namespaceRooStats.html#aa3e8e1957a68d767ae126bc21202fe43)). It is really nice if we can use Offset(“bin”) for those cases. For instance, ProfileLikelihoodTestStat is used for CLs method ([ROOT: tutorials/roostats/StandardHypoTestInvDemo.C File Reference 1](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html)). Currently, we cannot use Offset(“bin”) for CLs method if we do not compile ROOT personally. Is there any plan to implement it? ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15959
https://github.com/root-project/root/pull/15960:462,deployability,updat,updated,462,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:15,integrability,translat,translated,15,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:62,integrability,Translat,Translates,62,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:15,interoperability,translat,translated,15,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:62,interoperability,Translat,Translates,62,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:313,modifiability,inherit,inherited,313,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:430,safety,test,tested,430,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:462,safety,updat,updated,462,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:462,security,updat,updated,462,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15960:430,testability,test,tested,430,"math tutorials translated into Python.; # This Pull request:. Translates all ""math"" tutorials into Python. ## Changes or fixes:. It shows creative ways of using C++ methods in Python more than. the usual way of ROOT.gROOT.ProcessLine method. There are some notes. about why we should or shouldn't use some syntax(inherited from C++-ROOT) . in Python. Enjoy them as much as I did reproducing them. ## Checklist:. - [yes] very well tested changes locally. - [yes] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15960
https://github.com/root-project/root/pull/15961:42,availability,cluster,cluster,42,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:107,availability,cluster,cluster,107,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:42,deployability,cluster,cluster,42,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:107,deployability,cluster,cluster,107,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:561,energy efficiency,reduc,reduces,561,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:186,performance,disk,disk,186,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:199,performance,memor,memory,199,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:21,security,ident,identical,21,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:82,security,ident,identical,82,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:167,security,ident,identical,167,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:141,usability,effectiv,effectively,141,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:199,usability,memor,memory,199,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/pull/15961:434,usability,support,support,434,"[ntuple] Deduplicate identical pages in a cluster; For the file backend only, map identical pages within a cluster to the same locator. That effectively de-duplicates identical pages on disk (not in memory though). . As a result, reading code has to be able to deal with pages that don't necessarily reference pair-wise distinct byte ranges. This is difficult to combine with the DAOS caging feature. Same page merging needs explicit support from the backend and is turned off for the DAOS backend. For the nanoAOD and ATLAS OpenData samples, same page merging reduces the file size by about 3.5%.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15961
https://github.com/root-project/root/issues/15962:639,availability,Operat,Operating,639,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:400,deployability,version,version,400,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:598,deployability,Instal,Installation,598,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:626,deployability,Releas,Release,626,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:400,integrability,version,version,400,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:400,modifiability,version,version,400,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:686,testability,context,context,686,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:9,usability,help,help,9,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15962:377,usability,Help,Help,377,"outdated help links; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Most of the links in the source code starting with http://root.cern.ch/root/html/ point to a no longer existing URL. ### Reproducer. grep -r 'root/html' /opt/root_src/*. Another way to reproduce it is to go open a TRootBrowser, right click on a tree, ""Scan"", then click on ""Online Help"" button. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. It could be that changing to `root/htmldoc` solves most of the 404s.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15962
https://github.com/root-project/root/issues/15963:546,availability,slo,slope,546,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:552,availability,slo,slo,552,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1671,availability,Operat,Operating,1671,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1432,deployability,version,version,1432,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1630,deployability,Instal,Installation,1630,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1658,deployability,Releas,Release,1658,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1432,integrability,version,version,1432,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1432,modifiability,version,version,1432,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:522,performance,time,time,522,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:527,performance,time,time,527,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1104,performance,time,time,1104,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:35,reliability,doe,does,35,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:546,reliability,slo,slope,546,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:552,reliability,slo,slo,552,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:328,safety,input,input,328,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1405,safety,input,input,1405,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:76,security,modif,modified,76,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1718,testability,context,context,1718,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:23,usability,MENU,MENU,23,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:28,usability,dialog,dialog,28,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:257,usability,Menu,Menu,257,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:328,usability,input,input,328,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:919,usability,dialog,dialog,919,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15963:1405,usability,input,input,1405,"[metacling] TTree Scan MENU dialog does not work well if kMaxEntries is not modified; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If you open a TRootBrowser, double click on a TFile, right click on TTree, select Scan from the Menu, and write some values in varexp and selection, and click OK, the input is ignored. ![image](https://github.com/root-project/root/assets/10653970/f5a5d60b-64e3-4d70-a592-9870af5f8d44). ```. ************************************************************. * Row * time.time * time_fine * slope.slo * pileup.pi *. ************************************************************. * 0 * 476428 * 44 * 372.48736 * 0 *. * 1 * 1494475 * 36 * 1432.6547 * 0 *. * 2 * 1526983 * 55 * 205.83961 * 0 *. * 3 * 1774924 * 49 * 297.62847 * 0 *. * 4 * 2046332 * -56 * 790.71905 * 0 *. * 5 * 2850089 * 41 * 394.59698 * 0 *. ```. Only if you change kMaxEntries to a fixed value, the dialog data are passed well to the function. ![image](https://github.com/root-project/root/assets/10653970/d00e546a-d055-4b53-b512-d9f9a9ac4a50). ```. ************************. * Row * time *. ************************. * 1799 * 1.045e+09 *. * 1800 * 1.045e+09 *. * 7161 * 1.727e+09 *. * 7162 * 1.727e+09 *. * 9036 * 1.757e+09 *. ```. ### Reproducer. Open a TFile with a TRootBrowser, right-click on TTree, click on Scan, and write some values in varexp and selection, and click OK, the input is ignored. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15963
https://github.com/root-project/root/issues/15964:245,availability,failur,failure,245,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1183,availability,Operat,Operating,1183,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:182,deployability,updat,update,182,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:245,deployability,fail,failure,245,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:293,deployability,releas,release,293,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:338,deployability,releas,release,338,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:472,deployability,releas,release,472,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:851,deployability,version,versions,851,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:951,deployability,contain,container,951,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1000,deployability,log,log,1000,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1065,deployability,log,log,1065,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1088,deployability,version,version,1088,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1149,deployability,Instal,Installation,1149,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:623,integrability,pub,public,623,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:851,integrability,version,versions,851,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1047,integrability,pub,public,1047,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1088,integrability,version,version,1088,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:0,interoperability,Compatib,Compatiblity,0,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:257,modifiability,interm,intermediate,257,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:555,modifiability,interm,intermediate,555,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:851,modifiability,version,versions,851,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1088,modifiability,version,version,1088,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:245,performance,failur,failure,245,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:245,reliability,fail,failure,245,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:182,safety,updat,update,182,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:240,safety,test,test,240,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1000,safety,log,log,1000,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1065,safety,log,log,1065,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:182,security,updat,update,182,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1000,security,log,log,1000,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1065,security,log,log,1065,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:240,testability,test,test,240,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:443,testability,simul,simulation,443,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:663,testability,simpl,simple,663,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1000,testability,log,log,1000,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1065,testability,log,log,1065,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:1225,testability,context,context,1225,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:407,usability,close,closed,407,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:663,usability,simpl,simple,663,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/issues/15964:828,usability,Close,Close,828,"Compatiblity issue: File writting with root 6.32/02 cannot be read back with root 6.10/06; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. While trying to update to LCG_106_ATLAS_3 (root 6.32/02) we encountered a test failure. An intermediate file produce with this release could not be read back with an older release (6.10/06, 6.08.06), we encounter a segfault when the file is closed. . Background: ATLAS Trigger simulation of run 2 uses the release that was used for data-taking during run 2. . ### Reproducer. I copied the intermediate file + reproducer script to /afs/cern.ch/work/w/wlampl/public/ATEAM-1001 . The script is quite simple:. ```. from ROOT import TFile. f=TFile.Open(""tmp.RDO""). f.ls(). t=f.Get(""CollectionTree""). n=t.GetEntries(). for i in range(n):. s=t.GetEntry(i). print(s). f.Close(). ```. For root versions back to about 6.16.00 it works as expected. Running with 6.08.06 and 6.10.06 (in a centos7 container), I encounter a segfault as the end. A log can be found in /afs/cern.ch/work/w/wlampl/public/ATEAM-1001/log.22.0.0. . ### ROOT version. Writing: 6.32/02. Reading: 6.10/06 or 6.08.06 . ### Installation method. SFT/LCG. ### Operating system. CentOS7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15964
https://github.com/root-project/root/pull/15967:93,security,sign,signed,93,"[ntuple] Fix `ConstructValue` for `uint16_t` fields; Instead of (incorrectly) constructing a signed 16-bit int, now an unsigned 16-bit int is constructed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15967
https://github.com/root-project/root/pull/15968:295,deployability,stack,stack,295,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:484,deployability,updat,updated,484,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:198,energy efficiency,current,current,198,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:180,performance,time,time,180,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:454,safety,test,tested,454,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:484,safety,updat,updated,484,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:484,security,updat,updated,484,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15968:454,testability,test,tested,454,"v6-10: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15968
https://github.com/root-project/root/pull/15969:295,deployability,stack,stack,295,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:484,deployability,updat,updated,484,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:198,energy efficiency,current,current,198,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:180,performance,time,time,180,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:454,safety,test,tested,454,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:484,safety,updat,updated,484,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:484,security,updat,updated,484,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/pull/15969:454,testability,test,tested,454,"v6-08: fBits read: preserve kIsOnHeap, always set kNotDeleted.; Rather than reading from the file the value of kIsOnHeap, preserve the value that was calculated at object creation time (i.e. in the current execution). For example, for an embedded object (inside an object created on the heap or stack), the bit always need to be off (i.e. it can never be explicitly deleted). Fix #15964 ? # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15969
https://github.com/root-project/root/issues/15970:196,availability,fault,fault,196,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:562,availability,operat,operations,562,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:593,availability,sli,slightly,593,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:662,availability,error,errors,662,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:902,availability,avail,available,902,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:953,availability,operat,operations,953,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1060,availability,operat,operations,1060," duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1304,availability,Operat,Operating,1304,"| packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1362,availability,fault,fault,1362,") [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7912,availability,operat,operator,7912,"flow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31770,availability,operat,operator,31770,"flow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/mini",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53761,availability,fault,fault,53761,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1202,deployability,version,version,1202," ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1223,deployability,Instal,Installation,1223,"ay around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1480,deployability,stack,stack,1480," 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6410,deployability,Stack,StackTrace,6410,"as_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9208,deployability,Modul,ModuleKind,9208,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9813,deployability,Modul,Module,9813,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11152,deployability,Modul,ModuleImportState,11152,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11977,deployability,Modul,ModuleFileExtension,11977,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:12037,deployability,Modul,ModuleFileExtension,12037,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14264,deployability,Modul,Modules,14264,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15337,deployability,stack,stack,15337,"unc=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17201,deployability,modul,module,17201,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17403,deployability,modul,module,17403," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18633,deployability,stack,stack,18633,"func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20716,deployability,modul,module,20716,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20918,deployability,modul,module,20918,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22148,deployability,stack,stack,22148,"func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24265,deployability,modul,module,24265," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24467,deployability,modul,module,24467,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25703,deployability,stack,stack,25703,"0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29220,deployability,Modul,Modules,29220,"pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29327,deployability,Modul,Modules,29327,"_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29404,deployability,Modul,Modules,29404,"ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29547,deployability,Modul,Modules,29547,"dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29975,deployability,stack,stack,29975,"name=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30431,deployability,stack,stack,30431,"055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33066,deployability,Modul,ModuleKind,33066,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33671,deployability,Modul,Module,33671,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35010,deployability,Modul,ModuleImportState,35010,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35835,deployability,Modul,ModuleFileExtension,35835,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35895,deployability,Modul,ModuleFileExtension,35895,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38122,deployability,Modul,Modules,38122,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39195,deployability,stack,stack,39195,"unc=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41059,deployability,modul,module,41059,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41261,deployability,modul,module,41261," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42491,deployability,stack,stack,42491,"func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44574,deployability,modul,module,44574,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44776,deployability,modul,module,44776,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46006,deployability,stack,stack,46006,"func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48123,deployability,modul,module,48123," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48325,deployability,modul,module,48325,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49561,deployability,stack,stack,49561,"0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53078,deployability,Modul,Modules,53078,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53185,deployability,Modul,Modules,53185,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53262,deployability,Modul,Modules,53262,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53405,deployability,Modul,Modules,53405,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:196,energy efficiency,fault,fault,196,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:525,energy efficiency,core,core,525,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:819,energy efficiency,core,core,819,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:885,energy efficiency,optim,optimized,885,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:912,energy efficiency,CPU,CPU,912,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1362,energy efficiency,fault,fault,1362,") [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1931,energy efficiency,core,core,1931,"erformance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:2445,energy efficiency,core,core,2445," was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:2959,energy efficiency,core,core,2959,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:3473,energy efficiency,core,core,3473,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:3987,energy efficiency,core,core,3987,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:4501,energy efficiency,core,core,4501,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:5015,energy efficiency,core,core,5015,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:5529,energy efficiency,core,core,5529,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6043,energy efficiency,core,core,6043,". #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:8255,energy efficiency,load,loadSLocEntry,8255,"kages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9697,energy efficiency,load,loadModule,9697,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:12004,energy efficiency,alloc,allocator,12004,"envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13121,energy efficiency,optim,optimized,13121,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13172,energy efficiency,optim,optimized,13172,"ibCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13646,energy efficiency,optim,optimized,13646,"32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14188,energy efficiency,optim,optimized,14188,"1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14210,energy efficiency,optim,optimized,14210,", env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRunt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14366,energy efficiency,optim,optimized,14366,"nit.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14390,energy efficiency,optim,optimized,14390,"095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14594,energy efficiency,optim,optimized,14594,"o.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14751,energy efficiency,optim,optimized,14751,"594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14774,energy efficiency,optim,optimized,14774,"77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, calla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14801,energy efficiency,optim,optimized,14801," 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15102,energy efficiency,optim,optimized,15102,"LIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15169,energy efficiency,optim,optimized,15169,"l_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15321,energy efficiency,optim,optimized,15321,"nction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15367,energy efficiency,optim,optimized,15367,"zed out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15392,energy efficiency,optim,optimized,15392,"ed out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15737,energy efficiency,optim,optimized,15737,"(tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15758,energy efficiency,optim,optimized,15758,"t>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/intern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15924,energy efficiency,optim,optimized,15924,"g=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15946,energy efficiency,optim,optimized,15946,"c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16111,energy efficiency,optim,optimized,16111,", argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16292,energy efficiency,optim,optimized,16292,"ction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16315,energy efficiency,optim,optimized,16315,"<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16463,energy efficiency,optim,optimized,16463,"3 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16486,energy efficiency,optim,optimized,16486," _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16513,energy efficiency,optim,optimized,16513,"te (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16877,energy efficiency,optim,optimized,16877,"jects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17058,energy efficiency,optim,optimized,17058,"type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17209,energy efficiency,optim,optimized,17209,"ll (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17234,energy efficiency,optim,optimized,17234," <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17411,energy efficiency,optim,optimized,17411,"9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17433,energy efficiency,optim,optimized,17433,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17456,energy efficiency,optim,optimized,17456,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17481,energy efficiency,optim,optimized,17481,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17686,energy efficiency,optim,optimized,17686,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17841,energy efficiency,optim,optimized,17841,", func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17934,energy efficiency,optim,optimized,17934,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18047,energy efficiency,optim,optimized,18047,"bals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18070,energy efficiency,optim,optimized,18070,"ocals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18097,energy efficiency,optim,optimized,18097,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18398,energy efficiency,optim,optimized,18398,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18465,energy efficiency,optim,optimized,18465,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18617,energy efficiency,optim,optimized,18617,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18663,energy efficiency,optim,optimized,18663,"1f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18688,energy efficiency,optim,optimized,18688,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19069,energy efficiency,optim,optimized,19069,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19259,energy efficiency,optim,optimized,19259,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19577,energy efficiency,optim,optimized,19577," #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19601,energy efficiency,optim,optimized,19601,"all (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19865,energy efficiency,optim,optimized,19865,"x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19978,energy efficiency,optim,optimized,19978,"pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20001,energy efficiency,optim,optimized,20001,"bject_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20028,energy efficiency,optim,optimized,20028,"08be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20392,energy efficiency,optim,optimized,20392,"f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20573,energy efficiency,optim,optimized,20573,"ptimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20724,energy efficiency,optim,optimized,20724,"d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20749,energy efficiency,optim,optimized,20749,"l=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20926,energy efficiency,optim,optimized,20926,".c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20948,energy efficiency,optim,optimized,20948,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20971,energy efficiency,optim,optimized,20971,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20996,energy efficiency,optim,optimized,20996,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21201,energy efficiency,optim,optimized,21201,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21356,energy efficiency,optim,optimized,21356,", func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21449,energy efficiency,optim,optimized,21449,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21562,energy efficiency,optim,optimized,21562,"bals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21585,energy efficiency,optim,optimized,21585,"ocals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21612,energy efficiency,optim,optimized,21612,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21913,energy efficiency,optim,optimized,21913,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21980,energy efficiency,optim,optimized,21980,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22132,energy efficiency,optim,optimized,22132,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22178,energy efficiency,optim,optimized,22178,"1f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22203,energy efficiency,optim,optimized,22203,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22584,energy efficiency,optim,optimized,22584,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22774,energy efficiency,optim,optimized,22774,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23092,energy efficiency,optim,optimized,23092," #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23116,energy efficiency,optim,optimized,23116,"all (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23414,energy efficiency,optim,optimized,23414,"98 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23527,energy efficiency,optim,optimized,23527,"l (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23550,energy efficiency,optim,optimized,23550,"8 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23577,energy efficiency,optim,optimized,23577,"=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23941,energy efficiency,optim,optimized,23941,"yRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24122,energy efficiency,optim,optimized,24122,"ut>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24273,energy efficiency,optim,optimized,24273,"me (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24298,energy efficiency,optim,optimized,24298,"<_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24475,energy efficiency,optim,optimized,24475,".c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24497,energy efficiency,optim,optimized,24497,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24520,energy efficiency,optim,optimized,24520,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24545,energy efficiency,optim,optimized,24545,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24751,energy efficiency,optim,optimized,24751,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24907,energy efficiency,optim,optimized,24907,"func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25000,energy efficiency,optim,optimized,25000,"/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25114,energy efficiency,optim,optimized,25114,"s=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25137,energy efficiency,optim,optimized,25137,"ls=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25164,energy efficiency,optim,optimized,25164,"local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25467,energy efficiency,optim,optimized,25467,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25534,energy efficiency,optim,optimized,25534,"ames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25687,energy efficiency,optim,optimized,25687,"EYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25733,energy efficiency,optim,optimized,25733,"658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, leve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25758,energy efficiency,optim,optimized,25758,"t>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26141,energy efficiency,optim,optimized,26141," out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26332,energy efficiency,optim,optimized,26332,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26652,energy efficiency,optim,optimized,26652,"_PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26676,energy efficiency,optim,optimized,26676,"func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26975,energy efficiency,optim,optimized,26975,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27089,energy efficiency,optim,optimized,27089,"tate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27112,energy efficiency,optim,optimized,27112,"yRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27139,energy efficiency,optim,optimized,27139,"imized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27505,energy efficiency,optim,optimized,27505,"ime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27687,energy efficiency,optim,optimized,27687,"fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28044,energy efficiency,optim,optimized,28044," #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28070,energy efficiency,optim,optimized,28070,"ault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28140,energy efficiency,optim,optimized,28140,"zed out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28163,energy efficiency,optim,optimized,28163,"/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28984,energy efficiency,optim,optimized,28984,"onrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29471,energy efficiency,optim,optimized,29471,"c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29493,energy efficiency,optim,optimized,29493,"0882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything el",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:32113,energy efficiency,load,loadSLocEntry,32113,"kages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33555,energy efficiency,load,loadModule,33555,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35862,energy efficiency,alloc,allocator,35862,"envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:36979,energy efficiency,optim,optimized,36979,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37030,energy efficiency,optim,optimized,37030,"ibCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37504,energy efficiency,optim,optimized,37504,"32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38046,energy efficiency,optim,optimized,38046,"1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38068,energy efficiency,optim,optimized,38068,", env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRunt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38224,energy efficiency,optim,optimized,38224,"nit.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38248,energy efficiency,optim,optimized,38248,"095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38452,energy efficiency,optim,optimized,38452,"o.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38609,energy efficiency,optim,optimized,38609,"594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38632,energy efficiency,optim,optimized,38632,"77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, calla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38659,energy efficiency,optim,optimized,38659," 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38960,energy efficiency,optim,optimized,38960,"LIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39027,energy efficiency,optim,optimized,39027,"l_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39179,energy efficiency,optim,optimized,39179,"nction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39225,energy efficiency,optim,optimized,39225,"zed out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39250,energy efficiency,optim,optimized,39250,"ed out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39595,energy efficiency,optim,optimized,39595,"(tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39616,energy efficiency,optim,optimized,39616,"t>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/intern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39782,energy efficiency,optim,optimized,39782,"g=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39804,energy efficiency,optim,optimized,39804,"c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39969,energy efficiency,optim,optimized,39969,", argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40150,energy efficiency,optim,optimized,40150,"ction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40173,energy efficiency,optim,optimized,40173,"<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40321,energy efficiency,optim,optimized,40321,"3 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40344,energy efficiency,optim,optimized,40344," _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40371,energy efficiency,optim,optimized,40371,"te (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40735,energy efficiency,optim,optimized,40735,"jects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40916,energy efficiency,optim,optimized,40916,"type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41067,energy efficiency,optim,optimized,41067,"ll (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41092,energy efficiency,optim,optimized,41092," <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41269,energy efficiency,optim,optimized,41269,"9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41291,energy efficiency,optim,optimized,41291,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41314,energy efficiency,optim,optimized,41314,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41339,energy efficiency,optim,optimized,41339,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41544,energy efficiency,optim,optimized,41544,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41699,energy efficiency,optim,optimized,41699,", func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41792,energy efficiency,optim,optimized,41792,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41905,energy efficiency,optim,optimized,41905,"bals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41928,energy efficiency,optim,optimized,41928,"ocals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41955,energy efficiency,optim,optimized,41955,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42256,energy efficiency,optim,optimized,42256,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42323,energy efficiency,optim,optimized,42323,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42475,energy efficiency,optim,optimized,42475,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42521,energy efficiency,optim,optimized,42521,"1f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42546,energy efficiency,optim,optimized,42546,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42927,energy efficiency,optim,optimized,42927,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43117,energy efficiency,optim,optimized,43117,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43435,energy efficiency,optim,optimized,43435," #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43459,energy efficiency,optim,optimized,43459,"all (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43723,energy efficiency,optim,optimized,43723,"x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43836,energy efficiency,optim,optimized,43836,"pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43859,energy efficiency,optim,optimized,43859,"bject_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43886,energy efficiency,optim,optimized,43886,"08be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44250,energy efficiency,optim,optimized,44250,"f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44431,energy efficiency,optim,optimized,44431,"ptimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44582,energy efficiency,optim,optimized,44582,"d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44607,energy efficiency,optim,optimized,44607,"l=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44784,energy efficiency,optim,optimized,44784,".c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44806,energy efficiency,optim,optimized,44806,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44829,energy efficiency,optim,optimized,44829,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44854,energy efficiency,optim,optimized,44854,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45059,energy efficiency,optim,optimized,45059,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45214,energy efficiency,optim,optimized,45214,", func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45307,energy efficiency,optim,optimized,45307,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45420,energy efficiency,optim,optimized,45420,"bals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45443,energy efficiency,optim,optimized,45443,"ocals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45470,energy efficiency,optim,optimized,45470,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45771,energy efficiency,optim,optimized,45771,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45838,energy efficiency,optim,optimized,45838,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45990,energy efficiency,optim,optimized,45990,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46036,energy efficiency,optim,optimized,46036,"1f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46061,energy efficiency,optim,optimized,46061,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46442,energy efficiency,optim,optimized,46442,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46632,energy efficiency,optim,optimized,46632,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46950,energy efficiency,optim,optimized,46950," #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46974,energy efficiency,optim,optimized,46974,"all (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47272,energy efficiency,optim,optimized,47272,"98 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47385,energy efficiency,optim,optimized,47385,"l (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47408,energy efficiency,optim,optimized,47408,"8 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47435,energy efficiency,optim,optimized,47435,"=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47799,energy efficiency,optim,optimized,47799,"yRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47980,energy efficiency,optim,optimized,47980,"ut>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48131,energy efficiency,optim,optimized,48131,"me (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48156,energy efficiency,optim,optimized,48156,"<_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48333,energy efficiency,optim,optimized,48333,".c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48355,energy efficiency,optim,optimized,48355,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48378,energy efficiency,optim,optimized,48378,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48403,energy efficiency,optim,optimized,48403,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48609,energy efficiency,optim,optimized,48609,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48765,energy efficiency,optim,optimized,48765,"func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48858,energy efficiency,optim,optimized,48858,"/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48972,energy efficiency,optim,optimized,48972,"s=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48995,energy efficiency,optim,optimized,48995,"ls=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49022,energy efficiency,optim,optimized,49022,"local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49325,energy efficiency,optim,optimized,49325,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49392,energy efficiency,optim,optimized,49392,"ames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49545,energy efficiency,optim,optimized,49545,"EYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49591,energy efficiency,optim,optimized,49591,"658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, leve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49616,energy efficiency,optim,optimized,49616,"t>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49999,energy efficiency,optim,optimized,49999," out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50190,energy efficiency,optim,optimized,50190,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50510,energy efficiency,optim,optimized,50510,"_PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50534,energy efficiency,optim,optimized,50534,"func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50833,energy efficiency,optim,optimized,50833,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50947,energy efficiency,optim,optimized,50947,"tate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50970,energy efficiency,optim,optimized,50970,"yRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50997,energy efficiency,optim,optimized,50997,"imized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51363,energy efficiency,optim,optimized,51363,"ime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51545,energy efficiency,optim,optimized,51545,"fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51902,energy efficiency,optim,optimized,51902," #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51928,energy efficiency,optim,optimized,51928,"ault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51998,energy efficiency,optim,optimized,51998,"zed out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52021,energy efficiency,optim,optimized,52021,"/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52842,energy efficiency,optim,optimized,52842,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53329,energy efficiency,optim,optimized,53329,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53351,energy efficiency,optim,optimized,53351,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53761,energy efficiency,fault,fault,53761,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53768,energy efficiency,core,core,53768,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1202,integrability,version,version,1202," ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30300,integrability,sub,submit,30300,"src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:824,interoperability,platform,platform,824,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6892,interoperability,platform,platform,6892,"so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7091,interoperability,platform,platform,7091,"2 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7286,interoperability,platform,platform,7286,"om /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7623,interoperability,Format,Format,7623,"/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30750,interoperability,platform,platform,30750,") at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30949,interoperability,platform,platform,30949," marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31144,interoperability,platform,platform,31144,"https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31481,interoperability,Format,Format,31481,"to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:311,modifiability,pac,packaged,311,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:742,modifiability,variab,variable,742,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1202,modifiability,version,version,1202," ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1916,modifiability,pac,packages,1916,"ructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:2430,modifiability,pac,packages,2430,"======. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:2944,modifiability,pac,packages,2944,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:3458,modifiability,pac,packages,3458,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 8 (Thread 0x7f104a26b640 (LWP 281194) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:3972,modifiability,pac,packages,3972,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 7 (Thread 0x7f105aa6c640 (LWP 281193) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:4486,modifiability,pac,packages,4486,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 6 (Thread 0x7f106326d640 (LWP 281192) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:5000,modifiability,pac,packages,5000,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 5 (Thread 0x7f1063a6e640 (LWP 281191) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:5514,modifiability,pac,packages,5514,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 4 (Thread 0x7f107426f640 (LWP 281190) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6028,modifiability,pac,packages,6028,"libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 3 (Thread 0x7f1074a70640 (LWP 281189) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 2 (Thread 0x7f1075271640 (LWP 281188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6865,modifiability,pac,packages,6865,"_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7064,modifiability,pac,packages,7064,".so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7259,modifiability,pac,packages,7259,"7f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLoc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7376,modifiability,deco,decompress,7376,"7f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:7593,modifiability,deco,decompress,7593,"s) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9208,modifiability,Modul,ModuleKind,9208,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9813,modifiability,Modul,Module,9813,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11152,modifiability,Modul,ModuleImportState,11152,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11977,modifiability,Modul,ModuleFileExtension,11977,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:12037,modifiability,Modul,ModuleFileExtension,12037,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14264,modifiability,Modul,Modules,14264,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17201,modifiability,modul,module,17201,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17403,modifiability,modul,module,17403," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20716,modifiability,modul,module,20716,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20918,modifiability,modul,module,20918,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24265,modifiability,modul,module,24265," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24467,modifiability,modul,module,24467,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29220,modifiability,Modul,Modules,29220,"pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29327,modifiability,Modul,Modules,29327,"_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29404,modifiability,Modul,Modules,29404,"ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29547,modifiability,Modul,Modules,29547,"dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30078,modifiability,variab,variable,30078,"onrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30723,modifiability,pac,packages,30723,"00055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30922,modifiability,pac,packages,30922,"crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31117,modifiability,pac,packages,31117,"y asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLoc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31234,modifiability,deco,decompress,31234," if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:31451,modifiability,deco,decompress,31451,"s an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33066,modifiability,Modul,ModuleKind,33066,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33671,modifiability,Modul,Module,33671,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35010,modifiability,Modul,ModuleImportState,35010,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35835,modifiability,Modul,ModuleFileExtension,35835,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35895,modifiability,Modul,ModuleFileExtension,35895,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38122,modifiability,Modul,Modules,38122,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41059,modifiability,modul,module,41059,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41261,modifiability,modul,module,41261," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44574,modifiability,modul,module,44574,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44776,modifiability,modul,module,44776,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48123,modifiability,modul,module,48123," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48325,modifiability,modul,module,48325,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53078,modifiability,Modul,Modules,53078,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53185,modifiability,Modul,Modules,53185,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53262,modifiability,Modul,Modules,53262,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53405,modifiability,Modul,Modules,53405,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:196,performance,fault,fault,196,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:662,performance,error,errors,662,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:885,performance,optimiz,optimized,885,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:912,performance,CPU,CPU,912,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:932,performance,perform,performance-critical,932,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1362,performance,fault,fault,1362,") [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:8255,performance,load,loadSLocEntry,8255,"kages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9697,performance,load,loadModule,9697,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13121,performance,optimiz,optimized,13121,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13172,performance,optimiz,optimized,13172,"ibCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:13646,performance,optimiz,optimized,13646,"32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14188,performance,optimiz,optimized,14188,"1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14210,performance,optimiz,optimized,14210,", env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRunt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14366,performance,optimiz,optimized,14366,"nit.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14390,performance,optimiz,optimized,14390,"095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14594,performance,optimiz,optimized,14594,"o.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14751,performance,optimiz,optimized,14751,"594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14774,performance,optimiz,optimized,14774,"77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, calla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14801,performance,optimiz,optimized,14801," 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15102,performance,optimiz,optimized,15102,"LIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15169,performance,optimiz,optimized,15169,"l_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15321,performance,optimiz,optimized,15321,"nction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15367,performance,optimiz,optimized,15367,"zed out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15392,performance,optimiz,optimized,15392,"ed out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15737,performance,optimiz,optimized,15737,"(tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15758,performance,optimiz,optimized,15758,"t>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/intern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15924,performance,optimiz,optimized,15924,"g=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:15946,performance,optimiz,optimized,15946,"c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16111,performance,optimiz,optimized,16111,", argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16292,performance,optimiz,optimized,16292,"ction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16315,performance,optimiz,optimized,16315,"<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16463,performance,optimiz,optimized,16463,"3 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16486,performance,optimiz,optimized,16486," _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16513,performance,optimiz,optimized,16513,"te (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:16877,performance,optimiz,optimized,16877,"jects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17058,performance,optimiz,optimized,17058,"type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17209,performance,optimiz,optimized,17209,"ll (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17234,performance,optimiz,optimized,17234," <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17411,performance,optimiz,optimized,17411,"9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17433,performance,optimiz,optimized,17433,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17456,performance,optimiz,optimized,17456,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17481,performance,optimiz,optimized,17481,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17686,performance,optimiz,optimized,17686,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17841,performance,optimiz,optimized,17841,", func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17934,performance,optimiz,optimized,17934,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18047,performance,optimiz,optimized,18047,"bals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18070,performance,optimiz,optimized,18070,"ocals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18097,performance,optimiz,optimized,18097,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18398,performance,optimiz,optimized,18398,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18465,performance,optimiz,optimized,18465,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18617,performance,optimiz,optimized,18617,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18663,performance,optimiz,optimized,18663,"1f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:18688,performance,optimiz,optimized,18688,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19069,performance,optimiz,optimized,19069,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19259,performance,optimiz,optimized,19259,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19577,performance,optimiz,optimized,19577," #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19601,performance,optimiz,optimized,19601,"all (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19865,performance,optimiz,optimized,19865,"x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:19978,performance,optimiz,optimized,19978,"pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20001,performance,optimiz,optimized,20001,"bject_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20028,performance,optimiz,optimized,20028,"08be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20392,performance,optimiz,optimized,20392,"f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20573,performance,optimiz,optimized,20573,"ptimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20724,performance,optimiz,optimized,20724,"d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20749,performance,optimiz,optimized,20749,"l=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20926,performance,optimiz,optimized,20926,".c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20948,performance,optimiz,optimized,20948,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20971,performance,optimiz,optimized,20971,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20996,performance,optimiz,optimized,20996,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21201,performance,optimiz,optimized,21201,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21356,performance,optimiz,optimized,21356,", func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21449,performance,optimiz,optimized,21449,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21562,performance,optimiz,optimized,21562,"bals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21585,performance,optimiz,optimized,21585,"ocals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21612,performance,optimiz,optimized,21612,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21913,performance,optimiz,optimized,21913,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:21980,performance,optimiz,optimized,21980,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22132,performance,optimiz,optimized,22132,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22178,performance,optimiz,optimized,22178,"1f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22203,performance,optimiz,optimized,22203,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22584,performance,optimiz,optimized,22584,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:22774,performance,optimiz,optimized,22774,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23092,performance,optimiz,optimized,23092," #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23116,performance,optimiz,optimized,23116,"all (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23414,performance,optimiz,optimized,23414,"98 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23527,performance,optimiz,optimized,23527,"l (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23550,performance,optimiz,optimized,23550,"8 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23577,performance,optimiz,optimized,23577,"=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:23941,performance,optimiz,optimized,23941,"yRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24122,performance,optimiz,optimized,24122,"ut>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24273,performance,optimiz,optimized,24273,"me (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24298,performance,optimiz,optimized,24298,"<_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24475,performance,optimiz,optimized,24475,".c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24497,performance,optimiz,optimized,24497,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24520,performance,optimiz,optimized,24520,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24545,performance,optimiz,optimized,24545,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24751,performance,optimiz,optimized,24751,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24907,performance,optimiz,optimized,24907,"func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25000,performance,optimiz,optimized,25000,"/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25114,performance,optimiz,optimized,25114,"s=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25137,performance,optimiz,optimized,25137,"ls=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25164,performance,optimiz,optimized,25164,"local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25467,performance,optimiz,optimized,25467,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25534,performance,optimiz,optimized,25534,"ames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25687,performance,optimiz,optimized,25687,"EYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25733,performance,optimiz,optimized,25733,"658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, leve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:25758,performance,optimiz,optimized,25758,"t>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26141,performance,optimiz,optimized,26141," out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26332,performance,optimiz,optimized,26332,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26652,performance,optimiz,optimized,26652,"_PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26676,performance,optimiz,optimized,26676,"func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:26975,performance,optimiz,optimized,26975,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27089,performance,optimiz,optimized,27089,"tate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27112,performance,optimiz,optimized,27112,"yRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27139,performance,optimiz,optimized,27139,"imized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27505,performance,optimiz,optimized,27505,"ime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:27687,performance,optimiz,optimized,27687,"fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28044,performance,optimiz,optimized,28044," #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28070,performance,optimiz,optimized,28070,"ault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28140,performance,optimiz,optimized,28140,"zed out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28163,performance,optimiz,optimized,28163,"/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28984,performance,optimiz,optimized,28984,"onrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29471,performance,optimiz,optimized,29471,"c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29493,performance,optimiz,optimized,29493,"0882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything el",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:32113,performance,load,loadSLocEntry,32113,"kages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33555,performance,load,loadModule,33555,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:36979,performance,optimiz,optimized,36979,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37030,performance,optimiz,optimized,37030,"ibCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:37504,performance,optimiz,optimized,37504,"32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70. #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38046,performance,optimiz,optimized,38046,"1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38068,performance,optimiz,optimized,38068,", env=0x55f90e6d77e0) at dl-init.c:26. #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRunt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38224,performance,optimiz,optimized,38224,"nit.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38248,performance,optimiz,optimized,38248,"095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38452,performance,optimiz,optimized,38452,"o.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38609,performance,optimiz,optimized,38609,"594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38632,performance,optimiz,optimized,38632,"77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, calla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38659,performance,optimiz,optimized,38659," 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38960,performance,optimiz,optimized,38960,"LIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39027,performance,optimiz,optimized,39027,"l_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39179,performance,optimiz,optimized,39179,"nction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39225,performance,optimiz,optimized,39225,"zed out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/pyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39250,performance,optimiz,optimized,39250,"ed out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39595,performance,optimiz,optimized,39595,"(tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39616,performance,optimiz,optimized,39616,"t>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/intern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39782,performance,optimiz,optimized,39782,"g=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39804,performance,optimiz,optimized,39804,"c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:39969,performance,optimiz,optimized,39969,", argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40150,performance,optimiz,optimized,40150,"ction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40173,performance,optimiz,optimized,40173,"<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40321,performance,optimiz,optimized,40321,"3 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40344,performance,optimiz,optimized,40344," _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40371,performance,optimiz,optimized,40371,"te (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141. #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40735,performance,optimiz,optimized,40735,"jects/call.c:482. #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855. #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:40916,performance,optimiz,optimized,40916,"type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103. #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41067,performance,optimiz,optimized,41067,"ll (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41092,performance,optimiz,optimized,41092," <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41269,performance,optimiz,optimized,41269,"9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41291,performance,optimiz,optimized,41291,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41314,performance,optimiz,optimized,41314,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41339,performance,optimiz,optimized,41339,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41544,performance,optimiz,optimized,41544,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41699,performance,optimiz,optimized,41699,", func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41792,performance,optimiz,optimized,41792,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41905,performance,optimiz,optimized,41905,"bals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41928,performance,optimiz,optimized,41928,"ocals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41955,performance,optimiz,optimized,41955,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42256,performance,optimiz,optimized,42256,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42323,performance,optimiz,optimized,42323,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42475,performance,optimiz,optimized,42475,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42521,performance,optimiz,optimized,42521,"1f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42546,performance,optimiz,optimized,42546,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:42927,performance,optimiz,optimized,42927,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43117,performance,optimiz,optimized,43117,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43435,performance,optimiz,optimized,43435," #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43459,performance,optimiz,optimized,43459,"all (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43723,performance,optimiz,optimized,43723,"x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43836,performance,optimiz,optimized,43836,"pycore_call.h:92. #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43859,performance,optimiz,optimized,43859,"bject_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:43886,performance,optimiz,optimized,43886,"08be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44250,performance,optimiz,optimized,44250,"f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44431,performance,optimiz,optimized,44431,"ptimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44582,performance,optimiz,optimized,44582,"d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44607,performance,optimiz,optimized,44607,"l=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44784,performance,optimiz,optimized,44784,".c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44806,performance,optimiz,optimized,44806,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44829,performance,optimiz,optimized,44829,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, fu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44854,performance,optimiz,optimized,44854,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45059,performance,optimiz,optimized,45059,"_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45214,performance,optimiz,optimized,45214,", func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45307,performance,optimiz,optimized,45307,"al/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45420,performance,optimiz,optimized,45420,"bals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45443,performance,optimiz,optimized,45443,"ocals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45470,performance,optimiz,optimized,45470,"sr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45771,performance,optimiz,optimized,45771,"module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45838,performance,optimiz,optimized,45838,", kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:45990,performance,optimiz,optimized,45990,"ALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, froml",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46036,performance,optimiz,optimized,46036,"1f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46061,performance,optimiz,optimized,46061,"ed out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46442,performance,optimiz,optimized,46442,"mized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46632,performance,optimiz,optimized,46632,"908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46950,performance,optimiz,optimized,46950," #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:46974,performance,optimiz,optimized,46974,"all (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47272,performance,optimiz,optimized,47272,"98 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47385,performance,optimiz,optimized,47385,"l (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47408,performance,optimiz,optimized,47408,"8 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47435,performance,optimiz,optimized,47435,"=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47799,performance,optimiz,optimized,47799,"yRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:47980,performance,optimiz,optimized,47980,"ut>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48131,performance,optimiz,optimized,48131,"me (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_Eval",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48156,performance,optimiz,optimized,48156,"<_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48333,performance,optimiz,optimized,48333,".c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48355,performance,optimiz,optimized,48355,"valFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48378,performance,optimiz,optimized,48378,"=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48403,performance,optimiz,optimized,48403,"optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48609,performance,optimiz,optimized,48609,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48765,performance,optimiz,optimized,48765,"func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48858,performance,optimiz,optimized,48858,"/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48972,performance,optimiz,optimized,48972,"s=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48995,performance,optimiz,optimized,48995,"ls=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49022,performance,optimiz,optimized,49022,"local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49325,performance,optimiz,optimized,49325,"e=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49392,performance,optimiz,optimized,49392,"ames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49545,performance,optimiz,optimized,49545,"EYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49591,performance,optimiz,optimized,49591,"658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, leve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49616,performance,optimiz,optimized,49616,"t>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:49999,performance,optimiz,optimized,49999," out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50190,performance,optimiz,optimized,50190,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50510,performance,optimiz,optimized,50510,"_PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50534,performance,optimiz,optimized,50534,"func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393. #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50833,performance,optimiz,optimized,50833,"PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92. #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50947,performance,optimiz,optimized,50947,"tate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50970,performance,optimiz,optimized,50970,"yRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:50997,performance,optimiz,optimized,50997,"imized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819. #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878. #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51363,performance,optimiz,optimized,51363,"ime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748. #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51545,performance,optimiz,optimized,51545,"fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847. #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51902,performance,optimiz,optimized,51902," #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51928,performance,optimiz,optimized,51928,"ault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:51998,performance,optimiz,optimized,51998,"zed out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (confi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52021,performance,optimiz,optimized,52021,"/src/conda/python-3.11.9/Python/ceval.c:3946. #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52842,performance,optimiz,optimized,52842,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53329,performance,optimiz,optimized,53329,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53351,performance,optimiz,optimized,53351,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53761,performance,fault,fault,53761,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:196,reliability,fault,fault,196,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:593,reliability,sli,slightly,593,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:902,reliability,availab,available,902,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1362,reliability,fault,fault,1362,") [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:8835,reliability,Diagno,DiagnosticsEngine,8835,"LocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:32693,reliability,Diagno,DiagnosticsEngine,32693,"LocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53761,reliability,fault,fault,53761,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:196,safety,fault,fault,196,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:662,safety,error,errors,662,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:902,safety,avail,available,902,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1362,safety,fault,fault,1362,") [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9208,safety,Modul,ModuleKind,9208,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9813,safety,Modul,Module,9813,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11152,safety,Modul,ModuleImportState,11152,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:11977,safety,Modul,ModuleFileExtension,11977,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:12037,safety,Modul,ModuleFileExtension,12037,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:14264,safety,Modul,Modules,14264,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17201,safety,modul,module,17201,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:17403,safety,modul,module,17403," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20716,safety,modul,module,20716,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:20918,safety,modul,module,20918,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24265,safety,modul,module,24265," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:24467,safety,modul,module,24467,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29220,safety,Modul,Modules,29220,"pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29327,safety,Modul,Modules,29327,"_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29404,safety,Modul,Modules,29404,"ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29547,safety,Modul,Modules,29547,"dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33066,safety,Modul,ModuleKind,33066,"00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33671,safety,Modul,Module,33671,"ticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35010,safety,Modul,ModuleImportState,35010,"st*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/env",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35835,safety,Modul,ModuleFileExtension,35835,"i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:35895,safety,Modul,ModuleFileExtension,35895,"0007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char const*, std::vector<std::shared_ptr<clang::ModuleFileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so. #34 0x00007f109",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:38122,safety,Modul,Modules,38122,"9602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117. #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6. #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822. #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898. #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6. #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6. #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6. #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6. #45 0x00007f1095c85d71 in dlopen. GLIBC_2.2.5 () from /lib64/libc.so.6. #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538. #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553. #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Py",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41059,safety,modul,module,41059,"t_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214. #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:41261,safety,modul,module,41261," 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769. #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #68 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44574,safety,modul,module,44574,"0055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:44776,safety,modul,module,44776,"thon/ceval.c:7422. #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #86 _PyEval_Vector (kwnames=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48123,safety,modul,module,48123," import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:48325,safety,modul,module,48325,"thon/ceval.c:7422. #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946. #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434. #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148. #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077. #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465. #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52. #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321. #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376. #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73. #104 _PyEval_Vector (kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53078,safety,Modul,Modules,53078,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53185,safety,Modul,Modules,53185,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53262,safety,Modul,Modules,53262,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53405,safety,Modul,Modules,53405,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:53761,safety,fault,fault,53761,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:902,security,availab,available,902,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:6719,security,sign,signal,6719,"1188) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 1 (Thread 0x7f1095f09740 (LWP 281175) ""python""):. #0 0x00007f1095cd8a3f in wait4 () from /lib64/libc.so.6. #1 0x00007f1095c4b243 in do_system () from /lib64/libc.so.6. #2 0x00007f101f248a5d in TUnixSystem::StackTrace() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #3 0x00007f101f2463a6 in TUnixSystem::DispatchSignals(ESignals) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32. #4 <signal handler called>. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:9763,security,Ident,IdentifierInfo,9763,"62e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10051,security,Token,Token,10051,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10066,security,Token,Token,10066,"ommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10365,security,Token,Token,10365,"vs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10611,security,Token,Token,10611,"/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::Poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10762,security,Token,Token,10762,"entifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:10933,security,Token,Token,10933,"Cling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33621,security,Ident,IdentifierInfo,33621,"62e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33909,security,Token,Token,33909,"n.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:33924,security,Token,Token,33924,"ommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:34223,security,Token,Token,34223,"vs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:34469,security,Token,Token,34469,"/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::Poin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:34620,security,Token,Token,34620,"entifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:34791,security,Token,Token,34791,"Cling.so. #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #23 0x00007f101a38f15d in clang::Lexer::LexTokenInternal(clang::Token&, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #24 0x00007f101a4095b8 in clang::Preprocessor::Lex(clang::Token&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #25 0x00007f10162bace6 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #26 0x00007f10157ff9aa in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #27 0x00007f10158004fe in cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #28 0x00007f1015768d0a in cling::Interpreter::Interpreter(int, char const* const*, char co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1344,testability,context,context,1344,"19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1368,testability,trace,trace,1368," 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:1486,testability,trace,trace,1486,"07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6. #4 0x00007f1095d0ec40 in clone3 () from /lib64/libc.so.6. Thread 9 (Thread 0x7f1041a6a640 (LWP 281195) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:8835,testability,Diagno,DiagnosticsEngine,8835,"LocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29981,testability,trace,trace,29981,"optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framew",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30437,testability,trace,trace,30437,"88fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:32693,testability,Diagno,DiagnosticsEngine,32693,"LocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:396,usability,help,help,396,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:555,usability,custom,custom,555,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:662,usability,error,errors,662,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:932,usability,perform,performance-critical,932,"Cannot import tensorflow first and then ROOT with 6.32; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```. (root-bug) ➜ ~ python. Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import tensorflow. 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`. 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations. To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>. >>> import ROOT. *** Break *** segmentation violation. ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):. #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6. #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6. #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3. #3 0x00007f1095c89c02 in start_thread",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:28795,usability,close,closeit,28795,"90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29000,usability,close,closeit,29000,"117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:29901,usability,hint,hint,29901,"90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30115,usability,help,help,30115,"5 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30173,usability,prefer,preferably,30173,"4>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30194,usability,command,command,30194,"c/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30347,usability,prefer,preferably,30347,"Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30369,usability,command,command,30369,"/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:30513,usability,help,help,30513,"r/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f109400da7d in ZSTD_freeDDict () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #6 0x00007f109400f7f8 in ZSTD_decompressDCtx () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../libtensorflow_framework.so.2. #7 0x00007f107aeedf34 in ZSTD_decompress () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1. #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so. #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52653,usability,close,closeit,52653,"90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/issues/15970:52858,usability,close,closeit,52858,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741. #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762. #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp. entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename. entry=0x7f1095bfad30, flags=flags. entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261. #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138. #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73. #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105. #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509. #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604. #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680. #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734. #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6. #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6. #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9. ===========================================================. [1] 281175 segmentation fault (core dumped) python. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15970
https://github.com/root-project/root/pull/15971:331,deployability,fail,failed,331,"Fix spaces occupancy in TTF::PrepareString; As discussed in [GitHub issue #15948](https://github.com/root-project/root/issues/15948), there was a problem in the TTF::PrepareString function where the length of trailing white spaces was not being computed correctly. This issue led to inaccuracies in text rendering, as the function failed to account for the correct width of trailing white spaces in the provided strings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15971
https://github.com/root-project/root/pull/15971:331,reliability,fail,failed,331,"Fix spaces occupancy in TTF::PrepareString; As discussed in [GitHub issue #15948](https://github.com/root-project/root/issues/15948), there was a problem in the TTF::PrepareString function where the length of trailing white spaces was not being computed correctly. This issue led to inaccuracies in text rendering, as the function failed to account for the correct width of trailing white spaces in the provided strings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15971
https://github.com/root-project/root/pull/15972:376,availability,consist,consistently,376,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:0,deployability,Updat,Update,0,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:7,deployability,build,build,7,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:354,deployability,build,building,354,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:709,deployability,build,build,709,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:983,deployability,updat,updated,983,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:559,integrability,repositor,repository,559,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:573,integrability,discover,discovered,573,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:559,interoperability,repositor,repository,559,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:573,interoperability,discover,discovered,573,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:234,performance,time,time,234,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:0,safety,Updat,Update,0,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:953,safety,test,tested,953,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:983,safety,updat,updated,983,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:0,security,Updat,Update,0,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:983,security,updat,updated,983,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:735,testability,Simpl,Simply,735,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:953,testability,test,tested,953,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:13,usability,guid,guide,13,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:376,usability,consist,consistently,376,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:499,usability,experien,experience,499,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:573,usability,discov,discovered,573,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:715,usability,guid,guide,715,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:735,usability,Simpl,Simply,735,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15972:995,usability,document,documentation,995,"Update build guide for cling; ##### Edit:. I noticed an issue at https://github.com/root-project/cling/issues/515#issue-2092431022 created six months ago that describes the same problem. Sadly this issue has persisted for such a long time not fixed. 😣. ##### Original PR description:. I'm not certain if it's just me, but after spending an entire day to building Cling, CMake consistently reported that the target `nvptx` was not found. This is quite perplexing, especially for someone with limited experience with CMake like myself. After searching the LLVM repository, I discovered that the target name should be capitalized as `NVPTX`. If this is not just me, then there appears to be a discrepancy in the build guide. ## Changes:. Simply changed `nvptx` to `NVPTX`. Additionally, CMake requires the explicit passing of `-DCMAKE_BUILD_TYPE`, which I have included as well. Fixes https://github.com/root-project/cling/issues/515. ## Checklist:. - [x] tested changes locally. - [x] updated the documentation as necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15972
https://github.com/root-project/root/pull/15973:15,availability,error,error,15,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:185,availability,error,error,185,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:489,availability,error,error,489,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:617,availability,error,error,617,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:127,deployability,upgrad,upgrade,127,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:465,deployability,continu,continue,465,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:530,deployability,continu,continue,530,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:542,deployability,fail,fail,542,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:410,interoperability,platform,platform,410,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:127,modifiability,upgrad,upgrade,127,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:15,performance,error,error,15,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:185,performance,error,error,185,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:489,performance,error,error,489,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:617,performance,error,error,617,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:227,reliability,pra,practice,227,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:542,reliability,fail,fail,542,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:15,safety,error,error,15,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:185,safety,error,error,185,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:489,safety,error,error,489,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:617,safety,error,error,617,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:15,usability,error,error,15,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:185,usability,error,error,185,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:489,usability,error,error,489,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15973:617,usability,error,error,617,"TCling: Remove error if symbols cannot be autoloaded; I implemented `AutoloadLibraryGenerator` in commit 9b2041e300 during the upgrade to LLVM 13 and wasn't sure if it should return an error if some symbols cannot be found. In practice, it didn't make a big difference because it was the last generator of the only `JITDylib`. This will change with LLVM 18 where we have at least one additional `JITDylib` for platform symbols (like `__cxa_atexit`) and search must continue, so remove the error. In contrast, `AutoloadLibraryMU`s continue to fail the materialization if they promised to find a symbol but there is an error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15973
https://github.com/root-project/root/pull/15974:585,deployability,updat,updated,585,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:88,energy efficiency,current,currently,88,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:213,performance,time,time,213,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:555,safety,test,tested,555,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:585,safety,updat,updated,585,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:585,security,updat,updated,585,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:555,testability,test,tested,555,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15974:501,usability,support,supported,501,"[ntuple] RPageStorageFile: commit vectorized pages in chunks; In RPageStorageFile we're currently either writing all pages in a single vector write or, if their total size exceeds `maxKeySize`, we commit one at a time. With this change we try to commit as many consecutive pages as possible and split the vector write as soon as the next page would exceed `maxKeySize`. If a single page is bigger than `maxKeySize` we take care to write it in the non-vectorized fashion, since splitting a key is only supported through `WriteBlob()`. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15974
https://github.com/root-project/root/pull/15975:98,deployability,fail,fail,98,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:129,deployability,version,version,129,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:182,deployability,version,version,182,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:55,energy efficiency,Current,Currently,55,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:244,energy efficiency,current,current,244,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:129,integrability,version,version,129,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:182,integrability,version,version,182,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:81,interoperability,compatib,compatible,81,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:129,modifiability,version,version,129,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:182,modifiability,version,version,182,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:98,reliability,fail,fail,98,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:304,safety,test,tested,304,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15975:304,testability,test,tested,304,[ntuple] fix check on key.fObjLen < sizeof(RTFNTuple); Currently is not backward-compatible (will fail if we read an old RNTuple version with a newer one which adds new members from version 4). Was unnoticed so far because RTFNTuple v4 and v6 (current) happen to have the same size. ## Checklist:. - [x] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15975
https://github.com/root-project/root/pull/15976:22,deployability,build,builds,22,enable Fortran on Mac builds; enable Fortran on Mac builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15976
https://github.com/root-project/root/pull/15976:52,deployability,build,builds,52,enable Fortran on Mac builds; enable Fortran on Mac builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15976
https://github.com/root-project/root/issues/15977:1117,availability,Operat,Operating,1117,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:878,deployability,version,version,878,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:1076,deployability,Instal,Installation,1076,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:1104,deployability,Releas,Release,1104,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:6,integrability,Event,Event,6,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:878,integrability,version,version,878,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:878,modifiability,version,version,878,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:22,reliability,doe,does,22,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:750,reliability,doe,does,750,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:1164,testability,context,context,1164,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:12,usability,Statu,StatusBar,12,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:189,usability,mous,mouse,189,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:346,usability,statu,statusbar,346,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/issues/15977:696,usability,user,user-attachments,696,"[gui] Event StatusBar does not work well when TMarker outside of zoom region; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. CaptureEvent when hovering with the mouse over a zoomed canvas captures a TMarker far outside of the zoom region. Maybe some rounding issue is going on there. As seen in the picture above, the statusbar points at a TMarker, but no TMarker is visible in the zoom region. ![image](https://github.com/root-project/root/assets/10653970/07fa6cb5-9f9a-42ec-b33b-812121279659). ### Reproducer. Open the attached TFile with classic TRootBrowser, double click on the canvas c_pulse, then try to unzoom the X axis. [c_pulse.root.zip](https://github.com/user-attachments/files/16087609/c_pulse.root.zip). It does not work. Click and drag whatever point, so that the TMarker is repositioned. Only then, you can unzoom the axis. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary Release. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15977
https://github.com/root-project/root/pull/15979:355,security,secur,security,355,"[webgui] always compile RBrowser (no root7), add `SetUseConnectionKey()` method; `RBrowser` is no longer experimental and can be compiled once `webgui` is enabled. It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call. Before only rootrc file can be used. Small fix in URL generation when token is used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15979
https://github.com/root-project/root/pull/15979:460,security,token,token,460,"[webgui] always compile RBrowser (no root7), add `SetUseConnectionKey()` method; `RBrowser` is no longer experimental and can be compiled once `webgui` is enabled. It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call. Before only rootrc file can be used. Small fix in URL generation when token is used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15979
https://github.com/root-project/root/pull/15979:199,usability,dialog,dialogs,199,"[webgui] always compile RBrowser (no root7), add `SetUseConnectionKey()` method; `RBrowser` is no longer experimental and can be compiled once `webgui` is enabled. It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call. Before only rootrc file can be used. Small fix in URL generation when token is used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15979
https://github.com/root-project/root/pull/15979:216,usability,widget,widgets,216,"[webgui] always compile RBrowser (no root7), add `SetUseConnectionKey()` method; `RBrowser` is no longer experimental and can be compiled once `webgui` is enabled. It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call. Before only rootrc file can be used. Small fix in URL generation when token is used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15979
https://github.com/root-project/root/pull/15981:54,availability,operat,operator,54,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:170,availability,error,error,170,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:170,performance,error,error,170,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:170,safety,error,error,170,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:32,testability,Simpl,SimplexSeedGenerator,32,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:130,testability,Simpl,SimplexSeedGenerator,130,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:32,usability,Simpl,SimplexSeedGenerator,32,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:130,usability,Simpl,SimplexSeedGenerator,130,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15981:170,usability,error,error,170,[math] remove unused param from SimplexSeedGenerator::operator(); # This Pull request:. fixes a warning due to an unused param in SimplexSeedGenerator (becomes a compile error with dev=ON).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15981
https://github.com/root-project/root/pull/15982:383,deployability,updat,updated,383,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:77,energy efficiency,alloc,allocations,77,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:200,energy efficiency,alloc,allocates,200,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:299,energy efficiency,alloc,allocate,299,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:113,integrability,buffer,buffer,113,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:149,modifiability,deco,decompressor,149,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:310,modifiability,deco,decompressor,310,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:70,performance,memor,memory,70,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:283,reliability,doe,doesn,283,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:58,safety,Avoid,Avoids,58,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:353,safety,test,tested,353,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:383,safety,updat,updated,383,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:383,security,updat,updated,383,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:353,testability,test,tested,353,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15982:70,usability,memor,memory,70,"[ntuple] Make RNTupleDecompressor::Unzip overload static; Avoids some memory allocations when the internal unzip buffer is never used throughout the decompressor's lifetime (since RNTupleDecompressor allocates a Buffer_t when default constructed). With this change, RPageStorageDaos doesn't need to allocate a decompressor anymore. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15982
https://github.com/root-project/root/pull/15983:251,deployability,updat,updated,251,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:9,safety,Prevent,Prevent,9,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:221,safety,test,tested,221,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:251,safety,updat,updated,251,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:9,security,Preven,Prevent,9,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:251,security,updat,updated,251,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:221,testability,test,tested,221,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15983:185,usability,document,documentation,185,[graf2d] Prevent int overflow when computing squared distance; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/15977. Improve also doxygen documentation. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15983
https://github.com/root-project/root/pull/15984:23,interoperability,distribut,distributed,23,"Revert ""[rdf] Restrict distributed initialization to executors only""; Revert is needed due to changes introduced with. PR #15672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15984
https://github.com/root-project/root/pull/15985:853,deployability,updat,updated,853,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:314,energy efficiency,model,model,314,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:522,energy efficiency,model,model,522,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:684,energy efficiency,model,model,684,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:104,interoperability,specif,specify,104,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:611,interoperability,specif,specified,611,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:795,performance,time,time,795,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:823,safety,test,tested,823,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:853,safety,updat,updated,853,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:314,security,model,model,314,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:482,security,access,access,482,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:522,security,model,model,522,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:684,security,model,model,684,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:853,security,updat,updated,853,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/pull/15985:823,testability,test,tested,823,"[ntuple] Add `RNTupleModel` argument to `RNTupleProcessor` constructor; This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15985
https://github.com/root-project/root/issues/15986:1185,availability,Error,Error,1185,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1481,availability,Operat,Operating,1481,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1303,deployability,fail,failed,1303,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1411,deployability,version,version,1411,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1430,deployability,Instal,Installation,1430,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1451,deployability,Build,Build,1451,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:552,integrability,sub,substantial,552,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1411,integrability,version,version,1411,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1411,modifiability,version,version,1411,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1185,performance,Error,Error,1185,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:366,reliability,doe,does,366,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1303,reliability,fail,failed,1303,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:501,safety,compl,complain,501,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1185,safety,Error,Error,1185,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:501,security,compl,complain,501,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:795,security,Team,Team,795,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1531,testability,context,context,1531,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1005,usability,help,help,1005,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/issues/15986:1185,usability,Error,Error,1185,"Problems with TUri compilation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. I use often the `TUri` class to precompile file names when opening files. In the past all this worked:. ```. TUri uri1(""EcalBarrel.gdml"");. TUri uri2(""file://EcalBarrel.gdml"");. TUri uri3(""file://./EcalBarrel.gdml"");. ```. now after sync'ing with master this does not work anymore. Any invocation results in a SEGV. - Is this a real problem in ROOT or. - What do I wrong. I know one should not complain about the HEAD, but this looks to be very substantial.... Thanks a lot for clarifying. ### Reproducer. from the ROOT prompt:. ```. $> root.exe. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 04 2024, 12:35:26 |. | From heads/master@v6-31-01-2515-g03703814ef |. | With g++-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root[0] TUri uri(""blabla.txt""). ```. Result:. ```. Error in <Compile>: compilation of TPRegexp(^(/(?:[[:alpha:][:digit:]-._~!$&'()*+,;=:@]|%[0-9A-Fa-f][0-9A-Fa-f])*)*$) failed at: 25 because invalid range in character class. *** Break *** segmentation violation. ```. ### ROOT version. Head. ### Installation method. Build from source (HEAD). ### Operating system. Linux / Ubuntu . ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15986
https://github.com/root-project/root/pull/15987:126,deployability,updat,updated,126,[skip-ci] fix broken RFC link; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15987:96,safety,test,tested,96,[skip-ci] fix broken RFC link; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15987:126,safety,updat,updated,126,[skip-ci] fix broken RFC link; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15987:126,security,updat,updated,126,[skip-ci] fix broken RFC link; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15987:96,testability,test,tested,96,[skip-ci] fix broken RFC link; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15987
https://github.com/root-project/root/pull/15988:1152,availability,error,error,1152,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1364,deployability,updat,updated,1364,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:57,energy efficiency,core,core,57,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:573,energy efficiency,core,core,573,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:85,interoperability,compatib,compatible,85,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1152,performance,error,error,1152,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:934,reliability,doe,does,934,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1152,safety,error,error,1152,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1334,safety,test,tested,1334,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1364,safety,updat,updated,1364,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1250,security,sign,sign,1250,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1364,security,updat,updated,1364,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1334,testability,test,tested,1334,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1152,usability,error,error,1152,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15988:1266,usability,indicat,indicating,1266,"TUri fixes; # This Pull request:. ## Changes or fixes:. [core] Make TUri class PCRE2 compatible. . PCRE2 has a stricter regular expression syntax parsing than PCRE. Some non-conforming regular expressions that were accepted by PCRE are. correcrly rejected by PCRE2. . Some of the regular expressions used by the TUri class do not follow. the syntax rules and were relying on them being acceped by PCRE. anyway. This commit corrects the syntax of these expressions so that. they are now accepted by PCRE2. The corrected expressions still work. correctly with the old PCRE. [core] Correct the regular expression for the scheme part in TUri class. . RFC 3986 (https://datatracker.ietf.org/doc/html/rfc3986) defines the. scheme part of a URI as:. . scheme = ALPHA *( ALPHA / DIGIT / ""+"" / ""-"" / ""."" ). . The regular expression for finding the scheme part in the TUri class. was defined as. . ^[[:alpha:]][[:alpha:][:digit:]+-.]*$. . This does not match the definition in the RFC, since +-. in regular. expression syntax is the range of ascii codes from '+' to '.', which. means '+', ',', '-' and '.'. I.e. the ',' is included in the regular. expression in error. This commit adds a backslash escape to the '-' so. that it is interpreted as a literal '-' sign instead of indicating a. range in the regular expression. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #15986.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15988
https://github.com/root-project/root/pull/15990:5,security,Sign,Sign,5,[CI] Sign Windows binaries; Should fix https://github.com/root-project/root/issues/15896.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15990
https://github.com/root-project/root/pull/15991:117,deployability,patch,patch,117,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:23,energy efficiency,model,model,23,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:154,energy efficiency,model,model,154,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:29,integrability,wrap,wrapper,29,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:84,integrability,wrap,wrapper,84,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:29,interoperability,wrapper,wrapper,29,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:84,interoperability,wrapper,wrapper,84,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:117,safety,patch,patch,117,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:23,security,model,model,23,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:117,security,patch,patch,117,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15991:154,security,model,model,154,"[ntuple] Remove column model wrapper; The _column model_ turned into an unnecessary wrapper for the column type. The patch replaces the use of the column model by using directly the column type. Along with it, some unused flags of the column information in the header are removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15991
https://github.com/root-project/root/pull/15992:261,deployability,Depend,Depends,261,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:354,deployability,updat,updated,354,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:261,integrability,Depend,Depends,261,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:261,modifiability,Depend,Depends,261,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:261,safety,Depend,Depends,261,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:324,safety,test,tested,324,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:354,safety,updat,updated,354,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:354,security,updat,updated,354,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:261,testability,Depend,Depends,261,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15992:324,testability,test,tested,324,[ntuple] Allow changing compression of sources in RNTupleMerger; # This Pull request:. gives RNTupleMerger the capability of changing the source RNTuples' compression while doing the merging. This can also be used to change the compression of a single RNTuple. Depends on #15954 . ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15992
https://github.com/root-project/root/pull/15993:21,integrability,batch,batch,21,"[webgui] disable web batch mode for `--web=server:port` ; When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15993
https://github.com/root-project/root/pull/15993:21,performance,batch,batch,21,"[webgui] disable web batch mode for `--web=server:port` ; When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15993
https://github.com/root-project/root/pull/15993:139,usability,widget,widget,139,"[webgui] disable web batch mode for `--web=server:port` ; When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15993
https://github.com/root-project/root/pull/15994:21,integrability,batch,batch,21,"[webgui] disable web batch mode for --web=server [6.32]; Backport of #15993 . When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15994
https://github.com/root-project/root/pull/15994:21,performance,batch,batch,21,"[webgui] disable web batch mode for --web=server [6.32]; Backport of #15993 . When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15994
https://github.com/root-project/root/pull/15994:159,usability,widget,widget,159,"[webgui] disable web batch mode for --web=server [6.32]; Backport of #15993 . When one runs with `root -b --web=server:port`,. http server will be started and widget URL will be printed. . Before this commit -b flag fully suppress http server creation. Partially resolves: https://root-forum.cern.ch/t/60086/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15994
https://github.com/root-project/root/issues/15996:203,availability,error,error,203,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:872,availability,error,errors,872,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1543,availability,Operat,Operating,1543,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:882,deployability,Fail,Failed,882,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1458,deployability,version,version,1458,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1499,deployability,Instal,Installation,1499,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1458,integrability,version,version,1458,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1458,modifiability,version,version,1458,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:203,performance,error,error,203,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:872,performance,error,errors,872,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:25,reliability,doe,does,25,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:882,reliability,Fail,Failed,882,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:203,safety,error,error,203,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:872,safety,error,errors,872,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:34,testability,understand,understand,34,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:1583,testability,context,context,1583,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:203,usability,error,error,203,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:481,usability,user,user,481,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/issues/15996:872,usability,error,errors,872,"[PyROOT] cppyy.ll.cast() does not understand the type of a branch (invocation through GetBranchAttr); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The new cppyy produces an error when we try to call GetBranchAttr on one of our DataVector branches. . ### Reproducer. **Reproducer using only the ATLAS environment**, no files necessary:. ```back. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase . source $ATLAS_LOCAL_ROOT_BASE/user/atlasLocalSetup.sh. asetup main--dev4LCG,latest,Athena. python. ```. ```python. import ROOT, cppyy.ll. ROOT.TClass.GetClass('DataVector<xAOD::PixelCluster_v1>').HasDictionary(). ```. ```txt. True. ```. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. TypeError: Could not find ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>"" (set cppyy.set_debug() for C++ errors):. Failed to instantiate ""cppyy_cast<DataVector<xAOD::PixelCluster_v1>>(int)"". ```. but using a typedef to the DataVector works (note the real type of the returned object):. ```python. cppyy.ll.cast['xAOD::PixelClusterContainer_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x11cbd2c0>. ```. and after the previous call autoloaded some libraries, the real type starts to work as well:. ```python. cppyy.ll.cast['DataVector<xAOD::PixelCluster_v1>'](0). ```. ```txt. <cppyy.gbl.DataVector<xAOD::PixelCluster_v1> object at 0x1f542770>. ```. ### ROOT version. 6.32+, possibly since 6.30. ### Installation method. SFT dev nightlies. ### Operating system. alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15996
https://github.com/root-project/root/pull/15997:112,deployability,releas,release,112,"[v632] TUri fixes for PCRE 2; Backport of #15988. Doesn't need to backported further, because 6.32 is the first release that supports PCRE 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15997
https://github.com/root-project/root/pull/15997:50,reliability,Doe,Doesn,50,"[v632] TUri fixes for PCRE 2; Backport of #15988. Doesn't need to backported further, because 6.32 is the first release that supports PCRE 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15997
https://github.com/root-project/root/pull/15997:125,usability,support,supports,125,"[v632] TUri fixes for PCRE 2; Backport of #15988. Doesn't need to backported further, because 6.32 is the first release that supports PCRE 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15997
https://github.com/root-project/root/pull/16000:517,availability,failur,failure,517,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:12,deployability,fail,failing,12,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:117,deployability,fail,failing,117,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:149,deployability,fail,failing,149,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:428,deployability,fail,fail,428,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:517,deployability,fail,failure,517,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:567,deployability,patch,patch,567,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:711,deployability,fail,failing,711,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:810,deployability,updat,updated,810,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:583,energy efficiency,Current,Currently,583,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:98,performance,performance issu,performance issues,98,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:257,performance,memor,memory,257,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:498,performance,performance issu,performance issues,498,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:517,performance,failur,failure,517,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:12,reliability,fail,failing,12,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:117,reliability,fail,failing,117,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:149,reliability,fail,failing,149,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:428,reliability,fail,fail,428,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:517,reliability,fail,failure,517,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:711,reliability,fail,failing,711,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:32,safety,test,tests,32,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:89,safety,test,test,89,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:125,safety,test,tests,125,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:169,safety,test,tests,169,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:419,safety,test,tests,419,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:567,safety,patch,patch,567,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:719,safety,test,tests,719,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:780,safety,test,tested,780,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:810,safety,updat,updated,810,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:567,security,patch,patch,567,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:810,security,updat,updated,810,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:32,testability,test,tests,32,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:89,testability,test,test,89,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:125,testability,test,tests,125,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:169,testability,test,tests,169,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:419,testability,test,tests,419,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:719,testability,test,tests,719,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:780,testability,test,tested,780,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:98,usability,perform,performance,98,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:257,usability,memor,memory,257,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:464,usability,behavi,behavior,464,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16000:498,usability,perform,performance,498,"[cling] Fix failing python enum tests in cppyy; # This Pull request:. Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:. - `roottest-python-cpp-cpp`. - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16000
https://github.com/root-project/root/pull/16001:237,deployability,updat,updated,237,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:38,modifiability,extens,extension,38,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:207,safety,test,tested,207,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:237,safety,updat,updated,237,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:237,security,updat,updated,237,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16001:207,testability,test,tested,207,[hadd] allow ROOT files without .root extension; # This Pull request:. ## Changes or fixes:. Fixes https://root-forum.cern.ch/t/change-to-hadd-that-breaks-previously-working-code/60126. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16001
https://github.com/root-project/root/pull/16002:173,availability,error,error,173,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:284,deployability,updat,updated,284,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:115,performance,time,time,115,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:173,performance,error,error,173,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:173,safety,error,error,173,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:254,safety,test,tested,254,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:284,safety,updat,updated,284,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:284,security,updat,updated,284,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:16,testability,regress,regression,16,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:162,testability,regress,regression,162,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:254,testability,test,tested,254,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16002:173,usability,error,error,173,[Pymva] disable regression keras check; Given the very small statistics used (especially on MAcoS) due to th eslow time in evaluating we disable the check on the regression error obtained. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16002
https://github.com/root-project/root/pull/16003:41,deployability,manag,management,41,[RF] Some improvements in RooFits memory management; * Make ROOT compile again also with -DROOFIT_MEMORY_SAFE_INTERFACES. * Don't showcase `RooAbsCollection::addOwned()` in PyROOT. * Add overload of `RooAbsCollection::replace` for owning collections. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16003
https://github.com/root-project/root/pull/16003:41,energy efficiency,manag,management,41,[RF] Some improvements in RooFits memory management; * Make ROOT compile again also with -DROOFIT_MEMORY_SAFE_INTERFACES. * Don't showcase `RooAbsCollection::addOwned()` in PyROOT. * Add overload of `RooAbsCollection::replace` for owning collections. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16003
https://github.com/root-project/root/pull/16003:34,performance,memor,memory,34,[RF] Some improvements in RooFits memory management; * Make ROOT compile again also with -DROOFIT_MEMORY_SAFE_INTERFACES. * Don't showcase `RooAbsCollection::addOwned()` in PyROOT. * Add overload of `RooAbsCollection::replace` for owning collections. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16003
https://github.com/root-project/root/pull/16003:41,safety,manag,management,41,[RF] Some improvements in RooFits memory management; * Make ROOT compile again also with -DROOFIT_MEMORY_SAFE_INTERFACES. * Don't showcase `RooAbsCollection::addOwned()` in PyROOT. * Add overload of `RooAbsCollection::replace` for owning collections. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16003
https://github.com/root-project/root/pull/16003:34,usability,memor,memory,34,[RF] Some improvements in RooFits memory management; * Make ROOT compile again also with -DROOFIT_MEMORY_SAFE_INTERFACES. * Don't showcase `RooAbsCollection::addOwned()` in PyROOT. * Add overload of `RooAbsCollection::replace` for owning collections. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16003
https://github.com/root-project/root/pull/16004:101,usability,document,documentation,101,"[skip-ci][ntuple] Remove `Unwrap` from inspector doc; The call to `Unwrap` in the `RNTupleInspector` documentation is a remnant from when `Create` still returned an `RResult` pointer. This is not the case anymore, so the code example should reflect that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16004
https://github.com/root-project/root/pull/16005:798,deployability,observ,observers,798,"[webgui] Improve web page reload; Up to now only Ctrl-R handler was able to correctly reload ROOT web window,. Now new connection key generated immediately after connection established and provided to the client. Client insert new key in widget URL. Therefore direct page reload with browser buttons will work as well. And reload can be started immediately - no need to wait on response from server. Partially address https://root-forum.cern.ch/t/web-gui-in-root-6-32-00-how-to-handle-multiple-windows/60086/. Provide special handling for Qt5/Qt6/CEF displays - there disconnect event missing by reload . and therefore newkey is not activated. . In web canvas preserve reconnected client on first place if it was before. . This ensure that only that client can modify canvas - all others are just ""observers""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16005
https://github.com/root-project/root/pull/16005:579,integrability,event,event,579,"[webgui] Improve web page reload; Up to now only Ctrl-R handler was able to correctly reload ROOT web window,. Now new connection key generated immediately after connection established and provided to the client. Client insert new key in widget URL. Therefore direct page reload with browser buttons will work as well. And reload can be started immediately - no need to wait on response from server. Partially address https://root-forum.cern.ch/t/web-gui-in-root-6-32-00-how-to-handle-multiple-windows/60086/. Provide special handling for Qt5/Qt6/CEF displays - there disconnect event missing by reload . and therefore newkey is not activated. . In web canvas preserve reconnected client on first place if it was before. . This ensure that only that client can modify canvas - all others are just ""observers""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16005
https://github.com/root-project/root/pull/16005:761,security,modif,modify,761,"[webgui] Improve web page reload; Up to now only Ctrl-R handler was able to correctly reload ROOT web window,. Now new connection key generated immediately after connection established and provided to the client. Client insert new key in widget URL. Therefore direct page reload with browser buttons will work as well. And reload can be started immediately - no need to wait on response from server. Partially address https://root-forum.cern.ch/t/web-gui-in-root-6-32-00-how-to-handle-multiple-windows/60086/. Provide special handling for Qt5/Qt6/CEF displays - there disconnect event missing by reload . and therefore newkey is not activated. . In web canvas preserve reconnected client on first place if it was before. . This ensure that only that client can modify canvas - all others are just ""observers""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16005
https://github.com/root-project/root/pull/16005:798,testability,observ,observers,798,"[webgui] Improve web page reload; Up to now only Ctrl-R handler was able to correctly reload ROOT web window,. Now new connection key generated immediately after connection established and provided to the client. Client insert new key in widget URL. Therefore direct page reload with browser buttons will work as well. And reload can be started immediately - no need to wait on response from server. Partially address https://root-forum.cern.ch/t/web-gui-in-root-6-32-00-how-to-handle-multiple-windows/60086/. Provide special handling for Qt5/Qt6/CEF displays - there disconnect event missing by reload . and therefore newkey is not activated. . In web canvas preserve reconnected client on first place if it was before. . This ensure that only that client can modify canvas - all others are just ""observers""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16005
https://github.com/root-project/root/pull/16005:238,usability,widget,widget,238,"[webgui] Improve web page reload; Up to now only Ctrl-R handler was able to correctly reload ROOT web window,. Now new connection key generated immediately after connection established and provided to the client. Client insert new key in widget URL. Therefore direct page reload with browser buttons will work as well. And reload can be started immediately - no need to wait on response from server. Partially address https://root-forum.cern.ch/t/web-gui-in-root-6-32-00-how-to-handle-multiple-windows/60086/. Provide special handling for Qt5/Qt6/CEF displays - there disconnect event missing by reload . and therefore newkey is not activated. . In web canvas preserve reconnected client on first place if it was before. . This ensure that only that client can modify canvas - all others are just ""observers""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16005
https://github.com/root-project/root/pull/16006:236,energy efficiency,model,model,236,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:642,energy efficiency,model,models,642,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:374,interoperability,incompatib,incompatible,374,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:712,interoperability,mismatch,mismatch,712,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:360,performance,disk,disk,360,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:236,security,model,model,236,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:642,security,model,models,642,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:13,usability,support,support,13,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:634,usability,support,support,634,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16006:780,usability,effectiv,effectively,780,"[ntuple] Add support for reconstructing projected fields; Projected fields, so far, were read back as plain fields. This is useful for typical reading use cases. When we want to merge, e.g., it is more useful however to reconstruct the model exactly as it was written, including the projected fields. For this to work, the field mappings need to be written to disk (forward incompatible change). While projected fields use alias columns, not all fields have an attached column. So from the column relationship it is in general not possible to reconstruct the field relationship described by projected fields. Note that we still don't support models with projected fields in the RNTuple reader. The reason is the mismatch between RNTupleReader and RNTupleWriter: the RNTupleWriter effectively writes all the fields, projected or not. The RNTupleReader, however, would only read back non-projected fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16006
https://github.com/root-project/root/pull/16007:5,deployability,Updat,Updates,5,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:100,deployability,depend,depend,100,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:121,deployability,releas,release,121,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:100,integrability,depend,depend,100,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:100,modifiability,depend,depend,100,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:5,safety,Updat,Updates,5,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:100,safety,depend,depend,100,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:150,safety,valid,validate,150,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:5,security,Updat,Updates,5,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:150,security,validat,validate,150,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16007:100,testability,depend,depend,100,"[RF] Updates to the RooFit code generation; This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16007
https://github.com/root-project/root/pull/16008:103,deployability,instal,install-root-in-my-directory-in-a-share-server,103,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:32,integrability,compon,components,32,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:192,integrability,compon,components,192,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:32,interoperability,compon,components,32,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:137,interoperability,share,share-server,137,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:192,interoperability,compon,components,192,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:32,modifiability,compon,components,32,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:192,modifiability,compon,components,192,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:206,safety,avoid,avoid,206,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:8,testability,Simpl,Simplify,8,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:166,testability,simpl,simply,166,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:8,usability,Simpl,Simplify,8,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16008:166,usability,simpl,simply,166,[CMake] Simplify search for X11 components; Inspired by this forum post:. https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16008
https://github.com/root-project/root/pull/16009:37,deployability,API,API,37,[ntuple] fix RNTupleMerger using old API; Fix merge issue for latest commit (using `columnDesc.GetModel()` which was recently removed),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16009
https://github.com/root-project/root/pull/16009:37,integrability,API,API,37,[ntuple] fix RNTupleMerger using old API; Fix merge issue for latest commit (using `columnDesc.GetModel()` which was recently removed),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16009
https://github.com/root-project/root/pull/16009:37,interoperability,API,API,37,[ntuple] fix RNTupleMerger using old API; Fix merge issue for latest commit (using `columnDesc.GetModel()` which was recently removed),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16009
https://github.com/root-project/root/pull/16010:95,availability,error,error,95,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:232,availability,error,errors,232,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:159,integrability,buffer,buffer,159,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:95,performance,error,error,95,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:232,performance,error,errors,232,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:271,performance,memor,memory,271,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:95,safety,error,error,95,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:232,safety,error,errors,232,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:95,usability,error,error,95,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:232,usability,error,errors,232,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16010:271,usability,memor,memory,271,"[ntuple] fix wrong index being used in RNTupleMerger; # This Pull request:. fixes a copy-paste error resulting in the wrong index being used to assign the new buffer to the sealedPage in RNTupleMerger. This could result not only in errors in the merged file, but also in memory corruption.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16010
https://github.com/root-project/root/pull/16011:176,energy efficiency,Core,Core,176,[PyROOT] Don't link CPyCppyy against cppyy_backend; This is also not done upstream:. https://github.com/wlav/CPyCppyy/blob/master/CMakeLists.txt. We only need to link against `Core` because of the TString converter. I'm opening this PR now because we talked about this in the last cppyy meeting.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16011
https://github.com/root-project/root/pull/16012:31,availability,Operat,Operators,31,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:142,availability,Operat,Operators,142,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:41,deployability,updat,updated,41,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:95,deployability,Updat,Updates,95,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:342,deployability,Updat,Updated,342,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:525,deployability,Updat,Updated,525,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:453,energy efficiency,model,models,453,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:53,modifiability,paramet,parametric,53,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:180,modifiability,paramet,parametric,180,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:409,modifiability,paramet,parametric,409,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:41,safety,updat,updated,41,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:95,safety,Updat,Updates,95,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:161,safety,input,input,161,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:342,safety,Updat,Updated,342,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:436,safety,test,tests,436,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:495,safety,Test,Tested,495,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:525,safety,Updat,Updated,525,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:41,security,updat,updated,41,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:95,security,Updat,Updates,95,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:342,security,Updat,Updated,342,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:453,security,model,models,453,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:525,security,Updat,Updated,525,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:436,testability,test,tests,436,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:495,testability,Test,Tested,495,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:161,usability,input,input,161,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16012:537,usability,document,documentation,537,"[tmva][sofie] Binary and Unary Operators updated for parametric tensors; # This Pull Request:. Updates the implementation of Binary and Unary Operators to parse input tensors with parametric shapes, such as `{batch_size1, dim1}`. The method to initialize the output tensor shape can be further improved in the future. ## Changes or Fixes:. - Updated implementation in the respective ROperator files to handle parametric shapes. - Added tests as well as models for the same. ## Checklist:. - [x] Tested changes locally. - [ ] Updated the documentation (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16012
https://github.com/root-project/root/pull/16013:540,deployability,updat,updated,540,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:334,integrability,coupl,couple,334,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:334,modifiability,coupl,couple,334,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:54,safety,test,tests,54,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:395,safety,test,tests,395,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:510,safety,test,tested,510,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:540,safety,updat,updated,540,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:540,security,updat,updated,540,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:54,testability,test,tests,54,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:334,testability,coupl,couple,334,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:395,testability,test,tests,395,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:510,testability,test,tested,510,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:220,usability,Effectiv,Effectively,220,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16013:245,usability,user,users,245,"[ntuple] fix change compression in RNTupleMerger, add tests; # This Pull request:. - makes it so that RNTupleMerger reads the outFile's compression settings and changes the destination RNTuple's compression accordingly. Effectively, this allows users to select the out RNTuple compression with the `-f[0-9]` flag of `hadd`. - fixes a couple of bugs in the compression changing code. - adds some tests for it. - related PR in [roottest](https://github.com/root-project/roottest/pull/1143). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16013
https://github.com/root-project/root/pull/16014:1650,availability,operat,operator,1650,"PPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:4,deployability,updat,updates,4,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:39,deployability,manag,management,39,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2786,deployability,log,log,2786,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2835,deployability,log,log,2835,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2911,deployability,log,log,2911,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2939,deployability,log,log,2939,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:3014,deployability,log,log,3014,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:39,energy efficiency,manag,management,39,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:1615,energy efficiency,alloc,alloc,1615,"63: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:1763,integrability,Wrap,WrapperCall,1763,"x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the befor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:306,interoperability,Mismatch,Mismatched,306,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:1763,interoperability,Wrapper,WrapperCall,1763,"x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the befor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:101,modifiability,scenario,scenario,101,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:32,performance,memor,memory,32,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:4,safety,updat,updates,4,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:39,safety,manag,management,39,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2786,safety,log,log,2786,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2835,safety,log,log,2835,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2911,safety,log,log,2911,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2939,safety,log,log,2939,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:3014,safety,log,log,3014,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:4,security,updat,updates,4,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2786,security,log,log,2786,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2835,security,log,log,2835,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2911,security,log,log,2911,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2939,security,log,log,2939,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:3014,security,log,log,3014,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2786,testability,log,log,2786,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2835,testability,log,log,2835,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2911,testability,log,log,2911,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2939,testability,log,log,2939,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:3014,testability,log,log,3014,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:32,usability,memor,memory,32,"Two updates to clingwrapper for memory management; The first commit is to directly fix the following scenario. Consider. ```python. # simple_class.py. import ROOT. ROOT.gInterpreter.Declare(""class foo{};""). ROOT.foo(). ```. Then. ```. $: valgrind python simple_class.py. ```. Will report. ```. ==2728568== Mismatched free() / delete / delete []. ==2728568== at 0x4845B2C: free (vg_replace_malloc.c:985). ==2728568== by 0x1380385C: Cppyy::Destruct(unsigned long, void*) (clingwrapper.cxx:716). ==2728568== by 0x317B3E14: CPyCppyy::op_dealloc_nofree(CPyCppyy::CPPInstance*) (CPPInstance.cxx:222). ==2728568== by 0x317B4563: CPyCppyy::op_dealloc(CPyCppyy::CPPInstance*) (CPPInstance.cxx:418). ==2728568== by 0x4AA0834: subtype_dealloc (typeobject.c:2051). ==2728568== by 0x498B90B: _PyEval_EvalFrameDefault.cold (generated_cases.c.h:256). ==2728568== by 0x4AE8B35: PyEval_EvalCode (ceval.c:578). ==2728568== by 0x4B0EDB9: run_eval_code_obj (pythonrun.c:1722). ==2728568== by 0x4B0947D: run_mod (pythonrun.c:1743). ==2728568== by 0x4B2D492: pyrun_file (pythonrun.c:1643). ==2728568== by 0x4B2C689: _PyRun_SimpleFileObject (pythonrun.c:433). ==2728568== by 0x4B2C3BE: _PyRun_AnyFileObject (pythonrun.c:78). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstruc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2859,usability,user,user-attachments,2859,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:2963,usability,user,user-attachments,2963,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16014:3162,usability,close,close,3162,"1: UnknownInlinedFun (main.c:360). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:379). ==2728568== by 0x4B1B291: UnknownInlinedFun (main.c:629). ==2728568== by 0x4B1B291: Py_RunMain (main.c:709). ==2728568== by 0x4AD100B: Py_BytesMain (main.c:763). ==2728568== by 0x4EE3149: (below main) (libc_start_call_main.h:58). ==2728568== Address 0x1d0d4290 is 0 bytes inside a block of size 1 alloc'd. ==2728568== at 0x4842F95: operator new(unsigned long) (vg_replace_malloc.c:483). ==2728568== by 0x3735A021: ??? ==2728568== by 0x13803C9D: WrapperCall(long, unsigned long, void*, void*, void*) (clingwrapper.cxx:802). ==2728568== by 0x138042CD: Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (clingwrapper.cxx:895). ==2728568== by 0x317DEB68: GILCallConstructor(long, unsigned long, CPyCppyy::CallContext*) (Executors.cxx:99). ==2728568== by 0x317E2622: CPyCppyy::(anonymous namespace)::ConstructorExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:767). ==2728568== by 0x317BBCB5: CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:123). ==2728568== by 0x317BC401: CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:203). ==2728568== by 0x317BB389: CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (CPPMethod.cxx:956). ==2728568== by 0x317A99C7: CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object* const*, unsigned long, _object*, CPyCppyy::CallContext*) (CPPConstructor.cxx:133). ```. See also the before/after valgrind log for the first commit. * [simple_class_before.log](https://github.com/user-attachments/files/16178619/simple_class_before.log). * [simple_class_after.log](https://github.com/user-attachments/files/16178617/simple_class_after.log). While backporting the changes in the first commit I noticed the changes of the second commit and since they are thematically related and very close to the same function I thought to backport those as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16014
https://github.com/root-project/root/pull/16015:6,availability,Restor,Restore,6,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:210,availability,restor,restored,210,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:231,deployability,version,version,231,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:640,deployability,Modul,Module,640,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:812,deployability,updat,updated,812,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:231,integrability,version,version,231,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:231,modifiability,version,version,231,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:640,modifiability,Modul,Module,640,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:6,reliability,Restor,Restore,6,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:210,reliability,restor,restored,210,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:640,safety,Modul,Module,640,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:782,safety,test,tested,782,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:812,safety,updat,updated,812,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:635,security,auth,auth,635,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:740,security,auth,auth,740,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:812,security,updat,updated,812,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16015:782,testability,test,tested,782,"[net] Restore files erroneously removed from SrvAuth library; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/13387. Reported by @xkzl. DaemonUtils files have been restored from latest version before removal by @amadio in https://github.com/root-project/root/pull/2704 although it is unclear to me how these files ended up reaching SrvAuth, as they were removed from the glob there before that change (and in another target). Edit: Probably the problem dates back to the change from Make to CMake, see https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/Module.mk vs https://github.com/root-project/root/blob/79d2161aa4df0f169b2821db05e8254cdfda746c/net/auth/CMakeLists.txt. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16015
https://github.com/root-project/root/pull/16016:370,availability,ERROR,ERROR,370,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:449,availability,ERROR,ERROR,449,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:907,availability,error,errors,907,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:928,availability,failur,failure,928,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:247,deployability,Fail,Failed,247,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:725,deployability,fail,fails,725,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:899,deployability,FAIL,FAILED,899,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:928,deployability,fail,failure,928,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:971,deployability,updat,updated,971,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:984,deployability,version,version,984,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1005,deployability,version,version,1005,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1095,deployability,updat,updated,1095,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:195,energy efficiency,load,load-libs,195,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:338,energy efficiency,load,loaded,338,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:530,energy efficiency,load,loaded,530,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:754,energy efficiency,load,loaded,754,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:984,integrability,version,version,984,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1005,integrability,version,version,1005,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1030,interoperability,distribut,distribution,1030,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:984,modifiability,version,version,984,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1005,modifiability,version,version,1005,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:195,performance,load,load-libs,195,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:338,performance,load,loaded,338,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:370,performance,ERROR,ERROR,370,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:449,performance,ERROR,ERROR,449,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:530,performance,load,loaded,530,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:754,performance,load,loaded,754,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:907,performance,error,errors,907,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:928,performance,failur,failure,928,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:247,reliability,Fail,Failed,247,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:725,reliability,fail,fails,725,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:899,reliability,FAIL,FAILED,899,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:928,reliability,fail,failure,928,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:50,safety,test,test,50,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:141,safety,test,test,141,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:159,safety,Test,Test,159,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:323,safety,Test,Test,323,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:370,safety,ERROR,ERROR,370,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:449,safety,ERROR,ERROR,449,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:515,safety,Test,Test,515,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:631,safety,Except,Exception,631,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:720,safety,test,test,720,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:883,safety,test,test,883,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:907,safety,error,errors,907,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:971,safety,updat,updated,971,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1065,safety,test,tested,1065,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1095,safety,updat,updated,1095,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:971,security,updat,updated,971,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1095,security,updat,updated,1095,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:50,testability,test,test,50,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:141,testability,test,test,141,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:159,testability,Test,Test,159,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:323,testability,Test,Test,323,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:515,testability,Test,Test,515,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:720,testability,test,test,720,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:883,testability,test,test,883,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:1065,testability,test,tested,1065,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:370,usability,ERROR,ERROR,370,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:449,usability,ERROR,ERROR,449,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16016:907,usability,error,errors,907,"[pyroot] Whitelist libtbbmalloc in library import test; # This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test. ```. 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec. test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT ... ERROR. ======================================================================. ERROR: test_import (import_load_libs.ImportLoadLibs.test_import). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Exception: Found not whitelisted libraries after importing ROOT:. - libtbbmalloc. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ----------------------------------------------------------------------. Ran 1 test in 1.186s. FAILED (errors=1). ```. This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16016
https://github.com/root-project/root/pull/16018:112,deployability,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16018:118,deployability,releas,release,118,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16018:112,safety,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16018:112,security,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16018
https://github.com/root-project/root/pull/16019:48,deployability,API,API,48,[PyROOT] Implement TPython in terms of CPyCppyy API; Draft PR for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16019
https://github.com/root-project/root/pull/16019:48,integrability,API,API,48,[PyROOT] Implement TPython in terms of CPyCppyy API; Draft PR for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16019
https://github.com/root-project/root/pull/16019:48,interoperability,API,API,48,[PyROOT] Implement TPython in terms of CPyCppyy API; Draft PR for now.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16019
https://github.com/root-project/root/pull/16020:160,energy efficiency,model,model,160,"[ntuple] add field modifier to importer; This provides a mechanism to adjust the column representation (and other things, such as the field description) in the model created by the RNTupleImporter. We can use it, e.g., to import the AGC with half-precision floats.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16020
https://github.com/root-project/root/pull/16020:19,security,modif,modifier,19,"[ntuple] add field modifier to importer; This provides a mechanism to adjust the column representation (and other things, such as the field description) in the model created by the RNTupleImporter. We can use it, e.g., to import the AGC with half-precision floats.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16020
https://github.com/root-project/root/pull/16020:160,security,model,model,160,"[ntuple] add field modifier to importer; This provides a mechanism to adjust the column representation (and other things, such as the field description) in the model created by the RNTupleImporter. We can use it, e.g., to import the AGC with half-precision floats.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16020
https://github.com/root-project/root/pull/16021:112,deployability,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16021:118,deployability,releas,release,118,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16021:112,safety,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16021:112,security,patch,patch,112,[v632] Backports of recent fixes and improvements; Backports of recent fixes and improvements for the next 6.32 patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16021
https://github.com/root-project/root/pull/16022:84,deployability,API,API,84,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:359,deployability,updat,updated,359,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:76,energy efficiency,current,current,76,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:84,integrability,API,API,84,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:84,interoperability,API,API,84,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:273,safety,avoid,avoiding,273,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:329,safety,test,tested,329,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:359,safety,updat,updated,359,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:237,security,access,access,237,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:359,security,updat,updated,359,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:230,testability,simpl,simply,230,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:329,testability,test,tested,329,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:99,usability,user,user,99,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16022:230,usability,simpl,simply,230,"[ntuple] replace RClusterDescriptor::GetColumnIds with GetColumnRanges; The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16022
https://github.com/root-project/root/pull/16023:24,deployability,modul,modules,24,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:118,deployability,modul,modules,118,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:100,energy efficiency,load,loading,100,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:158,energy efficiency,core,core,158,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:24,modifiability,modul,modules,24,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:118,modifiability,modul,modules,118,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:100,performance,load,loading,100,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:24,safety,modul,modules,24,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:118,safety,modul,modules,118,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:174,safety,test,tested,174,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:85,security,control,control,85,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:85,testability,control,control,85,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/pull/16023:174,testability,test,tested,174,[doxygen] use jsroot v7 modules for embeding; Let use browser `import()` function to control proper loading of JSROOT modules. . No need to use older `JSRoot.core.js`. To be tested.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16023
https://github.com/root-project/root/issues/16024:2379,availability,Operat,Operating,2379,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:750,deployability,instal,installation,750,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1382,deployability,build,build,1382,"#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1413,deployability,instal,install,1413,"aths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1513,deployability,build,build,1513,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1821,deployability,instal,installation,1821,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1845,deployability,version,version,1845,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2335,deployability,Instal,Installation,2335,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2356,deployability,Build,Build,2356,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:453,integrability,sub,subdirectory,453,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:837,integrability,sub,subdirectory,837,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1541,integrability,sub,subdirectory,1541,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1575,integrability,sub,subdirectory,1575,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1649,integrability,sub,subdirectory,1649,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1845,integrability,version,version,1845,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:788,interoperability,standard,standard,788,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1450,interoperability,standard,standard,1450,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:272,modifiability,variab,variables,272,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:624,modifiability,variab,variable,624,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:980,modifiability,variab,variables,980,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1845,modifiability,version,version,1845,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:958,performance,time,times,958,"`thisroot.sh` tries to drop the wrong lib paths from the existing environment; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. `thisroot.sh` has a `clean_environment` function that tries to remove previously added ROOT entries from various path variables:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L32-L47. However, for the lib paths the entry removed is the `lib` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1592,performance,memor,memory,1592,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2000,security,Team,Team,2000,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2428,testability,context,context,2428,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:1592,usability,memor,memory,1592,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/issues/16024:2197,usability,help,help,2197,"b` subdirectory:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L41. while the path that gets added is the `@libdir@` variable:. https://github.com/root-project/root/blob/0d47873e53e2cbf6980146fd2e657629890c15d6/config/thisroot.sh#L101. For my installation (which I think is pretty standard), `@libdir@` resolves to the `lib/root` subdirectory. So the path entries do not match and no entry was removed. This means that sourcing `thisroot.sh` multiple times causes the path variables to accumulate ROOT entries. ### Reproducer. I am using ROOT built from source like this:. ```. cmake3 /opt/src/root \. -DCMAKE_INSTALL_PREFIX=/opt/root \. -DPYTHON_EXECUTABLE=${python_executable} \. -DPYTHON_INCLUDE_DIR=${python_include_dir} \. -DPYTHON_LIBRARY=${python_include_dir} \. -Dpython3:BOOL=ON \. -Dsoversion:BOOL=ON \. -Dtmva:BOOL=OFF \. -Dgnuinstall:BOOL=ON \. -Wno-de. cmake3 --build . --clean-first --target install. ```. I think this is pretty standard and that I am not doing anything special to cause the build to use the `lib/root` subdirectory instead of the `lib` subdirectory. My memory from experimenting in the past is that the `root` subdirectory under `lib/` gets added when using `gnuinstall=OFF` (and if `gnuinstall=ON` then I don't think you usually need to run `thisroot.sh` since it is a system wide installation). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 19 2024, 14:56:30 |. | From heads/master@tags/v6-30-02 |. | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source. ### Operating system. Linux (RHEL 8). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16024
https://github.com/root-project/root/pull/16025:16,deployability,Updat,Update,16,[Tree][skip-ci] Update documentation of TTreeFormula; fixes [ROOT-6822](https://its.cern.ch/jira/browse/ROOT-6822).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16025
https://github.com/root-project/root/pull/16025:16,safety,Updat,Update,16,[Tree][skip-ci] Update documentation of TTreeFormula; fixes [ROOT-6822](https://its.cern.ch/jira/browse/ROOT-6822).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16025
https://github.com/root-project/root/pull/16025:16,security,Updat,Update,16,[Tree][skip-ci] Update documentation of TTreeFormula; fixes [ROOT-6822](https://its.cern.ch/jira/browse/ROOT-6822).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16025
https://github.com/root-project/root/pull/16025:23,usability,document,documentation,23,[Tree][skip-ci] Update documentation of TTreeFormula; fixes [ROOT-6822](https://its.cern.ch/jira/browse/ROOT-6822).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16025
https://github.com/root-project/root/pull/16026:16,deployability,Updat,Update,16,[skip-ci][Core] Update TMethodCall documentation; fixes [ROOT-6968](https://its.cern.ch/jira/browse/ROOT-6968).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16026
https://github.com/root-project/root/pull/16026:10,energy efficiency,Core,Core,10,[skip-ci][Core] Update TMethodCall documentation; fixes [ROOT-6968](https://its.cern.ch/jira/browse/ROOT-6968).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16026
https://github.com/root-project/root/pull/16026:16,safety,Updat,Update,16,[skip-ci][Core] Update TMethodCall documentation; fixes [ROOT-6968](https://its.cern.ch/jira/browse/ROOT-6968).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16026
https://github.com/root-project/root/pull/16026:16,security,Updat,Update,16,[skip-ci][Core] Update TMethodCall documentation; fixes [ROOT-6968](https://its.cern.ch/jira/browse/ROOT-6968).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16026
https://github.com/root-project/root/pull/16026:35,usability,document,documentation,35,[skip-ci][Core] Update TMethodCall documentation; fixes [ROOT-6968](https://its.cern.ch/jira/browse/ROOT-6968).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16026
https://github.com/root-project/root/pull/16027:208,deployability,updat,updated,208,[thisroot] drop also potential path from gnuinstall=ON; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/pull/16027:178,safety,test,tested,178,[thisroot] drop also potential path from gnuinstall=ON; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/pull/16027:208,safety,updat,updated,208,[thisroot] drop also potential path from gnuinstall=ON; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/pull/16027:208,security,updat,updated,208,[thisroot] drop also potential path from gnuinstall=ON; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/pull/16027:178,testability,test,tested,178,[thisroot] drop also potential path from gnuinstall=ON; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16024. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16027
https://github.com/root-project/root/issues/16028:1892,availability,Operat,Operating,1892,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
